[
    {
        "method_name": "decode",
        "method_code": "public Resource<SVGorImage> decode(InputStream source, int w, int h) throws IOException {\n        byte[] array = new byte[source.available()];\n        source.read(array);\n        ByteArrayInputStream svgInputStream = new ByteArrayInputStream(array.clone());\n        ByteArrayInputStream pngInputStream = new ByteArrayInputStream(array.clone());\n\n        try {\n            SVG svg = SVG.getFromInputStream(svgInputStream);\n            source.close();\n            pngInputStream.close();\n\n            if (width > 0) {\n                svg.setDocumentWidth(width);\n            }\n            if (height > 0) {\n                svg.setDocumentHeight(height);\n            }\n            svg.setDocumentPreserveAspectRatio(PreserveAspectRatio.LETTERBOX);\n\n            return new SimpleResource<>(new SVGorImage(svg, null));\n        } catch (SVGParseException ex) {\n            Bitmap bitmap = BitmapFactory.decodeStream(pngInputStream);\n            return new SimpleResource<>(new SVGorImage(null, bitmap));\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled decode from SvgOrImageDecoder.java into Swift.\n\n        Input:\n\n        Method Name: decode\n\n        Method Code: public Resource<SVGorImage> decode(InputStream source, int w, int h) throws IOException {\n        byte[] array = new byte[source.available()];\n        source.read(array);\n        ByteArrayInputStream svgInputStream = new ByteArrayInputStream(array.clone());\n        ByteArrayInputStream pngInputStream = new ByteArrayInputStream(array.clone());\n\n        try {\n            SVG svg = SVG.getFromInputStream(svgInputStream);\n            source.close();\n            pngInputStream.close();\n\n            if (width > 0) {\n                svg.setDocumentWidth(width);\n            }\n            if (height > 0) {\n                svg.setDocumentHeight(height);\n            }\n            svg.setDocumentPreserveAspectRatio(PreserveAspectRatio.LETTERBOX);\n\n            return new SimpleResource<>(new SVGorImage(svg, null));\n        } catch (SVGParseException ex) {\n            Bitmap bitmap = BitmapFactory.decodeStream(pngInputStream);\n            return new SimpleResource<>(new SVGorImage(null, bitmap));\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nimport Foundation\nimport UIKit\n\nclass SVGorImage {\n    var svg: SVG?\n    var image: UIImage?\n    \n    init(svg: SVG?, image: UIImage?) {\n        self.svg = svg\n        self.image = image\n    }\n}\n\nclass SimpleResource<T> {\n    var resource: T\n    \n    init(_ resource: T) {\n        self.resource = resource\n    }\n}\n\nfunc decode(source: InputStream, width: Int, height: Int) throws -> SimpleResource<SVGorImage> {\n    let availableBytes = source.hasBytesAvailable ? source.availableBytes : 0\n    var array = [UInt8](repeating: 0, count: availableBytes)\n    source.read(&array, maxLength: availableBytes)\n    \n    let svgInputStream = InputStream(data: Data(array))\n    let pngInputStream = InputStream(data: Data(array))\n    \n    do {\n        let svg = try SVG.getFromInputStream(svgInputStream)\n        source.close()\n        pngInputStream.close()\n        \n        if width > 0 {\n            svg.setDocumentWidth(width)\n        }\n        if height > 0 {\n            svg.setDocumentHeight(height)\n        }\n        svg.setDocumentPreserveAspectRatio(.letterbox)\n        \n        return SimpleResource(SVGorImage(svg: svg, image: nil))\n    } catch {\n        let bitmap = UIImage(data: Data(array))\n        return SimpleResource(SVGorImage(svg: nil, image: bitmap))\n    }\n}\n```"
    },
    {
        "method_name": "getId",
        "method_code": "@Override\n    public String getId() {\n        return \"SvgDecoder.com.owncloud.android\";\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getId from SvgOrImageDecoder.java into Swift.\n\n        Input:\n\n        Method Name: getId\n\n        Method Code: @Override\n    public String getId() {\n        return \"SvgDecoder.com.owncloud.android\";\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getId() -> String {\n    return \"SvgDecoder.com.owncloud.android\"\n}\n```"
    }
]