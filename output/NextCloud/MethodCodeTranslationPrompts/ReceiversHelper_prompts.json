[
    {
        "method_name": "registerNetworkChangeReceiver",
        "method_code": "public static void registerNetworkChangeReceiver(final UploadsStorageManager uploadsStorageManager,\n                                                     final UserAccountManager accountManager,\n                                                     final ConnectivityService connectivityService,\n                                                     final PowerManagementService powerManagementService,\n                                                     final WalledCheckCache walledCheckCache) {\n        Context context = MainApp.getAppContext();\n\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(\"android.net.conn.CONNECTIVITY_CHANGE\");\n        intentFilter.addAction(\"android.net.wifi.STATE_CHANGE\");\n\n        BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                DNSCache.clear();\n                walledCheckCache.clear();\n                if (connectivityService.getConnectivity().isConnected()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n        };\n\n        ContextExtensionsKt.registerBroadcastReceiver(context, broadcastReceiver, intentFilter, ReceiverFlag.NotExported);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled registerNetworkChangeReceiver from ReceiversHelper.java into Swift.\n\n        Input:\n\n        Method Name: registerNetworkChangeReceiver\n\n        Method Code: public static void registerNetworkChangeReceiver(final UploadsStorageManager uploadsStorageManager,\n                                                     final UserAccountManager accountManager,\n                                                     final ConnectivityService connectivityService,\n                                                     final PowerManagementService powerManagementService,\n                                                     final WalledCheckCache walledCheckCache) {\n        Context context = MainApp.getAppContext();\n\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(\"android.net.conn.CONNECTIVITY_CHANGE\");\n        intentFilter.addAction(\"android.net.wifi.STATE_CHANGE\");\n\n        BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                DNSCache.clear();\n                walledCheckCache.clear();\n                if (connectivityService.getConnectivity().isConnected()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n        };\n\n        ContextExtensionsKt.registerBroadcastReceiver(context, broadcastReceiver, intentFilter, ReceiverFlag.NotExported);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nimport Foundation\nimport UIKit\n\nfunc registerNetworkChangeReceiver(uploadsStorageManager: UploadsStorageManager,\n                                   accountManager: UserAccountManager,\n                                   connectivityService: ConnectivityService,\n                                   powerManagementService: PowerManagementService,\n                                   walledCheckCache: WalledCheckCache) {\n    let context = MainApp.getAppContext()\n\n    let intentFilter = NotificationCenter.default\n    let connectivityChange = \"android.net.conn.CONNECTIVITY_CHANGE\"\n    let wifiStateChange = \"android.net.wifi.STATE_CHANGE\"\n\n    let broadcastReceiver = NotificationCenter.default.addObserver(forName: NSNotification.Name(rawValue: connectivityChange), object: nil, queue: nil) { notification in\n        DNSCache.clear()\n        walledCheckCache.clear()\n        if connectivityService.getConnectivity().isConnected() {\n            FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager: uploadsStorageManager,\n                                                   accountManager: accountManager,\n                                                   connectivityService: connectivityService,\n                                                   powerManagementService: powerManagementService)\n        }\n    }\n\n    NotificationCenter.default.addObserver(forName: NSNotification.Name(rawValue: wifiStateChange), object: nil, queue: nil, using: broadcastReceiver)\n}\n```"
    },
    {
        "method_name": "onReceive",
        "method_code": "@Override\n            public void onReceive(Context context, Intent intent) {\n                DNSCache.clear();\n                walledCheckCache.clear();\n                if (connectivityService.getConnectivity().isConnected()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }",
        "prompt": "\n        Please translate the following Java (Android) method titled onReceive from ReceiversHelper.java into Swift.\n\n        Input:\n\n        Method Name: onReceive\n\n        Method Code: @Override\n            public void onReceive(Context context, Intent intent) {\n                DNSCache.clear();\n                walledCheckCache.clear();\n                if (connectivityService.getConnectivity().isConnected()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onReceive(context: Context, intent: Intent) {\n    DNSCache.clear()\n    walledCheckCache.clear()\n    if connectivityService.getConnectivity().isConnected() {\n        FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager: uploadsStorageManager,\n                                               accountManager: accountManager,\n                                               connectivityService: connectivityService,\n                                               powerManagementService: powerManagementService)\n    }\n}\n```"
    },
    {
        "method_name": "registerPowerChangeReceiver",
        "method_code": "public static void registerPowerChangeReceiver(\n        final UploadsStorageManager uploadsStorageManager,\n        final UserAccountManager accountManager,\n        final ConnectivityService connectivityService,\n        final PowerManagementService powerManagementService\n                                                  ) {\n        Context context = MainApp.getAppContext();\n\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(Intent.ACTION_POWER_CONNECTED);\n        intentFilter.addAction(Intent.ACTION_POWER_DISCONNECTED);\n\n        BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                if (Intent.ACTION_POWER_CONNECTED.equals(intent.getAction())) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n        };\n\n        ContextExtensionsKt.registerBroadcastReceiver(context, broadcastReceiver, intentFilter, ReceiverFlag.NotExported);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled registerPowerChangeReceiver from ReceiversHelper.java into Swift.\n\n        Input:\n\n        Method Name: registerPowerChangeReceiver\n\n        Method Code: public static void registerPowerChangeReceiver(\n        final UploadsStorageManager uploadsStorageManager,\n        final UserAccountManager accountManager,\n        final ConnectivityService connectivityService,\n        final PowerManagementService powerManagementService\n                                                  ) {\n        Context context = MainApp.getAppContext();\n\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(Intent.ACTION_POWER_CONNECTED);\n        intentFilter.addAction(Intent.ACTION_POWER_DISCONNECTED);\n\n        BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                if (Intent.ACTION_POWER_CONNECTED.equals(intent.getAction())) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n        };\n\n        ContextExtensionsKt.registerBroadcastReceiver(context, broadcastReceiver, intentFilter, ReceiverFlag.NotExported);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nimport UIKit\n\nfunc registerPowerChangeReceiver(\n    uploadsStorageManager: UploadsStorageManager,\n    accountManager: UserAccountManager,\n    connectivityService: ConnectivityService,\n    powerManagementService: PowerManagementService\n) {\n    let context = MainApp.getAppContext()\n\n    let intentFilter = NotificationCenter.default\n    let powerConnected = Notification.Name(\"UIDeviceBatteryStateDidChange\")\n    \n    let broadcastReceiver = NotificationCenter.default.addObserver(forName: powerConnected, object: nil, queue: nil) { notification in\n        if UIDevice.current.batteryState == .charging {\n            FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager: uploadsStorageManager,\n                                                   accountManager: accountManager,\n                                                   connectivityService: connectivityService,\n                                                   powerManagementService: powerManagementService)\n        }\n    }\n\n    context.registerBroadcastReceiver(broadcastReceiver, intentFilter, ReceiverFlag.notExported)\n}\n```"
    },
    {
        "method_name": "onReceive",
        "method_code": "@Override\n            public void onReceive(Context context, Intent intent) {\n                if (Intent.ACTION_POWER_CONNECTED.equals(intent.getAction())) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }",
        "prompt": "\n        Please translate the following Java (Android) method titled onReceive from ReceiversHelper.java into Swift.\n\n        Input:\n\n        Method Name: onReceive\n\n        Method Code: @Override\n            public void onReceive(Context context, Intent intent) {\n                if (Intent.ACTION_POWER_CONNECTED.equals(intent.getAction())) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onReceive(context: Context, intent: Intent) {\n    if intent.action == Intent.ACTION_POWER_CONNECTED {\n        FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager: uploadsStorageManager,\n                                               accountManager: accountManager,\n                                               connectivityService: connectivityService,\n                                               powerManagementService: powerManagementService)\n    }\n}\n```"
    },
    {
        "method_name": "registerPowerSaveReceiver",
        "method_code": "public static void registerPowerSaveReceiver(\n        final UploadsStorageManager uploadsStorageManager,\n        final UserAccountManager accountManager,\n        final ConnectivityService connectivityService,\n        final PowerManagementService powerManagementService\n                                                ) {\n        Context context = MainApp.getAppContext();\n\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(\"android.os.action.POWER_SAVE_MODE_CHANGED\");\n\n        BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                if (!powerManagementService.isPowerSavingEnabled()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n        };\n\n        ContextExtensionsKt.registerBroadcastReceiver(context, broadcastReceiver, intentFilter, ReceiverFlag.NotExported);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled registerPowerSaveReceiver from ReceiversHelper.java into Swift.\n\n        Input:\n\n        Method Name: registerPowerSaveReceiver\n\n        Method Code: public static void registerPowerSaveReceiver(\n        final UploadsStorageManager uploadsStorageManager,\n        final UserAccountManager accountManager,\n        final ConnectivityService connectivityService,\n        final PowerManagementService powerManagementService\n                                                ) {\n        Context context = MainApp.getAppContext();\n\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(\"android.os.action.POWER_SAVE_MODE_CHANGED\");\n\n        BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                if (!powerManagementService.isPowerSavingEnabled()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n        };\n\n        ContextExtensionsKt.registerBroadcastReceiver(context, broadcastReceiver, intentFilter, ReceiverFlag.NotExported);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nimport Foundation\nimport UIKit\n\nfunc registerPowerSaveReceiver(\n    uploadsStorageManager: UploadsStorageManager,\n    accountManager: UserAccountManager,\n    connectivityService: ConnectivityService,\n    powerManagementService: PowerManagementService\n) {\n    let context = MainApp.getAppContext()\n\n    let intentFilter = NotificationCenter.default\n    let powerSaveModeChanged = Notification.Name(\"android.os.action.POWER_SAVE_MODE_CHANGED\")\n\n    let broadcastReceiver = NotificationCenter.default.addObserver(forName: powerSaveModeChanged, object: nil, queue: nil) { notification in\n        if !powerManagementService.isPowerSavingEnabled() {\n            FilesSyncHelper.restartUploadsIfNeeded(\n                uploadsStorageManager: uploadsStorageManager,\n                accountManager: accountManager,\n                connectivityService: connectivityService,\n                powerManagementService: powerManagementService\n            )\n        }\n    }\n\n    ContextExtensionsKt.registerBroadcastReceiver(context: context, broadcastReceiver: broadcastReceiver, intentFilter: intentFilter, receiverFlag: .notExported)\n}\n```"
    },
    {
        "method_name": "onReceive",
        "method_code": "@Override\n            public void onReceive(Context context, Intent intent) {\n                if (!powerManagementService.isPowerSavingEnabled()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }",
        "prompt": "\n        Please translate the following Java (Android) method titled onReceive from ReceiversHelper.java into Swift.\n\n        Input:\n\n        Method Name: onReceive\n\n        Method Code: @Override\n            public void onReceive(Context context, Intent intent) {\n                if (!powerManagementService.isPowerSavingEnabled()) {\n                    FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager,\n                                                           accountManager,\n                                                           connectivityService,\n                                                           powerManagementService);\n                }\n            }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onReceive(context: Context, intent: Intent) {\n    if !powerManagementService.isPowerSavingEnabled() {\n        FilesSyncHelper.restartUploadsIfNeeded(uploadsStorageManager: uploadsStorageManager,\n                                               accountManager: accountManager,\n                                               connectivityService: connectivityService,\n                                               powerManagementService: powerManagementService)\n    }\n}\n```"
    }
]