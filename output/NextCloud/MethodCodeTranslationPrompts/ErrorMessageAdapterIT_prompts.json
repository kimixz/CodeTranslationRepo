[
    {
        "method_name": "getErrorCauseMessageForForbiddenRemoval",
        "method_code": "@Test\n    public void getErrorCauseMessageForForbiddenRemoval() {\n        Resources resources = InstrumentationRegistry.getInstrumentation().getTargetContext().getResources();\n        User user = new MockUser(\"name\", ACCOUNT_TYPE);\n        Context context = MainApp.getAppContext();\n\n        String errorMessage = ErrorMessageAdapter.getErrorCauseMessage(\n            new RemoteOperationResult(RemoteOperationResult.ResultCode.FORBIDDEN),\n            new RemoveFileOperation(new OCFile(PATH_TO_DELETE),\n                                    false,\n                                    user,\n                                    false,\n                                    context,\n                                    new FileDataStorageManager(user, context.getContentResolver())),\n            resources\n                                                                      );\n\n        assertEquals(EXPECTED_ERROR_MESSAGE, errorMessage);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getErrorCauseMessageForForbiddenRemoval from ErrorMessageAdapterIT.java into Swift.\n\n        Input:\n\n        Method Name: getErrorCauseMessageForForbiddenRemoval\n\n        Method Code: @Test\n    public void getErrorCauseMessageForForbiddenRemoval() {\n        Resources resources = InstrumentationRegistry.getInstrumentation().getTargetContext().getResources();\n        User user = new MockUser(\"name\", ACCOUNT_TYPE);\n        Context context = MainApp.getAppContext();\n\n        String errorMessage = ErrorMessageAdapter.getErrorCauseMessage(\n            new RemoteOperationResult(RemoteOperationResult.ResultCode.FORBIDDEN),\n            new RemoveFileOperation(new OCFile(PATH_TO_DELETE),\n                                    false,\n                                    user,\n                                    false,\n                                    context,\n                                    new FileDataStorageManager(user, context.getContentResolver())),\n            resources\n                                                                      );\n\n        assertEquals(EXPECTED_ERROR_MESSAGE, errorMessage);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testGetErrorCauseMessageForForbiddenRemoval() {\n    let resources = Bundle.main\n    let user = MockUser(name: \"name\", accountType: ACCOUNT_TYPE)\n    let context = MainApp.getAppContext()\n\n    let errorMessage = ErrorMessageAdapter.getErrorCauseMessage(\n        result: RemoteOperationResult(resultCode: .forbidden),\n        operation: RemoveFileOperation(\n            file: OCFile(path: PATH_TO_DELETE),\n            isFolder: false,\n            user: user,\n            isSync: false,\n            context: context,\n            fileDataStorageManager: FileDataStorageManager(user: user, contentResolver: context.contentResolver)\n        ),\n        resources: resources\n    )\n\n    XCTAssertEqual(EXPECTED_ERROR_MESSAGE, errorMessage)\n}\n```"
    }
]