[
    {
        "method_name": "canProvideStoragePoints",
        "method_code": "@Override\n    public boolean canProvideStoragePoints() {\n        return !TextUtils.isEmpty(System.getenv(sSecondaryStorageEnvName));\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled canProvideStoragePoints from EnvironmentStoragePointProvider.java into Swift.\n\n        Input:\n\n        Method Name: canProvideStoragePoints\n\n        Method Code: @Override\n    public boolean canProvideStoragePoints() {\n        return !TextUtils.isEmpty(System.getenv(sSecondaryStorageEnvName));\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc canProvideStoragePoints() -> Bool {\n    return !(ProcessInfo.processInfo.environment[sSecondaryStorageEnvName]?.isEmpty ?? true)\n}\n```"
    },
    {
        "method_name": "getAvailableStoragePoint",
        "method_code": "@Override\n    public List<StoragePoint> getAvailableStoragePoint() {\n        List<StoragePoint> result = new Vector<>();\n\n        addEntriesFromEnv(result, sSecondaryStorageEnvName);\n\n        return result;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getAvailableStoragePoint from EnvironmentStoragePointProvider.java into Swift.\n\n        Input:\n\n        Method Name: getAvailableStoragePoint\n\n        Method Code: @Override\n    public List<StoragePoint> getAvailableStoragePoint() {\n        List<StoragePoint> result = new Vector<>();\n\n        addEntriesFromEnv(result, sSecondaryStorageEnvName);\n\n        return result;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func getAvailableStoragePoint() -> [StoragePoint] {\n    var result: [StoragePoint] = []\n\n    addEntriesFromEnv(&result, sSecondaryStorageEnvName)\n\n    return result\n}\n```"
    },
    {
        "method_name": "addEntriesFromEnv",
        "method_code": "private void addEntriesFromEnv(List<StoragePoint> result, String envName) {\n        String env = System.getenv(envName);\n        if (env != null) {\n            for (String p : env.split(\":\")) {\n                if (canBeAddedToAvailableList(result, p)) {\n                    result.add(new StoragePoint(p, p, StoragePoint.StorageType.EXTERNAL,\n                            StoragePoint.PrivacyType.PUBLIC));\n                }\n            }\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled addEntriesFromEnv from EnvironmentStoragePointProvider.java into Swift.\n\n        Input:\n\n        Method Name: addEntriesFromEnv\n\n        Method Code: private void addEntriesFromEnv(List<StoragePoint> result, String envName) {\n        String env = System.getenv(envName);\n        if (env != null) {\n            for (String p : env.split(\":\")) {\n                if (canBeAddedToAvailableList(result, p)) {\n                    result.add(new StoragePoint(p, p, StoragePoint.StorageType.EXTERNAL,\n                            StoragePoint.PrivacyType.PUBLIC));\n                }\n            }\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func addEntriesFromEnv(result: inout [StoragePoint], envName: String) {\n    if let env = ProcessInfo.processInfo.environment[envName] {\n        for p in env.split(separator: \":\") {\n            let path = String(p)\n            if canBeAddedToAvailableList(result: result, path: path) {\n                result.append(StoragePoint(path: path, name: path, storageType: .external, privacyType: .public))\n            }\n        }\n    }\n}\n```"
    }
]