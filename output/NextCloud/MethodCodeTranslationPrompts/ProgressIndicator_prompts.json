[
    {
        "method_name": "hasNextStep",
        "method_code": "public boolean hasNextStep() {\n        return mNumberOfSteps > mCurrentStep;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled hasNextStep from ProgressIndicator.java into Swift.\n\n        Input:\n\n        Method Name: hasNextStep\n\n        Method Code: public boolean hasNextStep() {\n        return mNumberOfSteps > mCurrentStep;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc hasNextStep() -> Bool {\n    return mNumberOfSteps > mCurrentStep\n}\n```"
    },
    {
        "method_name": "setNumberOfSteps",
        "method_code": "public void setNumberOfSteps(int steps) {\n        mNumberOfSteps = steps;\n        mDotsContainer.removeAllViews();\n        for (int i = 0; i < steps; ++i) {\n            ImageView iv = new ImageView(getContext());\n            iv.setImageDrawable(ResourcesCompat.getDrawable(getContext().getResources(), R.drawable.whats_new_progress_transition, null));\n            viewThemeUtils.platform.colorImageView(iv, ColorRole.ON_PRIMARY);\n            mDotsContainer.addView(iv);\n        }\n        animateToStep(1);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setNumberOfSteps from ProgressIndicator.java into Swift.\n\n        Input:\n\n        Method Name: setNumberOfSteps\n\n        Method Code: public void setNumberOfSteps(int steps) {\n        mNumberOfSteps = steps;\n        mDotsContainer.removeAllViews();\n        for (int i = 0; i < steps; ++i) {\n            ImageView iv = new ImageView(getContext());\n            iv.setImageDrawable(ResourcesCompat.getDrawable(getContext().getResources(), R.drawable.whats_new_progress_transition, null));\n            viewThemeUtils.platform.colorImageView(iv, ColorRole.ON_PRIMARY);\n            mDotsContainer.addView(iv);\n        }\n        animateToStep(1);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setNumberOfSteps(_ steps: Int) {\n    mNumberOfSteps = steps\n    mDotsContainer.subviews.forEach { $0.removeFromSuperview() }\n    for _ in 0..<steps {\n        let iv = UIImageView()\n        iv.image = UIImage(named: \"whats_new_progress_transition\")\n        viewThemeUtils.platform.colorImageView(iv, colorRole: .onPrimary)\n        mDotsContainer.addSubview(iv)\n    }\n    animateToStep(1)\n}\n```"
    },
    {
        "method_name": "animateToStep",
        "method_code": "public void animateToStep(int step) {\n        if (step < 1 || step > mNumberOfSteps) {\n            return;\n        }\n\n        if (mCurrentStep != -1) {\n            ImageView prevDot = (ImageView) mDotsContainer.getChildAt(mCurrentStep - 1);\n            TransitionDrawable transition = (TransitionDrawable) prevDot.getDrawable();\n            transition.resetTransition();\n        }\n\n        mCurrentStep = step;\n        ImageView dot = (ImageView) mDotsContainer.getChildAt(step - 1);\n        TransitionDrawable transition = (TransitionDrawable) dot.getDrawable();\n        transition.startTransition(500);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled animateToStep from ProgressIndicator.java into Swift.\n\n        Input:\n\n        Method Name: animateToStep\n\n        Method Code: public void animateToStep(int step) {\n        if (step < 1 || step > mNumberOfSteps) {\n            return;\n        }\n\n        if (mCurrentStep != -1) {\n            ImageView prevDot = (ImageView) mDotsContainer.getChildAt(mCurrentStep - 1);\n            TransitionDrawable transition = (TransitionDrawable) prevDot.getDrawable();\n            transition.resetTransition();\n        }\n\n        mCurrentStep = step;\n        ImageView dot = (ImageView) mDotsContainer.getChildAt(step - 1);\n        TransitionDrawable transition = (TransitionDrawable) dot.getDrawable();\n        transition.startTransition(500);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc animateToStep(step: Int) {\n    if step < 1 || step > mNumberOfSteps {\n        return\n    }\n\n    if mCurrentStep != -1 {\n        if let prevDot = mDotsContainer.subviews[mCurrentStep - 1] as? UIImageView,\n           let transition = prevDot.image as? TransitionDrawable {\n            transition.resetTransition()\n        }\n    }\n\n    mCurrentStep = step\n    if let dot = mDotsContainer.subviews[step - 1] as? UIImageView,\n       let transition = dot.image as? TransitionDrawable {\n        transition.startTransition(500)\n    }\n}\n```"
    },
    {
        "method_name": "setup",
        "method_code": "private void setup() {\n        MainApp.getAppComponent().inject(this);\n        viewThemeUtils = viewThemeUtilsFactory.withPrimaryAsBackground();\n        mDotsContainer = new LinearLayout(getContext());\n        mDotsContainer.setGravity(Gravity.CENTER);\n        FrameLayout.LayoutParams params = generateDefaultLayoutParams();\n        params.width = ViewGroup.LayoutParams.MATCH_PARENT;\n        params.height = ViewGroup.LayoutParams.MATCH_PARENT;\n        mDotsContainer.setLayoutParams(params);\n        addView(mDotsContainer);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setup from ProgressIndicator.java into Swift.\n\n        Input:\n\n        Method Name: setup\n\n        Method Code: private void setup() {\n        MainApp.getAppComponent().inject(this);\n        viewThemeUtils = viewThemeUtilsFactory.withPrimaryAsBackground();\n        mDotsContainer = new LinearLayout(getContext());\n        mDotsContainer.setGravity(Gravity.CENTER);\n        FrameLayout.LayoutParams params = generateDefaultLayoutParams();\n        params.width = ViewGroup.LayoutParams.MATCH_PARENT;\n        params.height = ViewGroup.LayoutParams.MATCH_PARENT;\n        mDotsContainer.setLayoutParams(params);\n        addView(mDotsContainer);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func setup() {\n    MainApp.getAppComponent().inject(self)\n    viewThemeUtils = viewThemeUtilsFactory.withPrimaryAsBackground()\n    mDotsContainer = UIStackView()\n    mDotsContainer.alignment = .center\n    let params = generateDefaultLayoutParams()\n    params.width = UIView.noIntrinsicMetric\n    params.height = UIView.noIntrinsicMetric\n    mDotsContainer.translatesAutoresizingMaskIntoConstraints = false\n    addSubview(mDotsContainer)\n    NSLayoutConstraint.activate([\n        mDotsContainer.leadingAnchor.constraint(equalTo: self.leadingAnchor),\n        mDotsContainer.trailingAnchor.constraint(equalTo: self.trailingAnchor),\n        mDotsContainer.topAnchor.constraint(equalTo: self.topAnchor),\n        mDotsContainer.bottomAnchor.constraint(equalTo: self.bottomAnchor)\n    ])\n}\n```"
    }
]