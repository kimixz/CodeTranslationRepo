[
    {
        "method_name": "onCreate",
        "method_code": "@Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        setHasOptionsMenu(true);\n\n        Bundle args = getArguments();\n\n        if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) {\n            searchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY);\n        }\n        searchOpen = args.getBoolean(FileDisplayActivity.EXTRA_SEARCH, false);\n\n        handler = new Handler();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreate from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreate\n\n        Method Code: @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        setHasOptionsMenu(true);\n\n        Bundle args = getArguments();\n\n        if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) {\n            searchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY);\n        }\n        searchOpen = args.getBoolean(FileDisplayActivity.EXTRA_SEARCH, false);\n\n        handler = new Handler();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    self.navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .search, target: self, action: #selector(searchTapped))\n\n    if let args = self.arguments {\n        if let query = args[FileDisplayActivity.EXTRA_SEARCH_QUERY] as? String {\n            searchQuery = query\n        }\n        searchOpen = args[FileDisplayActivity.EXTRA_SEARCH] as? Bool ?? false\n    }\n\n    handler = Handler()\n}\n```"
    },
    {
        "method_name": "onSaveInstanceState",
        "method_code": "@Override\n    public void onSaveInstanceState(@NonNull Bundle outState) {\n        FileExtensionsKt.logFileSize(getFile(), TAG);\n        outState.putParcelable(PreviewTextStringFragment.EXTRA_FILE, getFile());\n\n        super.onSaveInstanceState(outState);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onSaveInstanceState from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: onSaveInstanceState\n\n        Method Code: @Override\n    public void onSaveInstanceState(@NonNull Bundle outState) {\n        FileExtensionsKt.logFileSize(getFile(), TAG);\n        outState.putParcelable(PreviewTextStringFragment.EXTRA_FILE, getFile());\n\n        super.onSaveInstanceState(outState);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func encodeRestorableState(with coder: NSCoder) {\n    FileExtensionsKt.logFileSize(getFile(), TAG)\n    coder.encode(getFile(), forKey: PreviewTextStringFragment.EXTRA_FILE)\n    \n    super.encodeRestorableState(with: coder)\n}\n```"
    },
    {
        "method_name": "onCreateView",
        "method_code": "@Override\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = super.onCreateView(inflater, container, savedInstanceState);\n\n        if (view == null) {\n            throw new RuntimeException(\"View may not be null\");\n        }\n\n        FloatingActionButton fabMain = requireActivity().findViewById(R.id.fab_main);\n        fabMain.setVisibility(View.VISIBLE);\n        fabMain.setEnabled(true);\n        fabMain.setOnClickListener(v -> edit());\n\n        fabMain.setImageResource(R.drawable.ic_edit);\n        viewThemeUtils.material.themeFAB(fabMain);\n\n        return view;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreateView from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreateView\n\n        Method Code: @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = super.onCreateView(inflater, container, savedInstanceState);\n\n        if (view == null) {\n            throw new RuntimeException(\"View may not be null\");\n        }\n\n        FloatingActionButton fabMain = requireActivity().findViewById(R.id.fab_main);\n        fabMain.setVisibility(View.VISIBLE);\n        fabMain.setEnabled(true);\n        fabMain.setOnClickListener(v -> edit());\n\n        fabMain.setImageResource(R.drawable.ic_edit);\n        viewThemeUtils.material.themeFAB(fabMain);\n\n        return view;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    guard let view = self.view else {\n        fatalError(\"View may not be null\")\n    }\n\n    if let fabMain = self.view.viewWithTag(R.id.fab_main) as? UIButton {\n        fabMain.isHidden = false\n        fabMain.isEnabled = true\n        fabMain.addTarget(self, action: #selector(edit), for: .touchUpInside)\n\n        fabMain.setImage(UIImage(named: \"ic_edit\"), for: .normal)\n        viewThemeUtils.material.themeFAB(fabMain)\n    }\n}\n```"
    },
    {
        "method_name": "onStart",
        "method_code": "@Override\n    public void onStart() {\n        if (isEditorWebviewLaunched && containerActivity instanceof FileDisplayActivity fileDisplayActivity) {\n            fileDisplayActivity.getSupportFragmentManager().popBackStack();\n            fileDisplayActivity.onRefresh();\n        }\n\n        super.onStart();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onStart from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: onStart\n\n        Method Code: @Override\n    public void onStart() {\n        if (isEditorWebviewLaunched && containerActivity instanceof FileDisplayActivity fileDisplayActivity) {\n            fileDisplayActivity.getSupportFragmentManager().popBackStack();\n            fileDisplayActivity.onRefresh();\n        }\n\n        super.onStart();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    \n    if isEditorWebviewLaunched, let fileDisplayActivity = containerActivity as? FileDisplayActivity {\n        fileDisplayActivity.navigationController?.popViewController(animated: true)\n        fileDisplayActivity.onRefresh()\n    }\n}\n```"
    },
    {
        "method_name": "onCreateOptionsMenu",
        "method_code": "@Override\n    public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n\n        MenuItem menuItem = menu.findItem(R.id.action_search);\n        menuItem.setVisible(true);\n        searchView = (SearchView) MenuItemCompat.getActionView(menuItem);\n        searchView.setOnQueryTextListener(this);\n        searchView.setMaxWidth(Integer.MAX_VALUE);\n        viewThemeUtils.androidx.themeToolbarSearchView(searchView);\n\n        if (searchOpen) {\n            searchView.setIconified(false);\n            searchView.setQuery(searchQuery, true);\n            searchView.clearFocus();\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreateOptionsMenu from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreateOptionsMenu\n\n        Method Code: @Override\n    public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n\n        MenuItem menuItem = menu.findItem(R.id.action_search);\n        menuItem.setVisible(true);\n        searchView = (SearchView) MenuItemCompat.getActionView(menuItem);\n        searchView.setOnQueryTextListener(this);\n        searchView.setMaxWidth(Integer.MAX_VALUE);\n        viewThemeUtils.androidx.themeToolbarSearchView(searchView);\n\n        if (searchOpen) {\n            searchView.setIconified(false);\n            searchView.setQuery(searchQuery, true);\n            searchView.clearFocus();\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onCreateOptionsMenu(_ menu: Menu, _ inflater: MenuInflater) {\n    super.onCreateOptionsMenu(menu, inflater)\n\n    if let menuItem = menu.findItem(withId: R.id.action_search) {\n        menuItem.isVisible = true\n        if let searchView = menuItem.actionView as? UISearchBar {\n            searchView.delegate = self\n            searchView.searchBarStyle = .minimal\n            viewThemeUtils.applyTheme(to: searchView)\n\n            if searchOpen {\n                searchView.becomeFirstResponder()\n                searchView.text = searchQuery\n            }\n        }\n    }\n}\n```"
    },
    {
        "method_name": "loadAndShowTextPreview",
        "method_code": "public void loadAndShowTextPreview() {\n        originalText = getFile().getRichWorkspace();\n        setText(binding.textPreview, originalText, getFile(), requireActivity(), true, false, viewThemeUtils);\n\n        binding.textPreview.setVisibility(View.VISIBLE);\n        binding.emptyListProgress.setVisibility(View.GONE);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled loadAndShowTextPreview from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: loadAndShowTextPreview\n\n        Method Code: public void loadAndShowTextPreview() {\n        originalText = getFile().getRichWorkspace();\n        setText(binding.textPreview, originalText, getFile(), requireActivity(), true, false, viewThemeUtils);\n\n        binding.textPreview.setVisibility(View.VISIBLE);\n        binding.emptyListProgress.setVisibility(View.GONE);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc loadAndShowTextPreview() {\n    originalText = getFile().getRichWorkspace()\n    setText(binding.textPreview, originalText, getFile(), requireActivity(), true, false, viewThemeUtils)\n\n    binding.textPreview.isHidden = false\n    binding.emptyListProgress.isHidden = true\n}\n```"
    },
    {
        "method_name": "edit",
        "method_code": "private void edit() {\n        new Thread(() -> {\n            RemoteOperationResult result = new RichWorkspaceDirectEditingRemoteOperation(getFile().getRemotePath())\n                .execute(accountManager.getUser(), getContext());\n\n            if (result.isSuccess()) {\n                String url = (String) result.getSingleData();\n                containerActivity.getFileOperationsHelper().openRichWorkspaceWithTextEditor(getFile(),\n                                                                                            url,\n                                                                                            getContext());\n                isEditorWebviewLaunched = true;\n            } else {\n                DisplayUtils.showSnackMessage(getView(), \"Error\");\n            }\n        }).start();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled edit from PreviewTextStringFragment.java into Swift.\n\n        Input:\n\n        Method Name: edit\n\n        Method Code: private void edit() {\n        new Thread(() -> {\n            RemoteOperationResult result = new RichWorkspaceDirectEditingRemoteOperation(getFile().getRemotePath())\n                .execute(accountManager.getUser(), getContext());\n\n            if (result.isSuccess()) {\n                String url = (String) result.getSingleData();\n                containerActivity.getFileOperationsHelper().openRichWorkspaceWithTextEditor(getFile(),\n                                                                                            url,\n                                                                                            getContext());\n                isEditorWebviewLaunched = true;\n            } else {\n                DisplayUtils.showSnackMessage(getView(), \"Error\");\n            }\n        }).start();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func edit() {\n    DispatchQueue.global().async {\n        let result = RichWorkspaceDirectEditingRemoteOperation(file.remotePath)\n            .execute(accountManager.user, context)\n\n        if result.isSuccess {\n            if let url = result.getSingleData() as? String {\n                containerActivity.fileOperationsHelper.openRichWorkspaceWithTextEditor(file, url, context)\n                isEditorWebviewLaunched = true\n            }\n        } else {\n            DisplayUtils.showSnackMessage(view, \"Error\")\n        }\n    }\n}\n```"
    }
]