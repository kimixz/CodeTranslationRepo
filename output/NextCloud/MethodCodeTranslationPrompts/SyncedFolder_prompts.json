[
    {
        "method_name": "setEnabled",
        "method_code": "public void setEnabled(boolean enabled, long timestampMs) {\n        this.enabled = enabled;\n        this.enabledTimestampMs = enabled ? timestampMs : EMPTY_ENABLED_TIMESTAMP_MS;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setEnabled from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setEnabled\n\n        Method Code: public void setEnabled(boolean enabled, long timestampMs) {\n        this.enabled = enabled;\n        this.enabledTimestampMs = enabled ? timestampMs : EMPTY_ENABLED_TIMESTAMP_MS;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setEnabled(_ enabled: Bool, timestampMs: Int64) {\n    self.enabled = enabled\n    self.enabledTimestampMs = enabled ? timestampMs : EMPTY_ENABLED_TIMESTAMP_MS\n}\n```"
    },
    {
        "method_name": "clone",
        "method_code": "public Object clone() {\n        try {\n            return super.clone();\n        } catch (CloneNotSupportedException e) {\n            return null;\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled clone from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: clone\n\n        Method Code: public Object clone() {\n        try {\n            return super.clone();\n        } catch (CloneNotSupportedException e) {\n            return null;\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc clone() -> Any? {\n    return self.copy() as? Any\n}\n```"
    },
    {
        "method_name": "getId",
        "method_code": "public long getId() {\n        return this.id;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getId from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getId\n\n        Method Code: public long getId() {\n        return this.id;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getId() -> Int64 {\n    return self.id\n}\n```"
    },
    {
        "method_name": "getLocalPath",
        "method_code": "public String getLocalPath() {\n        return this.localPath;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getLocalPath from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getLocalPath\n\n        Method Code: public String getLocalPath() {\n        return this.localPath;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getLocalPath() -> String {\n    return self.localPath\n}\n```"
    },
    {
        "method_name": "getRemotePath",
        "method_code": "public String getRemotePath() {\n        return this.remotePath;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getRemotePath from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getRemotePath\n\n        Method Code: public String getRemotePath() {\n        return this.remotePath;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getRemotePath() -> String {\n    return self.remotePath\n}\n```"
    },
    {
        "method_name": "isWifiOnly",
        "method_code": "public boolean isWifiOnly() {\n        return this.wifiOnly;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isWifiOnly from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isWifiOnly\n\n        Method Code: public boolean isWifiOnly() {\n        return this.wifiOnly;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isWifiOnly() -> Bool {\n    return self.wifiOnly\n}\n```"
    },
    {
        "method_name": "isChargingOnly",
        "method_code": "public boolean isChargingOnly() {\n        return this.chargingOnly;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isChargingOnly from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isChargingOnly\n\n        Method Code: public boolean isChargingOnly() {\n        return this.chargingOnly;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isChargingOnly() -> Bool {\n    return self.chargingOnly\n}\n```"
    },
    {
        "method_name": "isExisting",
        "method_code": "public boolean isExisting() {\n        return this.existing;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isExisting from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isExisting\n\n        Method Code: public boolean isExisting() {\n        return this.existing;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isExisting() -> Bool {\n    return self.existing\n}\n```"
    },
    {
        "method_name": "isSubfolderByDate",
        "method_code": "public boolean isSubfolderByDate() {\n        return this.subfolderByDate;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isSubfolderByDate from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isSubfolderByDate\n\n        Method Code: public boolean isSubfolderByDate() {\n        return this.subfolderByDate;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isSubfolderByDate() -> Bool {\n    return self.subfolderByDate\n}\n```"
    },
    {
        "method_name": "getAccount",
        "method_code": "public String getAccount() {\n        return this.account;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getAccount from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getAccount\n\n        Method Code: public String getAccount() {\n        return this.account;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getAccount() -> String {\n    return self.account\n}\n```"
    },
    {
        "method_name": "getUploadAction",
        "method_code": "public int getUploadAction() {\n        return this.uploadAction;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getUploadAction from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getUploadAction\n\n        Method Code: public int getUploadAction() {\n        return this.uploadAction;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getUploadAction() -> Int {\n    return self.uploadAction\n}\n```"
    },
    {
        "method_name": "getNameCollisionPolicyInt",
        "method_code": "public int getNameCollisionPolicyInt() {\n        return this.nameCollisionPolicy;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getNameCollisionPolicyInt from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getNameCollisionPolicyInt\n\n        Method Code: public int getNameCollisionPolicyInt() {\n        return this.nameCollisionPolicy;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getNameCollisionPolicyInt() -> Int {\n    return self.nameCollisionPolicy\n}\n```"
    },
    {
        "method_name": "getNameCollisionPolicy",
        "method_code": "public NameCollisionPolicy getNameCollisionPolicy() {\n        return NameCollisionPolicy.deserialize(nameCollisionPolicy);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getNameCollisionPolicy from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getNameCollisionPolicy\n\n        Method Code: public NameCollisionPolicy getNameCollisionPolicy() {\n        return NameCollisionPolicy.deserialize(nameCollisionPolicy);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getNameCollisionPolicy() -> NameCollisionPolicy {\n    return NameCollisionPolicy.deserialize(nameCollisionPolicy)\n}\n```"
    },
    {
        "method_name": "isEnabled",
        "method_code": "public boolean isEnabled() {\n        return this.enabled;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isEnabled from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isEnabled\n\n        Method Code: public boolean isEnabled() {\n        return this.enabled;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isEnabled() -> Bool {\n    return self.enabled\n}\n```"
    },
    {
        "method_name": "getEnabledTimestampMs",
        "method_code": "public long getEnabledTimestampMs() {\n        return this.enabledTimestampMs;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getEnabledTimestampMs from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getEnabledTimestampMs\n\n        Method Code: public long getEnabledTimestampMs() {\n        return this.enabledTimestampMs;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getEnabledTimestampMs() -> Int64 {\n    return self.enabledTimestampMs\n}\n```"
    },
    {
        "method_name": "getType",
        "method_code": "public MediaFolderType getType() {\n        return this.type;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getType from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getType\n\n        Method Code: public MediaFolderType getType() {\n        return this.type;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getType() -> MediaFolderType {\n    return self.type\n}\n```"
    },
    {
        "method_name": "isHidden",
        "method_code": "public boolean isHidden() {\n        return this.hidden;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isHidden from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isHidden\n\n        Method Code: public boolean isHidden() {\n        return this.hidden;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isHidden() -> Bool {\n    return self.hidden\n}\n```"
    },
    {
        "method_name": "getSubfolderRule",
        "method_code": "public SubFolderRule getSubfolderRule() { return this.subfolderRule; }",
        "prompt": "\n        Please translate the following Java (Android) method titled getSubfolderRule from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getSubfolderRule\n\n        Method Code: public SubFolderRule getSubfolderRule() { return this.subfolderRule; }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getSubfolderRule() -> SubFolderRule {\n    return self.subfolderRule\n}\n```"
    },
    {
        "method_name": "setId",
        "method_code": "public void setId(long id) {\n        this.id = id;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setId from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setId\n\n        Method Code: public void setId(long id) {\n        this.id = id;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setId(_ id: Int64) {\n    self.id = id\n}\n```"
    },
    {
        "method_name": "setLocalPath",
        "method_code": "public void setLocalPath(String localPath) {\n        this.localPath = localPath;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setLocalPath from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setLocalPath\n\n        Method Code: public void setLocalPath(String localPath) {\n        this.localPath = localPath;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setLocalPath(_ localPath: String) {\n    self.localPath = localPath\n}\n```"
    },
    {
        "method_name": "setRemotePath",
        "method_code": "public void setRemotePath(String remotePath) {\n        this.remotePath = remotePath;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setRemotePath from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setRemotePath\n\n        Method Code: public void setRemotePath(String remotePath) {\n        this.remotePath = remotePath;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setRemotePath(_ remotePath: String) {\n    self.remotePath = remotePath\n}\n```"
    },
    {
        "method_name": "setWifiOnly",
        "method_code": "public void setWifiOnly(boolean wifiOnly) {\n        this.wifiOnly = wifiOnly;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setWifiOnly from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setWifiOnly\n\n        Method Code: public void setWifiOnly(boolean wifiOnly) {\n        this.wifiOnly = wifiOnly;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setWifiOnly(_ wifiOnly: Bool) {\n    self.wifiOnly = wifiOnly\n}\n```"
    },
    {
        "method_name": "setChargingOnly",
        "method_code": "public void setChargingOnly(boolean chargingOnly) {\n        this.chargingOnly = chargingOnly;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setChargingOnly from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setChargingOnly\n\n        Method Code: public void setChargingOnly(boolean chargingOnly) {\n        this.chargingOnly = chargingOnly;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setChargingOnly(_ chargingOnly: Bool) {\n    self.chargingOnly = chargingOnly\n}\n```"
    },
    {
        "method_name": "setExisting",
        "method_code": "public void setExisting(boolean existing) {\n        this.existing = existing;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setExisting from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setExisting\n\n        Method Code: public void setExisting(boolean existing) {\n        this.existing = existing;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setExisting(_ existing: Bool) {\n    self.existing = existing\n}\n```"
    },
    {
        "method_name": "setSubfolderByDate",
        "method_code": "public void setSubfolderByDate(boolean subfolderByDate) {\n        this.subfolderByDate = subfolderByDate;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setSubfolderByDate from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setSubfolderByDate\n\n        Method Code: public void setSubfolderByDate(boolean subfolderByDate) {\n        this.subfolderByDate = subfolderByDate;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setSubfolderByDate(_ subfolderByDate: Bool) {\n    self.subfolderByDate = subfolderByDate\n}\n```"
    },
    {
        "method_name": "setAccount",
        "method_code": "public void setAccount(String account) {\n        this.account = account;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setAccount from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setAccount\n\n        Method Code: public void setAccount(String account) {\n        this.account = account;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setAccount(_ account: String) {\n    self.account = account\n}\n```"
    },
    {
        "method_name": "setUploadAction",
        "method_code": "public void setUploadAction(int uploadAction) {\n        this.uploadAction = uploadAction;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setUploadAction from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setUploadAction\n\n        Method Code: public void setUploadAction(int uploadAction) {\n        this.uploadAction = uploadAction;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setUploadAction(uploadAction: Int) {\n    self.uploadAction = uploadAction\n}\n```"
    },
    {
        "method_name": "setNameCollisionPolicy",
        "method_code": "public void setNameCollisionPolicy(int nameCollisionPolicy) {\n        this.nameCollisionPolicy = nameCollisionPolicy;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setNameCollisionPolicy from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setNameCollisionPolicy\n\n        Method Code: public void setNameCollisionPolicy(int nameCollisionPolicy) {\n        this.nameCollisionPolicy = nameCollisionPolicy;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setNameCollisionPolicy(_ nameCollisionPolicy: Int) {\n    self.nameCollisionPolicy = nameCollisionPolicy\n}\n```"
    },
    {
        "method_name": "setType",
        "method_code": "public void setType(MediaFolderType type) {\n        this.type = type;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setType from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setType\n\n        Method Code: public void setType(MediaFolderType type) {\n        this.type = type;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setType(_ type: MediaFolderType) {\n    self.type = type\n}\n```"
    },
    {
        "method_name": "setHidden",
        "method_code": "public void setHidden(boolean hidden) {\n        this.hidden = hidden;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setHidden from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setHidden\n\n        Method Code: public void setHidden(boolean hidden) {\n        this.hidden = hidden;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setHidden(_ hidden: Bool) {\n    self.hidden = hidden\n}\n```"
    },
    {
        "method_name": "setSubFolderRule",
        "method_code": "public void setSubFolderRule(SubFolderRule subFolderRule) { this.subfolderRule = subFolderRule; }",
        "prompt": "\n        Please translate the following Java (Android) method titled setSubFolderRule from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setSubFolderRule\n\n        Method Code: public void setSubFolderRule(SubFolderRule subFolderRule) { this.subfolderRule = subFolderRule; }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setSubFolderRule(_ subFolderRule: SubFolderRule) {\n    self.subfolderRule = subFolderRule\n}\n```"
    },
    {
        "method_name": "isExcludeHidden",
        "method_code": "public boolean isExcludeHidden() {\n        return excludeHidden;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isExcludeHidden from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: isExcludeHidden\n\n        Method Code: public boolean isExcludeHidden() {\n        return excludeHidden;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isExcludeHidden() -> Bool {\n    return excludeHidden\n}\n```"
    },
    {
        "method_name": "setExcludeHidden",
        "method_code": "public void setExcludeHidden(boolean excludeHidden) {\n        this.excludeHidden = excludeHidden;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setExcludeHidden from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setExcludeHidden\n\n        Method Code: public void setExcludeHidden(boolean excludeHidden) {\n        this.excludeHidden = excludeHidden;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setExcludeHidden(_ excludeHidden: Bool) {\n    self.excludeHidden = excludeHidden\n}\n```"
    },
    {
        "method_name": "containsTypedFile",
        "method_code": "public boolean containsTypedFile(String filePath){\n        boolean isCorrectMediaType =\n                (getType() == MediaFolderType.IMAGE && MimeTypeUtil.isImage(new File(filePath))) ||\n                (getType() == MediaFolderType.VIDEO && MimeTypeUtil.isVideo(new File(filePath))) ||\n                getType() == MediaFolderType.CUSTOM;\n        return filePath.contains(localPath) && isCorrectMediaType;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled containsTypedFile from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: containsTypedFile\n\n        Method Code: public boolean containsTypedFile(String filePath){\n        boolean isCorrectMediaType =\n                (getType() == MediaFolderType.IMAGE && MimeTypeUtil.isImage(new File(filePath))) ||\n                (getType() == MediaFolderType.VIDEO && MimeTypeUtil.isVideo(new File(filePath))) ||\n                getType() == MediaFolderType.CUSTOM;\n        return filePath.contains(localPath) && isCorrectMediaType;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc containsTypedFile(filePath: String) -> Bool {\n    let isCorrectMediaType = \n        (getType() == .IMAGE && MimeTypeUtil.isImage(file: URL(fileURLWithPath: filePath))) ||\n        (getType() == .VIDEO && MimeTypeUtil.isVideo(file: URL(fileURLWithPath: filePath))) ||\n        getType() == .CUSTOM\n    return filePath.contains(localPath) && isCorrectMediaType\n}\n```"
    },
    {
        "method_name": "getLastScanTimestampMs",
        "method_code": "public long getLastScanTimestampMs() { return lastScanTimestampMs; }",
        "prompt": "\n        Please translate the following Java (Android) method titled getLastScanTimestampMs from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: getLastScanTimestampMs\n\n        Method Code: public long getLastScanTimestampMs() { return lastScanTimestampMs; }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getLastScanTimestampMs() -> Int64 {\n    return lastScanTimestampMs\n}\n```"
    },
    {
        "method_name": "setLastScanTimestampMs",
        "method_code": "public void setLastScanTimestampMs(long lastScanTimestampMs) { this.lastScanTimestampMs = lastScanTimestampMs; }",
        "prompt": "\n        Please translate the following Java (Android) method titled setLastScanTimestampMs from SyncedFolder.java into Swift.\n\n        Input:\n\n        Method Name: setLastScanTimestampMs\n\n        Method Code: public void setLastScanTimestampMs(long lastScanTimestampMs) { this.lastScanTimestampMs = lastScanTimestampMs; }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setLastScanTimestampMs(_ lastScanTimestampMs: Int64) {\n    self.lastScanTimestampMs = lastScanTimestampMs\n}\n```"
    }
]