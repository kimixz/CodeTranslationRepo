[
    {
        "method_name": "canBeAddedToAvailableList",
        "method_code": "boolean canBeAddedToAvailableList(Iterable<StoragePoint> currentList, String path) {\n        if (path == null) {\n            return false;\n        }\n\n        for (StoragePoint storage : currentList) {\n            if (storage.getPath().equals(path)) {\n                return false;\n            }\n        }\n\n        File f = new File(path);\n        return f.exists() && f.isDirectory() && f.canRead() && f.canWrite();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled canBeAddedToAvailableList from AbstractStoragePointProvider.java into Swift.\n\n        Input:\n\n        Method Name: canBeAddedToAvailableList\n\n        Method Code: boolean canBeAddedToAvailableList(Iterable<StoragePoint> currentList, String path) {\n        if (path == null) {\n            return false;\n        }\n\n        for (StoragePoint storage : currentList) {\n            if (storage.getPath().equals(path)) {\n                return false;\n            }\n        }\n\n        File f = new File(path);\n        return f.exists() && f.isDirectory() && f.canRead() && f.canWrite();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc canBeAddedToAvailableList(currentList: [StoragePoint], path: String?) -> Bool {\n    guard let path = path else {\n        return false\n    }\n\n    for storage in currentList {\n        if storage.getPath() == path {\n            return false\n        }\n    }\n\n    let fileManager = FileManager.default\n    var isDirectory: ObjCBool = false\n    if fileManager.fileExists(atPath: path, isDirectory: &isDirectory) {\n        return isDirectory.boolValue && fileManager.isReadableFile(atPath: path) && fileManager.isWritableFile(atPath: path)\n    }\n    return false\n}\n```"
    }
]