[
    {
        "method_name": "onPreExecute",
        "method_code": "@Override\n    protected void onPreExecute() {\n        if (backupListFragmentWeakReference.get() != null && !backupListFragmentWeakReference.get().hasCalendarEntry()) {\n            backupListFragmentWeakReference.get().showLoadingMessage(true);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onPreExecute from LoadContactsTask.java into Swift.\n\n        Input:\n\n        Method Name: onPreExecute\n\n        Method Code: @Override\n    protected void onPreExecute() {\n        if (backupListFragmentWeakReference.get() != null && !backupListFragmentWeakReference.get().hasCalendarEntry()) {\n            backupListFragmentWeakReference.get().showLoadingMessage(true);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onPreExecute() {\n    if let backupListFragment = backupListFragmentWeakReference.get(), !backupListFragment.hasCalendarEntry() {\n        backupListFragment.showLoadingMessage(true)\n    }\n}\n```"
    },
    {
        "method_name": "doInBackground",
        "method_code": "@Override\n    protected Boolean doInBackground(Void... voids) {\n        if (!isCancelled()) {\n            File file = new File(ocFile.getStoragePath());\n            try {\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n                    vCards.addAll(Ezvcard.parse(new BufferedInputStream(Files.newInputStream(file.toPath()))).all());\n                } else {\n                    vCards.addAll(Ezvcard.parse(new BufferedInputStream(new FileInputStream((file)))).all());\n                }\n                Collections.sort(vCards, new VCardComparator());\n            } catch (IOException e) {\n                Log_OC.e(this, \"IO Exception: \" + file.getAbsolutePath());\n                return Boolean.FALSE;\n            }\n            return Boolean.TRUE;\n        }\n        return Boolean.FALSE;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled doInBackground from LoadContactsTask.java into Swift.\n\n        Input:\n\n        Method Name: doInBackground\n\n        Method Code: @Override\n    protected Boolean doInBackground(Void... voids) {\n        if (!isCancelled()) {\n            File file = new File(ocFile.getStoragePath());\n            try {\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n                    vCards.addAll(Ezvcard.parse(new BufferedInputStream(Files.newInputStream(file.toPath()))).all());\n                } else {\n                    vCards.addAll(Ezvcard.parse(new BufferedInputStream(new FileInputStream((file)))).all());\n                }\n                Collections.sort(vCards, new VCardComparator());\n            } catch (IOException e) {\n                Log_OC.e(this, \"IO Exception: \" + file.getAbsolutePath());\n                return Boolean.FALSE;\n            }\n            return Boolean.TRUE;\n        }\n        return Boolean.FALSE;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func doInBackground() -> Bool {\n    if !isCancelled {\n        let file = FileManager.default.fileExists(atPath: ocFile.storagePath)\n        do {\n            if #available(iOS 11.0, *) {\n                let inputStream = try InputStream(url: URL(fileURLWithPath: ocFile.storagePath))\n                vCards.append(contentsOf: try Ezvcard.parse(inputStream).all())\n            } else {\n                let inputStream = InputStream(fileAtPath: ocFile.storagePath)\n                vCards.append(contentsOf: try Ezvcard.parse(inputStream).all())\n            }\n            vCards.sort(by: VCardComparator())\n        } catch {\n            Log_OC.e(self, \"IO Exception: \\(file.path)\")\n            return false\n        }\n        return true\n    }\n    return false\n}\n```"
    },
    {
        "method_name": "onPostExecute",
        "method_code": "@Override\n    protected void onPostExecute(Boolean bool) {\n        if (!isCancelled() && bool && backupListFragmentWeakReference.get() != null) {\n            backupListFragmentWeakReference.get().loadVCards(vCards);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onPostExecute from LoadContactsTask.java into Swift.\n\n        Input:\n\n        Method Name: onPostExecute\n\n        Method Code: @Override\n    protected void onPostExecute(Boolean bool) {\n        if (!isCancelled() && bool && backupListFragmentWeakReference.get() != null) {\n            backupListFragmentWeakReference.get().loadVCards(vCards);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onPostExecute(_ bool: Bool) {\n    if !isCancelled() && bool, let backupListFragment = backupListFragmentWeakReference.get() {\n        backupListFragment.loadVCards(vCards)\n    }\n}\n```"
    }
]