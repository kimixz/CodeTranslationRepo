[
    {
        "method_name": "getValue",
        "method_code": "ublic int getValue() {\n        return value;\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled getValue from UploadResult.java into Swift.\n\n        Input:\n\n        Method Name: getValue\n\n        Method Code: ublic int getValue() {\n        return value;\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getValue() -> Int {\n    return value\n}\n```"
    },
    {
        "method_name": "fromValue",
        "method_code": "ublic static UploadResult fromValue(int value) {\n        switch (value) {\n            case -1:\n                return UNKNOWN;\n            case 0:\n                return UPLOADED;\n            case 1:\n                return NETWORK_CONNECTION;\n            case 2:\n                return CREDENTIAL_ERROR;\n            case 3:\n                return FOLDER_ERROR;\n            case 4:\n                return CONFLICT_ERROR;\n            case 5:\n                return FILE_ERROR;\n            case 6:\n                return PRIVILEGES_ERROR;\n            case 7:\n                return CANCELLED;\n            case 8:\n                return FILE_NOT_FOUND;\n            case 9:\n                return DELAYED_FOR_WIFI;\n            case 10:\n                return SERVICE_INTERRUPTED;\n            case 11:\n                return DELAYED_FOR_CHARGING;\n            case 12:\n                return MAINTENANCE_MODE;\n            case 13:\n                return LOCK_FAILED;\n            case 14:\n                return DELAYED_IN_POWER_SAVE_MODE;\n            case 15:\n                return SSL_RECOVERABLE_PEER_UNVERIFIED;\n            case 16:\n                return VIRUS_DETECTED;\n            case 17:\n                return LOCAL_STORAGE_FULL;\n            case 18:\n                return OLD_ANDROID_API;\n            case 19:\n                return SYNC_CONFLICT;\n            case 20:\n                return CANNOT_CREATE_FILE;\n            case 21:\n                return LOCAL_STORAGE_NOT_COPIED;\n            case 22:\n                return QUOTA_EXCEEDED;\n            case 23:\n                return SAME_FILE_CONFLICT;\n        }\n        return UNKNOWN;\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled fromValue from UploadResult.java into Swift.\n\n        Input:\n\n        Method Name: fromValue\n\n        Method Code: ublic static UploadResult fromValue(int value) {\n        switch (value) {\n            case -1:\n                return UNKNOWN;\n            case 0:\n                return UPLOADED;\n            case 1:\n                return NETWORK_CONNECTION;\n            case 2:\n                return CREDENTIAL_ERROR;\n            case 3:\n                return FOLDER_ERROR;\n            case 4:\n                return CONFLICT_ERROR;\n            case 5:\n                return FILE_ERROR;\n            case 6:\n                return PRIVILEGES_ERROR;\n            case 7:\n                return CANCELLED;\n            case 8:\n                return FILE_NOT_FOUND;\n            case 9:\n                return DELAYED_FOR_WIFI;\n            case 10:\n                return SERVICE_INTERRUPTED;\n            case 11:\n                return DELAYED_FOR_CHARGING;\n            case 12:\n                return MAINTENANCE_MODE;\n            case 13:\n                return LOCK_FAILED;\n            case 14:\n                return DELAYED_IN_POWER_SAVE_MODE;\n            case 15:\n                return SSL_RECOVERABLE_PEER_UNVERIFIED;\n            case 16:\n                return VIRUS_DETECTED;\n            case 17:\n                return LOCAL_STORAGE_FULL;\n            case 18:\n                return OLD_ANDROID_API;\n            case 19:\n                return SYNC_CONFLICT;\n            case 20:\n                return CANNOT_CREATE_FILE;\n            case 21:\n                return LOCAL_STORAGE_NOT_COPIED;\n            case 22:\n                return QUOTA_EXCEEDED;\n            case 23:\n                return SAME_FILE_CONFLICT;\n        }\n        return UNKNOWN;\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nenum UploadResult {\n    case UNKNOWN\n    case UPLOADED\n    case NETWORK_CONNECTION\n    case CREDENTIAL_ERROR\n    case FOLDER_ERROR\n    case CONFLICT_ERROR\n    case FILE_ERROR\n    case PRIVILEGES_ERROR\n    case CANCELLED\n    case FILE_NOT_FOUND\n    case DELAYED_FOR_WIFI\n    case SERVICE_INTERRUPTED\n    case DELAYED_FOR_CHARGING\n    case MAINTENANCE_MODE\n    case LOCK_FAILED\n    case DELAYED_IN_POWER_SAVE_MODE\n    case SSL_RECOVERABLE_PEER_UNVERIFIED\n    case VIRUS_DETECTED\n    case LOCAL_STORAGE_FULL\n    case OLD_ANDROID_API\n    case SYNC_CONFLICT\n    case CANNOT_CREATE_FILE\n    case LOCAL_STORAGE_NOT_COPIED\n    case QUOTA_EXCEEDED\n    case SAME_FILE_CONFLICT\n\n    static func fromValue(_ value: Int) -> UploadResult {\n        switch value {\n        case -1:\n            return .UNKNOWN\n        case 0:\n            return .UPLOADED\n        case 1:\n            return .NETWORK_CONNECTION\n        case 2:\n            return .CREDENTIAL_ERROR\n        case 3:\n            return .FOLDER_ERROR\n        case 4:\n            return .CONFLICT_ERROR\n        case 5:\n            return .FILE_ERROR\n        case 6:\n            return .PRIVILEGES_ERROR\n        case 7:\n            return .CANCELLED\n        case 8:\n            return .FILE_NOT_FOUND\n        case 9:\n            return .DELAYED_FOR_WIFI\n        case 10:\n            return .SERVICE_INTERRUPTED\n        case 11:\n            return .DELAYED_FOR_CHARGING\n        case 12:\n            return .MAINTENANCE_MODE\n        case 13:\n            return .LOCK_FAILED\n        case 14:\n            return .DELAYED_IN_POWER_SAVE_MODE\n        case 15:\n            return .SSL_RECOVERABLE_PEER_UNVERIFIED\n        case 16:\n            return .VIRUS_DETECTED\n        case 17:\n            return .LOCAL_STORAGE_FULL\n        case 18:\n            return .OLD_ANDROID_API\n        case 19:\n            return .SYNC_CONFLICT\n        case 20:\n            return .CANNOT_CREATE_FILE\n        case 21:\n            return .LOCAL_STORAGE_NOT_COPIED\n        case 22:\n            return .QUOTA_EXCEEDED\n        case 23:\n            return .SAME_FILE_CONFLICT\n        default:\n            return .UNKNOWN\n        }\n    }\n}\n```"
    },
    {
        "method_name": "fromOperationResult",
        "method_code": "ublic static UploadResult fromOperationResult(RemoteOperationResult result) {\n        // messy :(\n        switch (result.getCode()) {\n            case OK:\n                return UPLOADED;\n            case NO_NETWORK_CONNECTION:\n            case HOST_NOT_AVAILABLE:\n            case TIMEOUT:\n            case WRONG_CONNECTION:\n            case INCORRECT_ADDRESS:\n            case SSL_ERROR:\n                return NETWORK_CONNECTION;\n            case ACCOUNT_EXCEPTION:\n            case UNAUTHORIZED:\n                return CREDENTIAL_ERROR;\n            case FILE_NOT_FOUND:\n                return FOLDER_ERROR;\n            case LOCAL_FILE_NOT_FOUND:\n                return FILE_NOT_FOUND;\n            case CONFLICT:\n                return CONFLICT_ERROR;\n            case LOCAL_STORAGE_NOT_COPIED:\n                return LOCAL_STORAGE_NOT_COPIED;\n            case LOCAL_STORAGE_FULL:\n                return LOCAL_STORAGE_FULL;\n            case OLD_ANDROID_API:\n                return OLD_ANDROID_API;\n            case SYNC_CONFLICT:\n                return SYNC_CONFLICT;\n            case FORBIDDEN:\n                return PRIVILEGES_ERROR;\n            case CANCELLED:\n                return CANCELLED;\n            case DELAYED_FOR_WIFI:\n                return DELAYED_FOR_WIFI;\n            case DELAYED_FOR_CHARGING:\n                return DELAYED_FOR_CHARGING;\n            case DELAYED_IN_POWER_SAVE_MODE:\n                return DELAYED_IN_POWER_SAVE_MODE;\n            case MAINTENANCE_MODE:\n                return MAINTENANCE_MODE;\n            case SSL_RECOVERABLE_PEER_UNVERIFIED:\n                return SSL_RECOVERABLE_PEER_UNVERIFIED;\n            case UNKNOWN_ERROR:\n                if (result.getException() instanceof java.io.FileNotFoundException) {\n                    return FILE_ERROR;\n                }\n                return UNKNOWN;\n            case LOCK_FAILED:\n                return LOCK_FAILED;\n            case VIRUS_DETECTED:\n                return VIRUS_DETECTED;\n            case CANNOT_CREATE_FILE:\n                return CANNOT_CREATE_FILE;\n            case QUOTA_EXCEEDED:\n                return QUOTA_EXCEEDED;\n            default:\n                return UNKNOWN;\n        }\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled fromOperationResult from UploadResult.java into Swift.\n\n        Input:\n\n        Method Name: fromOperationResult\n\n        Method Code: ublic static UploadResult fromOperationResult(RemoteOperationResult result) {\n        // messy :(\n        switch (result.getCode()) {\n            case OK:\n                return UPLOADED;\n            case NO_NETWORK_CONNECTION:\n            case HOST_NOT_AVAILABLE:\n            case TIMEOUT:\n            case WRONG_CONNECTION:\n            case INCORRECT_ADDRESS:\n            case SSL_ERROR:\n                return NETWORK_CONNECTION;\n            case ACCOUNT_EXCEPTION:\n            case UNAUTHORIZED:\n                return CREDENTIAL_ERROR;\n            case FILE_NOT_FOUND:\n                return FOLDER_ERROR;\n            case LOCAL_FILE_NOT_FOUND:\n                return FILE_NOT_FOUND;\n            case CONFLICT:\n                return CONFLICT_ERROR;\n            case LOCAL_STORAGE_NOT_COPIED:\n                return LOCAL_STORAGE_NOT_COPIED;\n            case LOCAL_STORAGE_FULL:\n                return LOCAL_STORAGE_FULL;\n            case OLD_ANDROID_API:\n                return OLD_ANDROID_API;\n            case SYNC_CONFLICT:\n                return SYNC_CONFLICT;\n            case FORBIDDEN:\n                return PRIVILEGES_ERROR;\n            case CANCELLED:\n                return CANCELLED;\n            case DELAYED_FOR_WIFI:\n                return DELAYED_FOR_WIFI;\n            case DELAYED_FOR_CHARGING:\n                return DELAYED_FOR_CHARGING;\n            case DELAYED_IN_POWER_SAVE_MODE:\n                return DELAYED_IN_POWER_SAVE_MODE;\n            case MAINTENANCE_MODE:\n                return MAINTENANCE_MODE;\n            case SSL_RECOVERABLE_PEER_UNVERIFIED:\n                return SSL_RECOVERABLE_PEER_UNVERIFIED;\n            case UNKNOWN_ERROR:\n                if (result.getException() instanceof java.io.FileNotFoundException) {\n                    return FILE_ERROR;\n                }\n                return UNKNOWN;\n            case LOCK_FAILED:\n                return LOCK_FAILED;\n            case VIRUS_DETECTED:\n                return VIRUS_DETECTED;\n            case CANNOT_CREATE_FILE:\n                return CANNOT_CREATE_FILE;\n            case QUOTA_EXCEEDED:\n                return QUOTA_EXCEEDED;\n            default:\n                return UNKNOWN;\n        }\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nstatic func fromOperationResult(_ result: RemoteOperationResult) -> UploadResult {\n    switch result.code {\n    case .ok:\n        return .uploaded\n    case .noNetworkConnection, .hostNotAvailable, .timeout, .wrongConnection, .incorrectAddress, .sslError:\n        return .networkConnection\n    case .accountException, .unauthorized:\n        return .credentialError\n    case .fileNotFound:\n        return .folderError\n    case .localFileNotFound:\n        return .fileNotFound\n    case .conflict:\n        return .conflictError\n    case .localStorageNotCopied:\n        return .localStorageNotCopied\n    case .localStorageFull:\n        return .localStorageFull\n    case .oldAndroidApi:\n        return .oldAndroidApi\n    case .syncConflict:\n        return .syncConflict\n    case .forbidden:\n        return .privilegesError\n    case .cancelled:\n        return .cancelled\n    case .delayedForWifi:\n        return .delayedForWifi\n    case .delayedForCharging:\n        return .delayedForCharging\n    case .delayedInPowerSaveMode:\n        return .delayedInPowerSaveMode\n    case .maintenanceMode:\n        return .maintenanceMode\n    case .sslRecoverablePeerUnverified:\n        return .sslRecoverablePeerUnverified\n    case .unknownError:\n        if result.exception is FileNotFoundException {\n            return .fileError\n        }\n        return .unknown\n    case .lockFailed:\n        return .lockFailed\n    case .virusDetected:\n        return .virusDetected\n    case .cannotCreateFile:\n        return .cannotCreateFile\n    case .quotaExceeded:\n        return .quotaExceeded\n    default:\n        return .unknown\n    }\n}\n```"
    }
]