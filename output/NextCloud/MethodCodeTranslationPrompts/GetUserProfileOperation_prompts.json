[
    {
        "method_name": "run",
        "method_code": "@Override\n    public RemoteOperationResult<UserInfo> run(NextcloudClient client) {\n\n        // get display name\n        RemoteOperationResult<UserInfo> result = new GetUserInfoRemoteOperation().execute(client);\n\n        if (result.isSuccess()) {\n            // store display name with account data\n            AccountManager accountManager = AccountManager.get(MainApp.getAppContext());\n            UserInfo userInfo = result.getResultData();\n            Account storedAccount = getStorageManager().getUser().toPlatformAccount();\n            accountManager.setUserData(storedAccount, AccountUtils.Constants.KEY_DISPLAY_NAME, userInfo.getDisplayName());\n        }\n        return result;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled run from GetUserProfileOperation.java into Swift.\n\n        Input:\n\n        Method Name: run\n\n        Method Code: @Override\n    public RemoteOperationResult<UserInfo> run(NextcloudClient client) {\n\n        // get display name\n        RemoteOperationResult<UserInfo> result = new GetUserInfoRemoteOperation().execute(client);\n\n        if (result.isSuccess()) {\n            // store display name with account data\n            AccountManager accountManager = AccountManager.get(MainApp.getAppContext());\n            UserInfo userInfo = result.getResultData();\n            Account storedAccount = getStorageManager().getUser().toPlatformAccount();\n            accountManager.setUserData(storedAccount, AccountUtils.Constants.KEY_DISPLAY_NAME, userInfo.getDisplayName());\n        }\n        return result;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func run(client: NextcloudClient) -> RemoteOperationResult<UserInfo> {\n    // get display name\n    let result = GetUserInfoRemoteOperation().execute(client: client)\n\n    if result.isSuccess() {\n        // store display name with account data\n        let accountManager = AccountManager.get(MainApp.getAppContext())\n        if let userInfo = result.getResultData() {\n            let storedAccount = getStorageManager().getUser().toPlatformAccount()\n            accountManager.setUserData(storedAccount, AccountUtils.Constants.KEY_DISPLAY_NAME, userInfo.getDisplayName())\n        }\n    }\n    return result\n}\n```"
    }
]