[
    {
        "method_name": "run",
        "method_code": "Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n        /// 1. check move validity\n        if (targetParentPath.startsWith(srcPath)) {\n            return new RemoteOperationResult(ResultCode.INVALID_MOVE_INTO_DESCENDANT);\n        }\n        OCFile file = getStorageManager().getFileByPath(srcPath);\n        if (file == null) {\n            return new RemoteOperationResult(ResultCode.FILE_NOT_FOUND);\n        }\n\n        /// 2. remote move\n        String targetPath = targetParentPath + file.getFileName();\n        if (file.isFolder()) {\n            targetPath += OCFile.PATH_SEPARATOR;\n        }\n        RemoteOperationResult result = new MoveFileRemoteOperation(srcPath, targetPath, false).execute(client);\n\n        /// 3. local move\n        if (result.isSuccess()) {\n            getStorageManager().moveLocalFile(file, targetPath, targetParentPath);\n        }\n        // TODO handle ResultCode.PARTIAL_MOVE_DONE in client Activity, for the moment\n\n        return result;\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled run from MoveFileOperation.java into Swift.\n\n        Input:\n\n        Method Name: run\n\n        Method Code: Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n        /// 1. check move validity\n        if (targetParentPath.startsWith(srcPath)) {\n            return new RemoteOperationResult(ResultCode.INVALID_MOVE_INTO_DESCENDANT);\n        }\n        OCFile file = getStorageManager().getFileByPath(srcPath);\n        if (file == null) {\n            return new RemoteOperationResult(ResultCode.FILE_NOT_FOUND);\n        }\n\n        /// 2. remote move\n        String targetPath = targetParentPath + file.getFileName();\n        if (file.isFolder()) {\n            targetPath += OCFile.PATH_SEPARATOR;\n        }\n        RemoteOperationResult result = new MoveFileRemoteOperation(srcPath, targetPath, false).execute(client);\n\n        /// 3. local move\n        if (result.isSuccess()) {\n            getStorageManager().moveLocalFile(file, targetPath, targetParentPath);\n        }\n        // TODO handle ResultCode.PARTIAL_MOVE_DONE in client Activity, for the moment\n\n        return result;\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func run(client: OwnCloudClient) -> RemoteOperationResult {\n    // 1. check move validity\n    if targetParentPath.hasPrefix(srcPath) {\n        return RemoteOperationResult(resultCode: .invalidMoveIntoDescendant)\n    }\n    guard let file = getStorageManager().getFileByPath(srcPath) else {\n        return RemoteOperationResult(resultCode: .fileNotFound)\n    }\n\n    // 2. remote move\n    var targetPath = targetParentPath + file.getFileName()\n    if file.isFolder() {\n        targetPath += OCFile.PATH_SEPARATOR\n    }\n    let result = MoveFileRemoteOperation(srcPath: srcPath, targetPath: targetPath, isFolder: false).execute(client: client)\n\n    // 3. local move\n    if result.isSuccess {\n        getStorageManager().moveLocalFile(file: file, targetPath: targetPath, targetParentPath: targetParentPath)\n    }\n    // TODO handle ResultCode.PARTIAL_MOVE_DONE in client Activity, for the moment\n\n    return result\n}\n```"
    }
]