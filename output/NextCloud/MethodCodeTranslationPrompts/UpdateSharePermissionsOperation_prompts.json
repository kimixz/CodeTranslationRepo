[
    {
        "method_name": "run",
        "method_code": "@Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n\n        OCShare share = getStorageManager().getShareById(shareId); // ShareType.USER | ShareType.GROUP\n\n        if (share == null) {\n            // TODO try to get remote share before failing?\n            return new RemoteOperationResult(RemoteOperationResult.ResultCode.SHARE_NOT_FOUND);\n        }\n\n        path = share.getPath();\n\n        // Update remote share with password\n        UpdateShareRemoteOperation updateOp = new UpdateShareRemoteOperation(share.getRemoteId());\n        updateOp.setPassword(password);\n        updateOp.setPermissions(permissions);\n        updateOp.setExpirationDate(expirationDateInMillis);\n        RemoteOperationResult result = updateOp.execute(client);\n\n        if (result.isSuccess()) {\n            RemoteOperation getShareOp = new GetShareRemoteOperation(share.getRemoteId());\n            result = getShareOp.execute(client);\n            if (result.isSuccess()) {\n                share = (OCShare) result.getData().get(0);\n                // TODO check permissions are being saved\n                updateData(share);\n            }\n        }\n\n        return result;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled run from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: run\n\n        Method Code: @Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n\n        OCShare share = getStorageManager().getShareById(shareId); // ShareType.USER | ShareType.GROUP\n\n        if (share == null) {\n            // TODO try to get remote share before failing?\n            return new RemoteOperationResult(RemoteOperationResult.ResultCode.SHARE_NOT_FOUND);\n        }\n\n        path = share.getPath();\n\n        // Update remote share with password\n        UpdateShareRemoteOperation updateOp = new UpdateShareRemoteOperation(share.getRemoteId());\n        updateOp.setPassword(password);\n        updateOp.setPermissions(permissions);\n        updateOp.setExpirationDate(expirationDateInMillis);\n        RemoteOperationResult result = updateOp.execute(client);\n\n        if (result.isSuccess()) {\n            RemoteOperation getShareOp = new GetShareRemoteOperation(share.getRemoteId());\n            result = getShareOp.execute(client);\n            if (result.isSuccess()) {\n                share = (OCShare) result.getData().get(0);\n                // TODO check permissions are being saved\n                updateData(share);\n            }\n        }\n\n        return result;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func run(client: OwnCloudClient) -> RemoteOperationResult {\n    guard var share = getStorageManager().getShareById(shareId) else {\n        return RemoteOperationResult(resultCode: .shareNotFound)\n    }\n\n    path = share.getPath()\n\n    let updateOp = UpdateShareRemoteOperation(remoteId: share.getRemoteId())\n    updateOp.setPassword(password)\n    updateOp.setPermissions(permissions)\n    updateOp.setExpirationDate(expirationDateInMillis)\n    var result = updateOp.execute(client: client)\n\n    if result.isSuccess() {\n        let getShareOp = GetShareRemoteOperation(remoteId: share.getRemoteId())\n        result = getShareOp.execute(client: client)\n        if result.isSuccess() {\n            if let updatedShare = result.getData().first as? OCShare {\n                share = updatedShare\n                updateData(share: share)\n            }\n        }\n    }\n\n    return result\n}\n```"
    },
    {
        "method_name": "updateData",
        "method_code": "private void updateData(OCShare share) {\n        // Update DB with the response\n        share.setPath(path);   // TODO - check if may be moved to UpdateRemoteShareOperation\n        share.setFolder(path.endsWith(FileUtils.PATH_SEPARATOR));\n\n        share.setPasswordProtected(!TextUtils.isEmpty(password));\n        getStorageManager().saveShare(share);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled updateData from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: updateData\n\n        Method Code: private void updateData(OCShare share) {\n        // Update DB with the response\n        share.setPath(path);   // TODO - check if may be moved to UpdateRemoteShareOperation\n        share.setFolder(path.endsWith(FileUtils.PATH_SEPARATOR));\n\n        share.setPasswordProtected(!TextUtils.isEmpty(password));\n        getStorageManager().saveShare(share);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func updateData(share: OCShare) {\n    // Update DB with the response\n    share.setPath(path) // TODO - check if may be moved to UpdateRemoteShareOperation\n    share.setFolder(path.hasSuffix(FileUtils.PATH_SEPARATOR))\n    \n    share.setPasswordProtected(!password.isEmpty)\n    getStorageManager().saveShare(share)\n}\n```"
    },
    {
        "method_name": "getPassword",
        "method_code": "public String getPassword() {\n        return this.password;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getPassword from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: getPassword\n\n        Method Code: public String getPassword() {\n        return this.password;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getPassword() -> String {\n    return self.password\n}\n```"
    },
    {
        "method_name": "getPath",
        "method_code": "public String getPath() {\n        return this.path;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getPath from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: getPath\n\n        Method Code: public String getPath() {\n        return this.path;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getPath() -> String {\n    return self.path\n}\n```"
    },
    {
        "method_name": "setPermissions",
        "method_code": "public void setPermissions(int permissions) {\n        this.permissions = permissions;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setPermissions from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: setPermissions\n\n        Method Code: public void setPermissions(int permissions) {\n        this.permissions = permissions;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setPermissions(_ permissions: Int) {\n    self.permissions = permissions\n}\n```"
    },
    {
        "method_name": "setExpirationDateInMillis",
        "method_code": "public void setExpirationDateInMillis(long expirationDateInMillis) {\n        this.expirationDateInMillis = expirationDateInMillis;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setExpirationDateInMillis from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: setExpirationDateInMillis\n\n        Method Code: public void setExpirationDateInMillis(long expirationDateInMillis) {\n        this.expirationDateInMillis = expirationDateInMillis;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setExpirationDateInMillis(_ expirationDateInMillis: Int64) {\n    self.expirationDateInMillis = expirationDateInMillis\n}\n```"
    },
    {
        "method_name": "setPassword",
        "method_code": "public void setPassword(String password) {\n        this.password = password;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setPassword from UpdateSharePermissionsOperation.java into Swift.\n\n        Input:\n\n        Method Name: setPassword\n\n        Method Code: public void setPassword(String password) {\n        this.password = password;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setPassword(_ password: String) {\n    self.password = password\n}\n```"
    }
]