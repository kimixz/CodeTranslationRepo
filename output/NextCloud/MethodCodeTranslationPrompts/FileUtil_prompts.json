[
    {
        "method_name": "getFilenameFromPathString",
        "method_code": "public static @NonNull\n    String getFilenameFromPathString(@Nullable String filePath) {\n        if (!TextUtils.isEmpty(filePath)) {\n            File file = new File(filePath);\n            if (file.isFile()) {\n                return file.getName();\n            } else {\n                return \"\";\n            }\n        } else {\n            return \"\";\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getFilenameFromPathString from FileUtil.java into Swift.\n\n        Input:\n\n        Method Name: getFilenameFromPathString\n\n        Method Code: public static @NonNull\n    String getFilenameFromPathString(@Nullable String filePath) {\n        if (!TextUtils.isEmpty(filePath)) {\n            File file = new File(filePath);\n            if (file.isFile()) {\n                return file.getName();\n            } else {\n                return \"\";\n            }\n        } else {\n            return \"\";\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getFilenameFromPathString(_ filePath: String?) -> String {\n    if let filePath = filePath, !filePath.isEmpty {\n        let file = URL(fileURLWithPath: filePath)\n        if file.hasDirectoryPath == false {\n            return file.lastPathComponent\n        } else {\n            return \"\"\n        }\n    } else {\n        return \"\"\n    }\n}\n```"
    },
    {
        "method_name": "getCreationTimestamp",
        "method_code": "public static @Nullable\n    Long getCreationTimestamp(File file) {\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n            return null;\n        }\n\n        try {\n            return Files.readAttributes(file.toPath(), BasicFileAttributes.class)\n                .creationTime()\n                .to(TimeUnit.SECONDS);\n        } catch (IOException e) {\n            Log_OC.e(UploadFileRemoteOperation.class.getSimpleName(),\n                     \"Failed to read creation timestamp for file: \" + file.getName());\n            return null;\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getCreationTimestamp from FileUtil.java into Swift.\n\n        Input:\n\n        Method Name: getCreationTimestamp\n\n        Method Code: public static @Nullable\n    Long getCreationTimestamp(File file) {\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n            return null;\n        }\n\n        try {\n            return Files.readAttributes(file.toPath(), BasicFileAttributes.class)\n                .creationTime()\n                .to(TimeUnit.SECONDS);\n        } catch (IOException e) {\n            Log_OC.e(UploadFileRemoteOperation.class.getSimpleName(),\n                     \"Failed to read creation timestamp for file: \" + file.getName());\n            return null;\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nimport Foundation\n\nfunc getCreationTimestamp(file: URL) -> Int64? {\n    if #available(iOS 11.0, *) {\n        do {\n            let attributes = try FileManager.default.attributesOfItem(atPath: file.path)\n            if let creationDate = attributes[.creationDate] as? Date {\n                return Int64(creationDate.timeIntervalSince1970)\n            }\n        } catch {\n            print(\"Failed to read creation timestamp for file: \\(file.lastPathComponent)\")\n            return nil\n        }\n    }\n    return nil\n}\n```"
    }
]