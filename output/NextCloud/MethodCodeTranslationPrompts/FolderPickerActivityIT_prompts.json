[
    {
        "method_name": "getActivityFile",
        "method_code": "Test\n    public void getActivityFile() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/file.test\");\n        origin.setRemotePath(\"/remotePath/test\");\n\n        // Act\n        targetActivity.setFile(origin);\n        OCFile target = targetActivity.getFile();\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled getActivityFile from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: getActivityFile\n\n        Method Code: Test\n    public void getActivityFile() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/file.test\");\n        origin.setRemotePath(\"/remotePath/test\");\n\n        // Act\n        targetActivity.setFile(origin);\n        OCFile target = targetActivity.getFile();\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testGetActivityFile() {\n    // Arrange\n    let targetActivity = activityRule.activity\n    let origin = OCFile(path: \"/test/file.test\")\n    origin.remotePath = \"/remotePath/test\"\n\n    // Act\n    targetActivity.setFile(origin)\n    let target = targetActivity.getFile()\n\n    // Assert\n    XCTAssertEqual(origin, target)\n}\n```"
    },
    {
        "method_name": "getParentFolder_isNotRootFolder",
        "method_code": "Test\n    public void getParentFolder_isNotRootFolder() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/\");\n        origin.setFileId(1);\n        origin.setRemotePath(\"/test/\");\n        origin.setStoragePath(\"/test/\");\n        origin.setFolder();\n\n        // Act\n        targetActivity.setFile(origin);\n        OCFile target = targetActivity.getCurrentFolder();\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled getParentFolder_isNotRootFolder from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: getParentFolder_isNotRootFolder\n\n        Method Code: Test\n    public void getParentFolder_isNotRootFolder() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/\");\n        origin.setFileId(1);\n        origin.setRemotePath(\"/test/\");\n        origin.setStoragePath(\"/test/\");\n        origin.setFolder();\n\n        // Act\n        targetActivity.setFile(origin);\n        OCFile target = targetActivity.getCurrentFolder();\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testGetParentFolder_isNotRootFolder() {\n    // Arrange\n    let targetActivity = activityRule.activity\n    let origin = OCFile(\"/test/\")\n    origin.setFileId(1)\n    origin.setRemotePath(\"/test/\")\n    origin.setStoragePath(\"/test/\")\n    origin.setFolder()\n\n    // Act\n    targetActivity.setFile(origin)\n    let target = targetActivity.getCurrentFolder()\n\n    // Assert\n    XCTAssertEqual(origin, target)\n}\n```"
    },
    {
        "method_name": "getParentFolder_isRootFolder",
        "method_code": "Test\n    public void getParentFolder_isRootFolder() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/\");\n        origin.setFileId(1);\n        origin.setRemotePath(\"/\");\n        origin.setStoragePath(\"/\");\n        origin.setFolder();\n\n        // Act\n        targetActivity.setFile(origin);\n        OCFile target = targetActivity.getCurrentFolder();\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled getParentFolder_isRootFolder from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: getParentFolder_isRootFolder\n\n        Method Code: Test\n    public void getParentFolder_isRootFolder() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/\");\n        origin.setFileId(1);\n        origin.setRemotePath(\"/\");\n        origin.setStoragePath(\"/\");\n        origin.setFolder();\n\n        // Act\n        targetActivity.setFile(origin);\n        OCFile target = targetActivity.getCurrentFolder();\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testGetParentFolder_isRootFolder() {\n    // Arrange\n    let targetActivity = activityRule.activity\n    let origin = OCFile(\"/\")\n    origin.fileId = 1\n    origin.remotePath = \"/\"\n    origin.storagePath = \"/\"\n    origin.setFolder()\n\n    // Act\n    targetActivity.setFile(origin)\n    let target = targetActivity.getCurrentFolder()\n\n    // Assert\n    XCTAssertEqual(origin, target)\n}\n```"
    },
    {
        "method_name": "nullFile",
        "method_code": "Test\n    public void nullFile() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile rootFolder = targetActivity.getStorageManager().getFileByPath(OCFile.ROOT_PATH);\n\n        // Act\n        targetActivity.setFile(null);\n        OCFile target = targetActivity.getCurrentFolder();\n\n        // Assert\n        Assert.assertEquals(rootFolder, target);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled nullFile from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: nullFile\n\n        Method Code: Test\n    public void nullFile() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile rootFolder = targetActivity.getStorageManager().getFileByPath(OCFile.ROOT_PATH);\n\n        // Act\n        targetActivity.setFile(null);\n        OCFile target = targetActivity.getCurrentFolder();\n\n        // Assert\n        Assert.assertEquals(rootFolder, target);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testNullFile() {\n    // Arrange\n    let targetActivity = activityRule.activity\n    let rootFolder = targetActivity.storageManager.getFileByPath(OCFile.ROOT_PATH)\n\n    // Act\n    targetActivity.setFile(nil)\n    let target = targetActivity.currentFolder\n\n    // Assert\n    XCTAssertEqual(rootFolder, target)\n}\n```"
    },
    {
        "method_name": "getParentFolder",
        "method_code": "Test\n    public void getParentFolder() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/file.test\");\n        origin.setRemotePath(\"/test/file.test\");\n\n        OCFile target = new OCFile(\"/test/\");\n\n        // Act\n        targetActivity.setFile(origin);\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled getParentFolder from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: getParentFolder\n\n        Method Code: Test\n    public void getParentFolder() {\n        // Arrange\n        FolderPickerActivity targetActivity = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/file.test\");\n        origin.setRemotePath(\"/test/file.test\");\n\n        OCFile target = new OCFile(\"/test/\");\n\n        // Act\n        targetActivity.setFile(origin);\n\n        // Assert\n        Assert.assertEquals(origin, target);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testGetParentFolder() {\n    // Arrange\n    let targetActivity = activityRule.activity\n    let origin = OCFile(\"/test/file.test\")\n    origin.setRemotePath(\"/test/file.test\")\n\n    let target = OCFile(\"/test/\")\n\n    // Act\n    targetActivity.setFile(origin)\n\n    // Assert\n    XCTAssertEqual(origin, target)\n}\n```"
    },
    {
        "method_name": "open",
        "method_code": "Test\n    @ScreenshotTest\n    public void open() {\n        FolderPickerActivity sut = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/file.txt\");\n        sut.setFile(origin);\n\n        sut.runOnUiThread(() -> {\n            sut.findViewById(R.id.folder_picker_btn_copy).requestFocus();\n        });\n        waitForIdleSync();\n        screenshot(sut);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled open from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: open\n\n        Method Code: Test\n    @ScreenshotTest\n    public void open() {\n        FolderPickerActivity sut = activityRule.getActivity();\n        OCFile origin = new OCFile(\"/test/file.txt\");\n        sut.setFile(origin);\n\n        sut.runOnUiThread(() -> {\n            sut.findViewById(R.id.folder_picker_btn_copy).requestFocus();\n        });\n        waitForIdleSync();\n        screenshot(sut);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc open() {\n    let sut = activityRule.activity\n    let origin = OCFile(path: \"/test/file.txt\")\n    sut.setFile(origin)\n\n    DispatchQueue.main.async {\n        sut.view.viewWithTag(R.id.folder_picker_btn_copy)?.becomeFirstResponder()\n    }\n    waitForIdleSync()\n    screenshot(sut)\n}\n```"
    },
    {
        "method_name": "testMoveOrCopy",
        "method_code": "Test\n    @ScreenshotTest\n    public void testMoveOrCopy() {\n        Intent intent = new Intent();\n        FolderPickerActivity targetActivity = activityRule.launchActivity(intent);\n\n        waitForIdleSync();\n        screenshot(targetActivity);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled testMoveOrCopy from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: testMoveOrCopy\n\n        Method Code: Test\n    @ScreenshotTest\n    public void testMoveOrCopy() {\n        Intent intent = new Intent();\n        FolderPickerActivity targetActivity = activityRule.launchActivity(intent);\n\n        waitForIdleSync();\n        screenshot(targetActivity);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testMoveOrCopy() {\n    let intent = Intent()\n    let targetActivity = activityRule.launchActivity(intent: intent)\n\n    waitForIdleSync()\n    screenshot(targetActivity)\n}\n```"
    },
    {
        "method_name": "testChooseLocationAction",
        "method_code": "Test\n    @ScreenshotTest\n    public void testChooseLocationAction() {\n        Intent intent = new Intent();\n        intent.putExtra(FolderPickerActivity.EXTRA_ACTION, FolderPickerActivity.CHOOSE_LOCATION);\n        FolderPickerActivity targetActivity = activityRule.launchActivity(intent);\n\n        waitForIdleSync();\n        screenshot(targetActivity);\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled testChooseLocationAction from FolderPickerActivityIT.java into Swift.\n\n        Input:\n\n        Method Name: testChooseLocationAction\n\n        Method Code: Test\n    @ScreenshotTest\n    public void testChooseLocationAction() {\n        Intent intent = new Intent();\n        intent.putExtra(FolderPickerActivity.EXTRA_ACTION, FolderPickerActivity.CHOOSE_LOCATION);\n        FolderPickerActivity targetActivity = activityRule.launchActivity(intent);\n\n        waitForIdleSync();\n        screenshot(targetActivity);\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testChooseLocationAction() {\n    let intent = Intent()\n    intent.putExtra(FolderPickerActivity.EXTRA_ACTION, FolderPickerActivity.CHOOSE_LOCATION)\n    let targetActivity = activityRule.launchActivity(intent)\n\n    waitForIdleSync()\n    screenshot(targetActivity)\n}\n```"
    }
]