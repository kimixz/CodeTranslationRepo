[
    {
        "method_name": "tryUpgrade",
        "method_code": "ublic void tryUpgrade(SupportSQLiteDatabase db, int oldVersion, int newVersion) {\n        try {\n            upgrade(db, oldVersion, newVersion);\n        } catch (Throwable t) {\n            Log_OC.i(TAG, \"Migration upgrade failed due to \" + t);\n            clearStorage();\n        }\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled tryUpgrade from LegacyMigrationHelper.java into Swift.\n\n        Input:\n\n        Method Name: tryUpgrade\n\n        Method Code: ublic void tryUpgrade(SupportSQLiteDatabase db, int oldVersion, int newVersion) {\n        try {\n            upgrade(db, oldVersion, newVersion);\n        } catch (Throwable t) {\n            Log_OC.i(TAG, \"Migration upgrade failed due to \" + t);\n            clearStorage();\n        }\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc tryUpgrade(db: SupportSQLiteDatabase, oldVersion: Int, newVersion: Int) {\n    do {\n        try upgrade(db: db, oldVersion: oldVersion, newVersion: newVersion)\n    } catch {\n        Log_OC.i(TAG, \"Migration upgrade failed due to \\(error)\")\n        clearStorage()\n    }\n}\n```"
    },
    {
        "method_name": "clearStorage",
        "method_code": "SuppressFBWarnings(\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\")\n    private void clearStorage() {\n        context.getCacheDir().delete();\n        ((ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE)).clearApplicationUserData();\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled clearStorage from LegacyMigrationHelper.java into Swift.\n\n        Input:\n\n        Method Name: clearStorage\n\n        Method Code: SuppressFBWarnings(\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\")\n    private void clearStorage() {\n        context.getCacheDir().delete();\n        ((ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE)).clearApplicationUserData();\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func clearStorage() {\n    if let cacheDir = FileManager.default.urls(for: .cachesDirectory, in: .userDomainMask).first {\n        try? FileManager.default.removeItem(at: cacheDir)\n    }\n    if let app = UIApplication.shared.delegate as? AppDelegate {\n        app.perform(#selector(NSXPCConnection.suspend))\n    }\n}\n```"
    },
    {
        "method_name": "upgrade",
        "method_code": "rivate void upgrade(SupportSQLiteDatabase db, int oldVersion, int newVersion) {\n        Log_OC.i(TAG, \"Entering in onUpgrade\");\n        boolean upgraded = false;\n\n        if (oldVersion < 25 && newVersion >= 25) {\n            Log_OC.i(TAG, \"Entering in the #25 Adding encryption flag to file\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION + \" INTEGER \");\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 26 && newVersion >= 26) {\n            Log_OC.i(TAG, \"Entering in the #26 Adding text and element color to capabilities\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR + \" TEXT \");\n\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 27 && newVersion >= 27) {\n            Log_OC.i(TAG, \"Entering in the #27 Adding token to ocUpload\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN + \" TEXT \");\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 28 && newVersion >= 28) {\n            Log_OC.i(TAG, \"Entering in the #28 Adding CRC32 column to filesystem table\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32 + \" TEXT \");\n                }\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 29 && newVersion >= 29) {\n            Log_OC.i(TAG, \"Entering in the #29 Adding background default/plain to capabilities\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_BACKGROUND_DEFAULT + \" INTEGER \");\n\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_BACKGROUND_PLAIN + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 30 && newVersion >= 30) {\n            Log_OC.i(TAG, \"Entering in the #30 Re-add 25, 26 if needed\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED + \" INTEGER \");\n                }\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME + \" TEXT \");\n                }\n                if (oldVersion > ARBITRARY_DATA_TABLE_INTRODUCTION_VERSION) {\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION)) {\n                        db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                                       ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION + \" INTEGER \");\n                    }\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR)) {\n                        db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                                       ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR + \" TEXT \");\n                    }\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR)) {\n                        db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                                       ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR + \" TEXT \");\n                    }\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32)) {\n                        try {\n                            db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME +\n                                           ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32 + \" TEXT \");\n                        } catch (SQLiteException e) {\n                            Log_OC.d(TAG, \"Known problem on adding same column twice when upgrading from 24->30\");\n                        }\n                    }\n                }\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 31 && newVersion >= 31) {\n            Log_OC.i(TAG, \"Entering in the #31 add mount type\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_MOUNT_TYPE + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 32 && newVersion >= 32) {\n            Log_OC.i(TAG, \"Entering in the #32 add ocshares.is_password_protected\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_IS_PASSWORD_PROTECTED + \" INTEGER \"); // boolean\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 33 && newVersion >= 33) {\n            Log_OC.i(TAG, \"Entering in the #3 Adding activity to capability\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_ACTIVITY + \" INTEGER \");\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 34 && newVersion >= 34) {\n            Log_OC.i(TAG, \"Entering in the #34 add redirect to external links\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_REDIRECT)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_REDIRECT + \" INTEGER \"); // boolean\n                }\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 35 && newVersion >= 35) {\n            Log_OC.i(TAG, \"Entering in the #35 add note to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_NOTE + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 36 && newVersion >= 36) {\n            Log_OC.i(TAG, \"Entering in the #36 add has-preview to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_HAS_PREVIEW + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 37 && newVersion >= 37) {\n            Log_OC.i(TAG, \"Entering in the #37 add hide-download to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_HIDE_DOWNLOAD + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 38 && newVersion >= 38) {\n            Log_OC.i(TAG, \"Entering in the #38 add richdocuments\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT + \" INTEGER \"); // boolean\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_MIMETYPE_LIST + \" TEXT \"); // string\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 39 && newVersion >= 39) {\n            Log_OC.i(TAG, \"Entering in the #39 add richdocuments direct editing\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_DIRECT_EDITING + \" INTEGER \"); // bool\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 40 && newVersion >= 40) {\n            Log_OC.i(TAG, \"Entering in the #40 add unreadCommentsCount to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_UNREAD_COMMENTS_COUNT + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 41 && newVersion >= 41) {\n            Log_OC.i(TAG, \"Entering in the #41 add eTagOnServer\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_ETAG_ON_SERVER + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 42 && newVersion >= 42) {\n            Log_OC.i(TAG, \"Entering in the #42 add richDocuments templates\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_TEMPLATES + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 43 && newVersion >= 43) {\n            Log_OC.i(TAG, \"Entering in the #43 add ownerId and owner display name to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_OWNER_ID + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_OWNER_DISPLAY_NAME + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 44 && newVersion >= 44) {\n            Log_OC.i(TAG, \"Entering in the #44 add note to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_NOTE + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 45 && newVersion >= 45) {\n            Log_OC.i(TAG, \"Entering in the #45 add sharees to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_SHAREES + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 46 && newVersion >= 46) {\n            Log_OC.i(TAG, \"Entering in the #46 add optional mimetypes to capabilities table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_OPTIONAL_MIMETYPE_LIST\n                               + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 47 && newVersion >= 47) {\n            Log_OC.i(TAG, \"Entering in the #47 add askForPassword to capability table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_ASK_FOR_OPTIONAL_PASSWORD +\n                               \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 48 && newVersion >= 48) {\n            Log_OC.i(TAG, \"Entering in the #48 add product name to capabilities table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_PRODUCT_NAME + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 49 && newVersion >= 49) {\n            Log_OC.i(TAG, \"Entering in the #49 add extended support to capabilities table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_EXTENDED_SUPPORT + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 50 && newVersion >= 50) {\n            Log_OC.i(TAG, \"Entering in the #50 add persistent enable date to synced_folders table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED_TIMESTAMP_MS + \" INTEGER \");\n\n                db.execSQL(\"UPDATE \" + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME + \" SET \" +\n                               ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED_TIMESTAMP_MS + \" = CASE \" +\n                               \" WHEN enabled = 0 THEN \" + SyncedFolder.EMPTY_ENABLED_TIMESTAMP_MS + \" \" +\n                               \" ELSE \" + clock.getCurrentTime() +\n                               \" END \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 51 && newVersion >= 51) {\n            Log_OC.i(TAG, \"Entering in the #51 add show/hide to folderSync table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_HIDDEN + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 52 && newVersion >= 52) {\n            Log_OC.i(TAG, \"Entering in the #52 add etag for directEditing to capability\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_DIRECT_EDITING_ETAG + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 53 && newVersion >= 53) {\n            Log_OC.i(TAG, \"Entering in the #53 add rich workspace to file table\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILE_RICH_WORKSPACE)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_RICH_WORKSPACE + \" TEXT \");\n                }\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 54 && newVersion >= 54) {\n            Log_OC.i(TAG, \"Entering in the #54 add synced.existing,\" +\n                \" rename uploads.force_overwrite to uploads.name_collision_policy\");\n            db.beginTransaction();\n            try {\n                // Add synced.existing\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_EXISTING + \" INTEGER \"); // boolean\n\n\n                // Rename uploads.force_overwrite to uploads.name_collision_policy\n                String tmpTableName = ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \"_old\";\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \" RENAME TO \" + tmpTableName);\n                createUploadsTable(db);\n                db.execSQL(\"INSERT INTO \" + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \" (\" +\n                               ProviderMeta.ProviderTableMeta._ID + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_STATUS + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_NAME_COLLISION_POLICY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN +\n                               \") \" +\n                               \" SELECT \" +\n                               ProviderMeta.ProviderTableMeta._ID + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_STATUS + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME + \", \" +\n                               \"force_overwrite\" + \", \" + // See FileUploader.NameCollisionPolicy\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN +\n                               \" FROM \" + tmpTableName);\n                db.execSQL(\"DROP TABLE \" + tmpTableName);\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 55 && newVersion >= 55) {\n            Log_OC.i(TAG, \"Entering in the #55 add synced.name_collision_policy.\");\n            db.beginTransaction();\n            try {\n                // Add synced.name_collision_policy\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY + \" INTEGER \"); // integer\n\n                // make sure all existing folders set to FileUploader.NameCollisionPolicy.ASK_USER.\n                db.execSQL(\"UPDATE \" + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME + \" SET \" +\n                               ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY + \" = \" +\n                               NameCollisionPolicy.ASK_USER.serialize());\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 56 && newVersion >= 56) {\n            Log_OC.i(TAG, \"Entering in the #56 add decrypted remote path\");\n            db.beginTransaction();\n            try {\n                // Add synced.name_collision_policy\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_PATH_DECRYPTED + \" TEXT \"); // strin\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 57 && newVersion >= 57) {\n            Log_OC.i(TAG, \"Entering in the #57 add etag for capabilities\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_ETAG + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 58 && newVersion >= 58) {\n            Log_OC.i(TAG, \"Entering in the #58 add public link to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_SHARE_LINK + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 59 && newVersion >= 59) {\n            Log_OC.i(TAG, \"Entering in the #59 add public label to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_SHARE_LABEL + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 60 && newVersion >= 60) {\n            Log_OC.i(TAG, \"Entering in the #60 add user status to capability table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_USER_STATUS + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_USER_STATUS_SUPPORTS_EMOJI + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 61 && newVersion >= 61) {\n            Log_OC.i(TAG, \"Entering in the #61 reset eTag to force capability refresh\");\n            db.beginTransaction();\n            try {\n                db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 62 && newVersion >= 62) {\n            Log_OC.i(TAG, \"Entering in the #62 add logo to capability\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_LOGO + \" TEXT \");\n\n                // force refresh\n                db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (oldVersion < 63 && newVersion >= 63) {\n            Log_OC.i(TAG, \"Adding file locking columns\");\n            db.beginTransaction();\n            try {\n                // locking capabilities\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME + ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_FILES_LOCKING_VERSION + \" TEXT \");\n                // force refresh\n                db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n                // locking properties\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCKED + \" INTEGER \"); // boolean\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TYPE + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER_DISPLAY_NAME + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER_EDITOR + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TIMESTAMP + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TIMEOUT + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TOKEN + \" TEXT \");\n                db.execSQL(\"UPDATE \" + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME + \" SET \" + ProviderMeta.ProviderTableMeta.FILE_ETAG + \" = '' WHERE 1=1\");\n\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 64 && newVersion >= 64) {\n            Log_OC.i(TAG, \"Entering in the #64 add metadata size to files\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_METADATA_SIZE + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled upgrade from LegacyMigrationHelper.java into Swift.\n\n        Input:\n\n        Method Name: upgrade\n\n        Method Code: rivate void upgrade(SupportSQLiteDatabase db, int oldVersion, int newVersion) {\n        Log_OC.i(TAG, \"Entering in onUpgrade\");\n        boolean upgraded = false;\n\n        if (oldVersion < 25 && newVersion >= 25) {\n            Log_OC.i(TAG, \"Entering in the #25 Adding encryption flag to file\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION + \" INTEGER \");\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 26 && newVersion >= 26) {\n            Log_OC.i(TAG, \"Entering in the #26 Adding text and element color to capabilities\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR + \" TEXT \");\n\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 27 && newVersion >= 27) {\n            Log_OC.i(TAG, \"Entering in the #27 Adding token to ocUpload\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN + \" TEXT \");\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 28 && newVersion >= 28) {\n            Log_OC.i(TAG, \"Entering in the #28 Adding CRC32 column to filesystem table\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32 + \" TEXT \");\n                }\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 29 && newVersion >= 29) {\n            Log_OC.i(TAG, \"Entering in the #29 Adding background default/plain to capabilities\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_BACKGROUND_DEFAULT + \" INTEGER \");\n\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_BACKGROUND_PLAIN + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 30 && newVersion >= 30) {\n            Log_OC.i(TAG, \"Entering in the #30 Re-add 25, 26 if needed\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED + \" INTEGER \");\n                }\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME + \" TEXT \");\n                }\n                if (oldVersion > ARBITRARY_DATA_TABLE_INTRODUCTION_VERSION) {\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION)) {\n                        db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                                       ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION + \" INTEGER \");\n                    }\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR)) {\n                        db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                                       ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR + \" TEXT \");\n                    }\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR)) {\n                        db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                                       ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR + \" TEXT \");\n                    }\n                    if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME,\n                                             ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32)) {\n                        try {\n                            db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME +\n                                           ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32 + \" TEXT \");\n                        } catch (SQLiteException e) {\n                            Log_OC.d(TAG, \"Known problem on adding same column twice when upgrading from 24->30\");\n                        }\n                    }\n                }\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 31 && newVersion >= 31) {\n            Log_OC.i(TAG, \"Entering in the #31 add mount type\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_MOUNT_TYPE + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 32 && newVersion >= 32) {\n            Log_OC.i(TAG, \"Entering in the #32 add ocshares.is_password_protected\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_IS_PASSWORD_PROTECTED + \" INTEGER \"); // boolean\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 33 && newVersion >= 33) {\n            Log_OC.i(TAG, \"Entering in the #3 Adding activity to capability\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_ACTIVITY + \" INTEGER \");\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 34 && newVersion >= 34) {\n            Log_OC.i(TAG, \"Entering in the #34 add redirect to external links\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_REDIRECT)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_REDIRECT + \" INTEGER \"); // boolean\n                }\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 35 && newVersion >= 35) {\n            Log_OC.i(TAG, \"Entering in the #35 add note to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_NOTE + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 36 && newVersion >= 36) {\n            Log_OC.i(TAG, \"Entering in the #36 add has-preview to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_HAS_PREVIEW + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 37 && newVersion >= 37) {\n            Log_OC.i(TAG, \"Entering in the #37 add hide-download to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_HIDE_DOWNLOAD + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 38 && newVersion >= 38) {\n            Log_OC.i(TAG, \"Entering in the #38 add richdocuments\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT + \" INTEGER \"); // boolean\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_MIMETYPE_LIST + \" TEXT \"); // string\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 39 && newVersion >= 39) {\n            Log_OC.i(TAG, \"Entering in the #39 add richdocuments direct editing\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_DIRECT_EDITING + \" INTEGER \"); // bool\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 40 && newVersion >= 40) {\n            Log_OC.i(TAG, \"Entering in the #40 add unreadCommentsCount to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_UNREAD_COMMENTS_COUNT + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 41 && newVersion >= 41) {\n            Log_OC.i(TAG, \"Entering in the #41 add eTagOnServer\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_ETAG_ON_SERVER + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 42 && newVersion >= 42) {\n            Log_OC.i(TAG, \"Entering in the #42 add richDocuments templates\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_TEMPLATES + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 43 && newVersion >= 43) {\n            Log_OC.i(TAG, \"Entering in the #43 add ownerId and owner display name to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_OWNER_ID + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_OWNER_DISPLAY_NAME + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 44 && newVersion >= 44) {\n            Log_OC.i(TAG, \"Entering in the #44 add note to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_NOTE + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 45 && newVersion >= 45) {\n            Log_OC.i(TAG, \"Entering in the #45 add sharees to file table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_SHAREES + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 46 && newVersion >= 46) {\n            Log_OC.i(TAG, \"Entering in the #46 add optional mimetypes to capabilities table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_OPTIONAL_MIMETYPE_LIST\n                               + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 47 && newVersion >= 47) {\n            Log_OC.i(TAG, \"Entering in the #47 add askForPassword to capability table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_ASK_FOR_OPTIONAL_PASSWORD +\n                               \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 48 && newVersion >= 48) {\n            Log_OC.i(TAG, \"Entering in the #48 add product name to capabilities table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_PRODUCT_NAME + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 49 && newVersion >= 49) {\n            Log_OC.i(TAG, \"Entering in the #49 add extended support to capabilities table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_EXTENDED_SUPPORT + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 50 && newVersion >= 50) {\n            Log_OC.i(TAG, \"Entering in the #50 add persistent enable date to synced_folders table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED_TIMESTAMP_MS + \" INTEGER \");\n\n                db.execSQL(\"UPDATE \" + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME + \" SET \" +\n                               ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED_TIMESTAMP_MS + \" = CASE \" +\n                               \" WHEN enabled = 0 THEN \" + SyncedFolder.EMPTY_ENABLED_TIMESTAMP_MS + \" \" +\n                               \" ELSE \" + clock.getCurrentTime() +\n                               \" END \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 51 && newVersion >= 51) {\n            Log_OC.i(TAG, \"Entering in the #51 add show/hide to folderSync table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_HIDDEN + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 52 && newVersion >= 52) {\n            Log_OC.i(TAG, \"Entering in the #52 add etag for directEditing to capability\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_DIRECT_EDITING_ETAG + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 53 && newVersion >= 53) {\n            Log_OC.i(TAG, \"Entering in the #53 add rich workspace to file table\");\n            db.beginTransaction();\n            try {\n                if (!checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME,\n                                         ProviderMeta.ProviderTableMeta.FILE_RICH_WORKSPACE)) {\n                    db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                                   ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_RICH_WORKSPACE + \" TEXT \");\n                }\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 54 && newVersion >= 54) {\n            Log_OC.i(TAG, \"Entering in the #54 add synced.existing,\" +\n                \" rename uploads.force_overwrite to uploads.name_collision_policy\");\n            db.beginTransaction();\n            try {\n                // Add synced.existing\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_EXISTING + \" INTEGER \"); // boolean\n\n\n                // Rename uploads.force_overwrite to uploads.name_collision_policy\n                String tmpTableName = ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \"_old\";\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \" RENAME TO \" + tmpTableName);\n                createUploadsTable(db);\n                db.execSQL(\"INSERT INTO \" + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \" (\" +\n                               ProviderMeta.ProviderTableMeta._ID + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_STATUS + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_NAME_COLLISION_POLICY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN +\n                               \") \" +\n                               \" SELECT \" +\n                               ProviderMeta.ProviderTableMeta._ID + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_STATUS + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME + \", \" +\n                               \"force_overwrite\" + \", \" + // See FileUploader.NameCollisionPolicy\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY + \", \" +\n                               ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN +\n                               \" FROM \" + tmpTableName);\n                db.execSQL(\"DROP TABLE \" + tmpTableName);\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 55 && newVersion >= 55) {\n            Log_OC.i(TAG, \"Entering in the #55 add synced.name_collision_policy.\");\n            db.beginTransaction();\n            try {\n                // Add synced.name_collision_policy\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY + \" INTEGER \"); // integer\n\n                // make sure all existing folders set to FileUploader.NameCollisionPolicy.ASK_USER.\n                db.execSQL(\"UPDATE \" + ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME + \" SET \" +\n                               ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY + \" = \" +\n                               NameCollisionPolicy.ASK_USER.serialize());\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 56 && newVersion >= 56) {\n            Log_OC.i(TAG, \"Entering in the #56 add decrypted remote path\");\n            db.beginTransaction();\n            try {\n                // Add synced.name_collision_policy\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_PATH_DECRYPTED + \" TEXT \"); // strin\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 57 && newVersion >= 57) {\n            Log_OC.i(TAG, \"Entering in the #57 add etag for capabilities\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_ETAG + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 58 && newVersion >= 58) {\n            Log_OC.i(TAG, \"Entering in the #58 add public link to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_SHARE_LINK + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 59 && newVersion >= 59) {\n            Log_OC.i(TAG, \"Entering in the #59 add public label to share table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.OCSHARES_SHARE_LABEL + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 60 && newVersion >= 60) {\n            Log_OC.i(TAG, \"Entering in the #60 add user status to capability table\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_USER_STATUS + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_USER_STATUS_SUPPORTS_EMOJI + \" INTEGER \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 61 && newVersion >= 61) {\n            Log_OC.i(TAG, \"Entering in the #61 reset eTag to force capability refresh\");\n            db.beginTransaction();\n            try {\n                db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 62 && newVersion >= 62) {\n            Log_OC.i(TAG, \"Entering in the #62 add logo to capability\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_LOGO + \" TEXT \");\n\n                // force refresh\n                db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (oldVersion < 63 && newVersion >= 63) {\n            Log_OC.i(TAG, \"Adding file locking columns\");\n            db.beginTransaction();\n            try {\n                // locking capabilities\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME + ADD_COLUMN + ProviderMeta.ProviderTableMeta.CAPABILITIES_FILES_LOCKING_VERSION + \" TEXT \");\n                // force refresh\n                db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\");\n                // locking properties\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCKED + \" INTEGER \"); // boolean\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TYPE + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER_DISPLAY_NAME + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER_EDITOR + \" TEXT \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TIMESTAMP + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TIMEOUT + \" INTEGER \");\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_LOCK_TOKEN + \" TEXT \");\n                db.execSQL(\"UPDATE \" + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME + \" SET \" + ProviderMeta.ProviderTableMeta.FILE_ETAG + \" = '' WHERE 1=1\");\n\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n\n        if (oldVersion < 64 && newVersion >= 64) {\n            Log_OC.i(TAG, \"Entering in the #64 add metadata size to files\");\n            db.beginTransaction();\n            try {\n                db.execSQL(ALTER_TABLE + ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME +\n                               ADD_COLUMN + ProviderMeta.ProviderTableMeta.FILE_METADATA_SIZE + \" TEXT \");\n\n                upgraded = true;\n                db.setTransactionSuccessful();\n            } finally {\n                db.endTransaction();\n            }\n        }\n\n        if (!upgraded) {\n            Log_OC.i(TAG, String.format(Locale.ENGLISH, UPGRADE_VERSION_MSG, oldVersion, newVersion));\n        }\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func upgrade(db: SupportSQLiteDatabase, oldVersion: Int, newVersion: Int) {\n    Log_OC.i(TAG, \"Entering in onUpgrade\")\n    var upgraded = false\n\n    if oldVersion < 25 && newVersion >= 25 {\n        Log_OC.i(TAG, \"Entering in the #25 Adding encryption flag to file\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME) TEXT \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 26 && newVersion >= 26 {\n        Log_OC.i(TAG, \"Entering in the #26 Adding text and element color to capabilities\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR) TEXT \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 27 && newVersion >= 27 {\n        Log_OC.i(TAG, \"Entering in the #27 Adding token to ocUpload\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 28 && newVersion >= 28 {\n        Log_OC.i(TAG, \"Entering in the #28 Adding CRC32 column to filesystem table\")\n        db.beginTransaction()\n        do {\n            if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME, ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32) {\n                db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32) TEXT \")\n            }\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 29 && newVersion >= 29 {\n        Log_OC.i(TAG, \"Entering in the #29 Adding background default/plain to capabilities\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_BACKGROUND_DEFAULT) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_BACKGROUND_PLAIN) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 30 && newVersion >= 30 {\n        Log_OC.i(TAG, \"Entering in the #30 Re-add 25, 26 if needed\")\n        db.beginTransaction()\n        do {\n            if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME, ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED) {\n                db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_IS_ENCRYPTED) INTEGER \")\n            }\n            if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME, ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME) {\n                db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_ENCRYPTED_NAME) TEXT \")\n            }\n            if oldVersion > ARBITRARY_DATA_TABLE_INTRODUCTION_VERSION {\n                if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME, ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION) {\n                    db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_END_TO_END_ENCRYPTION) INTEGER \")\n                }\n                if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME, ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR) {\n                    db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_TEXT_COLOR) TEXT \")\n                }\n                if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME, ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR) {\n                    db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_ELEMENT_COLOR) TEXT \")\n                }\n                if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME, ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32) {\n                    do {\n                        db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILESYSTEM_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32) TEXT \")\n                    } catch {\n                        Log_OC.d(TAG, \"Known problem on adding same column twice when upgrading from 24->30\")\n                    }\n                }\n            }\n\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 31 && newVersion >= 31 {\n        Log_OC.i(TAG, \"Entering in the #31 add mount type\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_MOUNT_TYPE) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 32 && newVersion >= 32 {\n        Log_OC.i(TAG, \"Entering in the #32 add ocshares.is_password_protected\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.OCSHARES_IS_PASSWORD_PROTECTED) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 33 && newVersion >= 33 {\n        Log_OC.i(TAG, \"Entering in the #3 Adding activity to capability\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_ACTIVITY) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 34 && newVersion >= 34 {\n        Log_OC.i(TAG, \"Entering in the #34 add redirect to external links\")\n        db.beginTransaction()\n        do {\n            if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_TABLE_NAME, ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_REDIRECT) {\n                db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.EXTERNAL_LINKS_REDIRECT) INTEGER \")\n            }\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 35 && newVersion >= 35 {\n        Log_OC.i(TAG, \"Entering in the #35 add note to share table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.OCSHARES_NOTE) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 36 && newVersion >= 36 {\n        Log_OC.i(TAG, \"Entering in the #36 add has-preview to file table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_HAS_PREVIEW) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 37 && newVersion >= 37 {\n        Log_OC.i(TAG, \"Entering in the #37 add hide-download to share table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.OCSHARES_HIDE_DOWNLOAD) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 38 && newVersion >= 38 {\n        Log_OC.i(TAG, \"Entering in the #38 add richdocuments\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_MIMETYPE_LIST) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 39 && newVersion >= 39 {\n        Log_OC.i(TAG, \"Entering in the #39 add richdocuments direct editing\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_DIRECT_EDITING) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 40 && newVersion >= 40 {\n        Log_OC.i(TAG, \"Entering in the #40 add unreadCommentsCount to file table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_UNREAD_COMMENTS_COUNT) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 41 && newVersion >= 41 {\n        Log_OC.i(TAG, \"Entering in the #41 add eTagOnServer\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_ETAG_ON_SERVER) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 42 && newVersion >= 42 {\n        Log_OC.i(TAG, \"Entering in the #42 add richDocuments templates\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_TEMPLATES) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 43 && newVersion >= 43 {\n        Log_OC.i(TAG, \"Entering in the #43 add ownerId and owner display name to file table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_OWNER_ID) TEXT \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_OWNER_DISPLAY_NAME) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 44 && newVersion >= 44 {\n        Log_OC.i(TAG, \"Entering in the #44 add note to file table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_NOTE) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 45 && newVersion >= 45 {\n        Log_OC.i(TAG, \"Entering in the #45 add sharees to file table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_SHAREES) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 46 && newVersion >= 46 {\n        Log_OC.i(TAG, \"Entering in the #46 add optional mimetypes to capabilities table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_OPTIONAL_MIMETYPE_LIST) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 47 && newVersion >= 47 {\n        Log_OC.i(TAG, \"Entering in the #47 add askForPassword to capability table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_ASK_FOR_OPTIONAL_PASSWORD) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 48 && newVersion >= 48 {\n        Log_OC.i(TAG, \"Entering in the #48 add product name to capabilities table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_PRODUCT_NAME) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 49 && newVersion >= 49 {\n        Log_OC.i(TAG, \"Entering in the #49 add extended support to capabilities table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_EXTENDED_SUPPORT) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 50 && newVersion >= 50 {\n        Log_OC.i(TAG, \"Entering in the #50 add persistent enable date to synced_folders table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED_TIMESTAMP_MS) INTEGER \")\n            db.execSQL(\"UPDATE \\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME) SET \\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED_TIMESTAMP_MS) = CASE WHEN enabled = 0 THEN \\(SyncedFolder.EMPTY_ENABLED_TIMESTAMP_MS) ELSE \\(clock.getCurrentTime()) END \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 51 && newVersion >= 51 {\n        Log_OC.i(TAG, \"Entering in the #51 add show/hide to folderSync table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_HIDDEN) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 52 && newVersion >= 52 {\n        Log_OC.i(TAG, \"Entering in the #52 add etag for directEditing to capability\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_DIRECT_EDITING_ETAG) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 53 && newVersion >= 53 {\n        Log_OC.i(TAG, \"Entering in the #53 add rich workspace to file table\")\n        db.beginTransaction()\n        do {\n            if !checkIfColumnExists(db, ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME, ProviderMeta.ProviderTableMeta.FILE_RICH_WORKSPACE) {\n                db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_RICH_WORKSPACE) TEXT \")\n            }\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 54 && newVersion >= 54 {\n        Log_OC.i(TAG, \"Entering in the #54 add synced.existing, rename uploads.force_overwrite to uploads.name_collision_policy\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_EXISTING) INTEGER \")\n            let tmpTableName = \"\\(ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME)_old\"\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME) RENAME TO \\(tmpTableName)\")\n            createUploadsTable(db)\n            db.execSQL(\"INSERT INTO \\(ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME) (\\(ProviderMeta.ProviderTableMeta._ID), \\(ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH), \\(ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH), \\(ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME), \\(ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE), \\(ProviderMeta.ProviderTableMeta.UPLOADS_STATUS), \\(ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR), \\(ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME), \\(ProviderMeta.ProviderTableMeta.UPLOADS_NAME_COLLISION_POLICY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER), \\(ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP), \\(ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT), \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN)) SELECT \\(ProviderMeta.ProviderTableMeta._ID), \\(ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH), \\(ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH), \\(ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME), \\(ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE), \\(ProviderMeta.ProviderTableMeta.UPLOADS_STATUS), \\(ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR), \\(ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME), force_overwrite, \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER), \\(ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP), \\(ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT), \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY), \\(ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN) FROM \\(tmpTableName)\")\n            db.execSQL(\"DROP TABLE \\(tmpTableName)\")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 55 && newVersion >= 55 {\n        Log_OC.i(TAG, \"Entering in the #55 add synced.name_collision_policy.\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY) INTEGER \")\n            db.execSQL(\"UPDATE \\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDERS_TABLE_NAME) SET \\(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY) = \\(NameCollisionPolicy.ASK_USER.serialize())\")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 56 && newVersion >= 56 {\n        Log_OC.i(TAG, \"Entering in the #56 add decrypted remote path\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_PATH_DECRYPTED) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 57 && newVersion >= 57 {\n        Log_OC.i(TAG, \"Entering in the #57 add etag for capabilities\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_ETAG) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 58 && newVersion >= 58 {\n        Log_OC.i(TAG, \"Entering in the #58 add public link to share table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.OCSHARES_SHARE_LINK) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 59 && newVersion >= 59 {\n        Log_OC.i(TAG, \"Entering in the #59 add public label to share table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.OCSHARES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.OCSHARES_SHARE_LABEL) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 60 && newVersion >= 60 {\n        Log_OC.i(TAG, \"Entering in the #60 add user status to capability table\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_USER_STATUS) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_USER_STATUS_SUPPORTS_EMOJI) INTEGER \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 61 && newVersion >= 61 {\n        Log_OC.i(TAG, \"Entering in the #61 reset eTag to force capability refresh\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 62 && newVersion >= 62 {\n        Log_OC.i(TAG, \"Entering in the #62 add logo to capability\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_SERVER_LOGO) TEXT \")\n            db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if oldVersion < 63 && newVersion >= 63 {\n        Log_OC.i(TAG, \"Adding file locking columns\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.CAPABILITIES_FILES_LOCKING_VERSION) TEXT \")\n            db.execSQL(\"UPDATE capabilities SET etag = '' WHERE 1=1\")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCKED) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_TYPE) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER) TEXT \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER_DISPLAY_NAME) TEXT \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_OWNER_EDITOR) TEXT \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_TIMESTAMP) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_TIMEOUT) INTEGER \")\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_LOCK_TOKEN) TEXT \")\n            db.execSQL(\"UPDATE \\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME) SET \\(ProviderMeta.ProviderTableMeta.FILE_ETAG) = '' WHERE 1=1\")\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n\n    if oldVersion < 64 && newVersion >= 64 {\n        Log_OC.i(TAG, \"Entering in the #64 add metadata size to files\")\n        db.beginTransaction()\n        do {\n            db.execSQL(\"\\(ALTER_TABLE)\\(ProviderMeta.ProviderTableMeta.FILE_TABLE_NAME)\\(ADD_COLUMN)\\(ProviderMeta.ProviderTableMeta.FILE_METADATA_SIZE) TEXT \")\n            upgraded = true\n            db.setTransactionSuccessful()\n        } finally {\n            db.endTransaction()\n        }\n    }\n\n    if !upgraded {\n        Log_OC.i(TAG, String(format: UPGRADE_VERSION_MSG, oldVersion, newVersion))\n    }\n}\n```"
    },
    {
        "method_name": "createUploadsTable",
        "method_code": "rivate void createUploadsTable(SupportSQLiteDatabase db) {\n        db.execSQL(\"CREATE TABLE \" + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \"(\"\n                       + ProviderMeta.ProviderTableMeta._ID + \" INTEGER PRIMARY KEY, \"\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH + TEXT\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH + TEXT\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME + TEXT\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE + \" LONG, \"\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_STATUS + INTEGER               // UploadStatus\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + INTEGER      // Upload LocalBehaviour\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME + INTEGER\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_NAME_COLLISION_POLICY + INTEGER  // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + INTEGER  // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + INTEGER\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT + INTEGER     // Upload LastResult\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + INTEGER  // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + INTEGER // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY + INTEGER    // Upload createdBy\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN + \" TEXT );\");\n\n    /* before:\n    // PRIMARY KEY should always imply NOT NULL. Unfortunately, due to a\n    // bug in some early versions, this is not the case in SQLite.\n    //db.execSQL(\"CREATE TABLE \" + TABLE_UPLOAD + \" (\" + \" path TEXT PRIMARY KEY NOT NULL UNIQUE,\"\n    //        + \" uploadStatus INTEGER NOT NULL, uploadObject TEXT NOT NULL);\");\n    // uploadStatus is used to easy filtering, it has precedence over\n    // uploadObject.getUploadStatus()\n    */\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled createUploadsTable from LegacyMigrationHelper.java into Swift.\n\n        Input:\n\n        Method Name: createUploadsTable\n\n        Method Code: rivate void createUploadsTable(SupportSQLiteDatabase db) {\n        db.execSQL(\"CREATE TABLE \" + ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME + \"(\"\n                       + ProviderMeta.ProviderTableMeta._ID + \" INTEGER PRIMARY KEY, \"\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH + TEXT\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH + TEXT\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME + TEXT\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE + \" LONG, \"\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_STATUS + INTEGER               // UploadStatus\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + INTEGER      // Upload LocalBehaviour\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME + INTEGER\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_NAME_COLLISION_POLICY + INTEGER  // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + INTEGER  // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + INTEGER\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT + INTEGER     // Upload LastResult\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + INTEGER  // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + INTEGER // boolean\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY + INTEGER    // Upload createdBy\n                       + ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN + \" TEXT );\");\n\n    /* before:\n    // PRIMARY KEY should always imply NOT NULL. Unfortunately, due to a\n    // bug in some early versions, this is not the case in SQLite.\n    //db.execSQL(\"CREATE TABLE \" + TABLE_UPLOAD + \" (\" + \" path TEXT PRIMARY KEY NOT NULL UNIQUE,\"\n    //        + \" uploadStatus INTEGER NOT NULL, uploadObject TEXT NOT NULL);\");\n    // uploadStatus is used to easy filtering, it has precedence over\n    // uploadObject.getUploadStatus()\n    */\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func createUploadsTable(db: OpaquePointer?) {\n    let createTableQuery = \"\"\"\n    CREATE TABLE \\(ProviderMeta.ProviderTableMeta.UPLOADS_TABLE_NAME) (\n        \\(ProviderMeta.ProviderTableMeta._ID) INTEGER PRIMARY KEY,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_PATH) TEXT,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_REMOTE_PATH) TEXT,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_ACCOUNT_NAME) TEXT,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_FILE_SIZE) LONG,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_STATUS) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_TIME) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_NAME_COLLISION_POLICY) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_LAST_RESULT) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_IS_WIFI_ONLY) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_CREATED_BY) INTEGER,\n        \\(ProviderMeta.ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN) TEXT\n    );\n    \"\"\"\n    if sqlite3_exec(db, createTableQuery, nil, nil, nil) != SQLITE_OK {\n        let errmsg = String(cString: sqlite3_errmsg(db)!)\n        print(\"Error creating table: \\(errmsg)\")\n    }\n}\n```"
    },
    {
        "method_name": "checkIfColumnExists",
        "method_code": "rivate boolean checkIfColumnExists(SupportSQLiteDatabase database, String table, String column) {\n        Cursor cursor = database.query(\"SELECT * FROM \" + table + \" LIMIT 0\");\n        boolean exists = cursor.getColumnIndex(column) != -1;\n        cursor.close();\n\n        return exists;\n    }\n",
        "prompt": "\n        Please translate the following Java (Android) method titled checkIfColumnExists from LegacyMigrationHelper.java into Swift.\n\n        Input:\n\n        Method Name: checkIfColumnExists\n\n        Method Code: rivate boolean checkIfColumnExists(SupportSQLiteDatabase database, String table, String column) {\n        Cursor cursor = database.query(\"SELECT * FROM \" + table + \" LIMIT 0\");\n        boolean exists = cursor.getColumnIndex(column) != -1;\n        cursor.close();\n\n        return exists;\n    }\n\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func checkIfColumnExists(database: OpaquePointer, table: String, column: String) -> Bool {\n    var exists = false\n    var statement: OpaquePointer?\n\n    if sqlite3_prepare_v2(database, \"SELECT * FROM \\(table) LIMIT 0\", -1, &statement, nil) == SQLITE_OK {\n        let columnIndex = sqlite3_column_index(statement, column)\n        exists = columnIndex != -1\n    }\n    \n    sqlite3_finalize(statement)\n    return exists\n}\n\nprivate func sqlite3_column_index(_ statement: OpaquePointer?, _ columnName: String) -> Int32 {\n    let columnCount = sqlite3_column_count(statement)\n    for index in 0..<columnCount {\n        if let name = sqlite3_column_name(statement, index), String(cString: name) == columnName {\n            return index\n        }\n    }\n    return -1\n}\n```"
    }
]