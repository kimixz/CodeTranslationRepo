[
    {
        "method_name": "run",
        "method_code": "@Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n\n        OCShare share;\n        if (shareId > 0) {\n            share = getStorageManager().getShareById(shareId);\n        } else {\n            share = this.share;\n        }\n\n        if (share == null) {\n            // TODO try to get remote share before failing?\n            return new RemoteOperationResult(RemoteOperationResult.ResultCode.SHARE_NOT_FOUND);\n        }\n\n        // Update remote share\n        UpdateShareRemoteOperation updateOp = new UpdateShareRemoteOperation(share.getRemoteId());\n        updateOp.setExpirationDate(expirationDateInMillis);\n        updateOp.setHideFileDownload(hideFileDownload);\n        if (!TextUtils.isEmpty(note)) {\n            updateOp.setNote(note);\n        }\n        if (permissions > -1) {\n            updateOp.setPermissions(permissions);\n        }\n        updateOp.setPassword(password);\n        updateOp.setLabel(label);\n\n        RemoteOperationResult result = updateOp.execute(client);\n\n        if (result.isSuccess()) {\n            RemoteOperation getShareOp = new GetShareRemoteOperation(share.getRemoteId());\n            result = getShareOp.execute(client);\n\n            //only update the share in storage if shareId is available\n            //this will be triggered by editing existing share\n            if (result.isSuccess() && shareId > 0) {\n                OCShare ocShare = (OCShare) result.getData().get(0);\n                ocShare.setPasswordProtected(!TextUtils.isEmpty(password));\n                getStorageManager().saveShare(ocShare);\n            }\n\n        }\n\n        return result;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled run from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: run\n\n        Method Code: @Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n\n        OCShare share;\n        if (shareId > 0) {\n            share = getStorageManager().getShareById(shareId);\n        } else {\n            share = this.share;\n        }\n\n        if (share == null) {\n            // TODO try to get remote share before failing?\n            return new RemoteOperationResult(RemoteOperationResult.ResultCode.SHARE_NOT_FOUND);\n        }\n\n        // Update remote share\n        UpdateShareRemoteOperation updateOp = new UpdateShareRemoteOperation(share.getRemoteId());\n        updateOp.setExpirationDate(expirationDateInMillis);\n        updateOp.setHideFileDownload(hideFileDownload);\n        if (!TextUtils.isEmpty(note)) {\n            updateOp.setNote(note);\n        }\n        if (permissions > -1) {\n            updateOp.setPermissions(permissions);\n        }\n        updateOp.setPassword(password);\n        updateOp.setLabel(label);\n\n        RemoteOperationResult result = updateOp.execute(client);\n\n        if (result.isSuccess()) {\n            RemoteOperation getShareOp = new GetShareRemoteOperation(share.getRemoteId());\n            result = getShareOp.execute(client);\n\n            //only update the share in storage if shareId is available\n            //this will be triggered by editing existing share\n            if (result.isSuccess() && shareId > 0) {\n                OCShare ocShare = (OCShare) result.getData().get(0);\n                ocShare.setPasswordProtected(!TextUtils.isEmpty(password));\n                getStorageManager().saveShare(ocShare);\n            }\n\n        }\n\n        return result;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func run(client: OwnCloudClient) -> RemoteOperationResult {\n    var share: OCShare?\n    if shareId > 0 {\n        share = getStorageManager().getShareById(shareId)\n    } else {\n        share = self.share\n    }\n\n    guard let validShare = share else {\n        return RemoteOperationResult(resultCode: .shareNotFound)\n    }\n\n    let updateOp = UpdateShareRemoteOperation(remoteId: validShare.getRemoteId())\n    updateOp.setExpirationDate(expirationDateInMillis)\n    updateOp.setHideFileDownload(hideFileDownload)\n    if !note.isEmpty {\n        updateOp.setNote(note)\n    }\n    if permissions > -1 {\n        updateOp.setPermissions(permissions)\n    }\n    updateOp.setPassword(password)\n    updateOp.setLabel(label)\n\n    var result = updateOp.execute(client: client)\n\n    if result.isSuccess() {\n        let getShareOp = GetShareRemoteOperation(remoteId: validShare.getRemoteId())\n        result = getShareOp.execute(client: client)\n\n        if result.isSuccess(), shareId > 0 {\n            if let ocShare = result.getData().first as? OCShare {\n                ocShare.setPasswordProtected(!password.isEmpty)\n                getStorageManager().saveShare(ocShare)\n            }\n        }\n    }\n\n    return result\n}\n```"
    },
    {
        "method_name": "setExpirationDateInMillis",
        "method_code": "public void setExpirationDateInMillis(long expirationDateInMillis) {\n        this.expirationDateInMillis = expirationDateInMillis;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setExpirationDateInMillis from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: setExpirationDateInMillis\n\n        Method Code: public void setExpirationDateInMillis(long expirationDateInMillis) {\n        this.expirationDateInMillis = expirationDateInMillis;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setExpirationDateInMillis(expirationDateInMillis: Int64) {\n    self.expirationDateInMillis = expirationDateInMillis\n}\n```"
    },
    {
        "method_name": "setNote",
        "method_code": "public void setNote(String note) {\n        this.note = note;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setNote from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: setNote\n\n        Method Code: public void setNote(String note) {\n        this.note = note;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setNote(_ note: String) {\n    self.note = note\n}\n```"
    },
    {
        "method_name": "setHideFileDownload",
        "method_code": "public void setHideFileDownload(boolean hideFileDownload) {\n        this.hideFileDownload = hideFileDownload;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setHideFileDownload from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: setHideFileDownload\n\n        Method Code: public void setHideFileDownload(boolean hideFileDownload) {\n        this.hideFileDownload = hideFileDownload;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setHideFileDownload(_ hideFileDownload: Bool) {\n    self.hideFileDownload = hideFileDownload\n}\n```"
    },
    {
        "method_name": "setPermissions",
        "method_code": "public void setPermissions(int permissions) {\n        this.permissions = permissions;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setPermissions from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: setPermissions\n\n        Method Code: public void setPermissions(int permissions) {\n        this.permissions = permissions;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setPermissions(_ permissions: Int) {\n    self.permissions = permissions\n}\n```"
    },
    {
        "method_name": "setPassword",
        "method_code": "public void setPassword(String password) {\n        this.password = password;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setPassword from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: setPassword\n\n        Method Code: public void setPassword(String password) {\n        this.password = password;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setPassword(_ password: String) {\n    self.password = password\n}\n```"
    },
    {
        "method_name": "setLabel",
        "method_code": "public void setLabel(String label) {\n        this.label = label;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setLabel from UpdateShareInfoOperation.java into Swift.\n\n        Input:\n\n        Method Name: setLabel\n\n        Method Code: public void setLabel(String label) {\n        this.label = label;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setLabel(_ label: String) {\n    self.label = label\n}\n```"
    }
]