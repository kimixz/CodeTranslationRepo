[
    {
        "method_name": "getAllActivities",
        "method_code": "@Override\n    public void getAllActivities(int lastGiven, ActivitiesServiceCallback<List<Object>> callback) {\n        GetActivityListTask getActivityListTask = new GetActivityListTask(accountManager.getUser(),\n                                                                          lastGiven,\n                                                                          callback);\n        getActivityListTask.execute();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getAllActivities from ActivitiesServiceApiImpl.java into Swift.\n\n        Input:\n\n        Method Name: getAllActivities\n\n        Method Code: @Override\n    public void getAllActivities(int lastGiven, ActivitiesServiceCallback<List<Object>> callback) {\n        GetActivityListTask getActivityListTask = new GetActivityListTask(accountManager.getUser(),\n                                                                          lastGiven,\n                                                                          callback);\n        getActivityListTask.execute();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc getAllActivities(lastGiven: Int, callback: @escaping (Result<[Any], Error>) -> Void) {\n    let getActivityListTask = GetActivityListTask(user: accountManager.getUser(), lastGiven: lastGiven, callback: callback)\n    getActivityListTask.execute()\n}\n```"
    },
    {
        "method_name": "doInBackground",
        "method_code": "@Override\n        protected Boolean doInBackground(Void... voids) {\n            final Context context = MainApp.getAppContext();\n            try {\n                final OwnCloudAccount ocAccount = user.toOwnCloudAccount();\n                client = OwnCloudClientManagerFactory.getDefaultSingleton().\n                    getNextcloudClientFor(ocAccount, MainApp.getAppContext());\n\n                GetActivitiesRemoteOperation getRemoteActivitiesOperation;\n                if (lastGiven > 0) {\n                    getRemoteActivitiesOperation = new GetActivitiesRemoteOperation(lastGiven);\n                } else {\n                    getRemoteActivitiesOperation = new GetActivitiesRemoteOperation();\n                }\n\n                final RemoteOperationResult result = getRemoteActivitiesOperation.execute(client);\n\n                if (result.isSuccess() && result.getData() != null) {\n                    final ArrayList<Object> data = result.getData();\n                    activities = (ArrayList) data.get(0);\n\n                    lastGiven = (int) data.get(1);\n                    return Boolean.TRUE;\n                } else {\n                    Log_OC.d(TAG, result.getLogMessage());\n                    // show error\n                    errorMessage = result.getLogMessage();\n                    if (result.getHttpCode() == HttpStatus.SC_NOT_MODIFIED) {\n                        errorMessage = context.getString(R.string.file_list_empty_headline_server_search);\n                    }\n                    return Boolean.FALSE;\n\n                }\n            } catch (IOException e) {\n                Log_OC.e(TAG, \"IO error\", e);\n                errorMessage = \"IO error\";\n            } catch (OperationCanceledException e) {\n                Log_OC.e(TAG, \"Operation has been canceled\", e);\n                errorMessage = \"Operation has been canceled\";\n            } catch (AuthenticatorException e) {\n                Log_OC.e(TAG, \"Authentication Exception\", e);\n                errorMessage = \"Authentication Exception\";\n            }\n\n            return Boolean.FALSE;\n        }",
        "prompt": "\n        Please translate the following Java (Android) method titled doInBackground from ActivitiesServiceApiImpl.java into Swift.\n\n        Input:\n\n        Method Name: doInBackground\n\n        Method Code: @Override\n        protected Boolean doInBackground(Void... voids) {\n            final Context context = MainApp.getAppContext();\n            try {\n                final OwnCloudAccount ocAccount = user.toOwnCloudAccount();\n                client = OwnCloudClientManagerFactory.getDefaultSingleton().\n                    getNextcloudClientFor(ocAccount, MainApp.getAppContext());\n\n                GetActivitiesRemoteOperation getRemoteActivitiesOperation;\n                if (lastGiven > 0) {\n                    getRemoteActivitiesOperation = new GetActivitiesRemoteOperation(lastGiven);\n                } else {\n                    getRemoteActivitiesOperation = new GetActivitiesRemoteOperation();\n                }\n\n                final RemoteOperationResult result = getRemoteActivitiesOperation.execute(client);\n\n                if (result.isSuccess() && result.getData() != null) {\n                    final ArrayList<Object> data = result.getData();\n                    activities = (ArrayList) data.get(0);\n\n                    lastGiven = (int) data.get(1);\n                    return Boolean.TRUE;\n                } else {\n                    Log_OC.d(TAG, result.getLogMessage());\n                    // show error\n                    errorMessage = result.getLogMessage();\n                    if (result.getHttpCode() == HttpStatus.SC_NOT_MODIFIED) {\n                        errorMessage = context.getString(R.string.file_list_empty_headline_server_search);\n                    }\n                    return Boolean.FALSE;\n\n                }\n            } catch (IOException e) {\n                Log_OC.e(TAG, \"IO error\", e);\n                errorMessage = \"IO error\";\n            } catch (OperationCanceledException e) {\n                Log_OC.e(TAG, \"Operation has been canceled\", e);\n                errorMessage = \"Operation has been canceled\";\n            } catch (AuthenticatorException e) {\n                Log_OC.e(TAG, \"Authentication Exception\", e);\n                errorMessage = \"Authentication Exception\";\n            }\n\n            return Boolean.FALSE;\n        }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc doInBackground() -> Bool {\n    let context = MainApp.getAppContext()\n    do {\n        let ocAccount = try user.toOwnCloudAccount()\n        client = OwnCloudClientManagerFactory.getDefaultSingleton().getNextcloudClientFor(ocAccount, MainApp.getAppContext())\n\n        let getRemoteActivitiesOperation: GetActivitiesRemoteOperation\n        if lastGiven > 0 {\n            getRemoteActivitiesOperation = GetActivitiesRemoteOperation(lastGiven: lastGiven)\n        } else {\n            getRemoteActivitiesOperation = GetActivitiesRemoteOperation()\n        }\n\n        let result = getRemoteActivitiesOperation.execute(client: client)\n\n        if result.isSuccess, let data = result.getData() as? [Any] {\n            activities = data[0] as? [Any]\n            lastGiven = data[1] as? Int ?? 0\n            return true\n        } else {\n            Log_OC.d(TAG, result.getLogMessage())\n            errorMessage = result.getLogMessage()\n            if result.getHttpCode() == HttpStatus.SC_NOT_MODIFIED {\n                errorMessage = context.getString(R.string.file_list_empty_headline_server_search)\n            }\n            return false\n        }\n    } catch let e as IOException {\n        Log_OC.e(TAG, \"IO error\", e)\n        errorMessage = \"IO error\"\n    } catch let e as OperationCanceledException {\n        Log_OC.e(TAG, \"Operation has been canceled\", e)\n        errorMessage = \"Operation has been canceled\"\n    } catch let e as AuthenticatorException {\n        Log_OC.e(TAG, \"Authentication Exception\", e)\n        errorMessage = \"Authentication Exception\"\n    } catch {\n        return false\n    }\n\n    return false\n}\n```"
    },
    {
        "method_name": "onPostExecute",
        "method_code": "@Override\n        protected void onPostExecute(Boolean success) {\n            super.onPostExecute(success);\n            if (success) {\n                callback.onLoaded(activities, client, lastGiven);\n            } else {\n                callback.onError(errorMessage);\n            }\n        }",
        "prompt": "\n        Please translate the following Java (Android) method titled onPostExecute from ActivitiesServiceApiImpl.java into Swift.\n\n        Input:\n\n        Method Name: onPostExecute\n\n        Method Code: @Override\n        protected void onPostExecute(Boolean success) {\n            super.onPostExecute(success);\n            if (success) {\n                callback.onLoaded(activities, client, lastGiven);\n            } else {\n                callback.onError(errorMessage);\n            }\n        }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onPostExecute(success: Bool) {\n    super.onPostExecute(success)\n    if success {\n        callback.onLoaded(activities, client: client, lastGiven: lastGiven)\n    } else {\n        callback.onError(errorMessage)\n    }\n}\n```"
    }
]