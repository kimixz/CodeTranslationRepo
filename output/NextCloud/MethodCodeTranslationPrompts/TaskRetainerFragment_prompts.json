[
    {
        "method_name": "onAttach",
        "method_code": "@Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (mTask != null) {\n            if (context instanceof ReceiveExternalFilesActivity) {\n                mTask.setListener((CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener) context);\n            } else {\n                mTask.setListener(null);\n            }\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onAttach from TaskRetainerFragment.java into Swift.\n\n        Input:\n\n        Method Name: onAttach\n\n        Method Code: @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (mTask != null) {\n            if (context instanceof ReceiveExternalFilesActivity) {\n                mTask.setListener((CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener) context);\n            } else {\n                mTask.setListener(null);\n            }\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func didMove(toParent parent: UIViewController?) {\n    super.didMove(toParent: parent)\n    if let task = mTask {\n        if let context = parent as? ReceiveExternalFilesActivity {\n            task.setListener(context as? CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener)\n        } else {\n            task.setListener(nil)\n        }\n    }\n}\n```"
    },
    {
        "method_name": "onCreate",
        "method_code": "@Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setRetainInstance(true);    // the key point\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreate from TaskRetainerFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreate\n\n        Method Code: @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setRetainInstance(true);    // the key point\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n    self.retainInstance = true // the key point\n}\n```"
    },
    {
        "method_name": "setTask",
        "method_code": "public void setTask(CopyAndUploadContentUrisTask task) {\n        if (mTask != null) {\n            mTask.setListener(null);\n        }\n        mTask = task;\n        Context context = getContext();\n        if (mTask != null && context != null) {\n            if (context instanceof ReceiveExternalFilesActivity) {\n                task.setListener((CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener) context);\n            } else {\n                task.setListener(null);\n            }\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setTask from TaskRetainerFragment.java into Swift.\n\n        Input:\n\n        Method Name: setTask\n\n        Method Code: public void setTask(CopyAndUploadContentUrisTask task) {\n        if (mTask != null) {\n            mTask.setListener(null);\n        }\n        mTask = task;\n        Context context = getContext();\n        if (mTask != null && context != null) {\n            if (context instanceof ReceiveExternalFilesActivity) {\n                task.setListener((CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener) context);\n            } else {\n                task.setListener(null);\n            }\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setTask(_ task: CopyAndUploadContentUrisTask?) {\n    mTask?.setListener(nil)\n    mTask = task\n    let context = getContext()\n    if let mTask = mTask, let context = context {\n        if let receiveExternalFilesActivity = context as? ReceiveExternalFilesActivity {\n            task?.setListener(receiveExternalFilesActivity as? CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener)\n        } else {\n            task?.setListener(nil)\n        }\n    }\n}\n```"
    }
]