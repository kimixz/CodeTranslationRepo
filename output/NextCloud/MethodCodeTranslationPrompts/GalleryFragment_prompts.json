[
    {
        "method_name": "setPhotoSearchQueryRunning",
        "method_code": "protected void setPhotoSearchQueryRunning(boolean value) {\n        this.photoSearchQueryRunning = value;\n        this.setLoading(value); // link the photoSearchQueryRunning variable with UI progress loading\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setPhotoSearchQueryRunning from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: setPhotoSearchQueryRunning\n\n        Method Code: protected void setPhotoSearchQueryRunning(boolean value) {\n        this.photoSearchQueryRunning = value;\n        this.setLoading(value); // link the photoSearchQueryRunning variable with UI progress loading\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setPhotoSearchQueryRunning(_ value: Bool) {\n    self.photoSearchQueryRunning = value\n    self.setLoading(value) // link the photoSearchQueryRunning variable with UI progress loading\n}\n```"
    },
    {
        "method_name": "isPhotoSearchQueryRunning",
        "method_code": "public boolean isPhotoSearchQueryRunning() {\n        return this.photoSearchQueryRunning;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled isPhotoSearchQueryRunning from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: isPhotoSearchQueryRunning\n\n        Method Code: public boolean isPhotoSearchQueryRunning() {\n        return this.photoSearchQueryRunning;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc isPhotoSearchQueryRunning() -> Bool {\n    return self.photoSearchQueryRunning\n}\n```"
    },
    {
        "method_name": "onCreate",
        "method_code": "@Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        searchFragment = true;\n\n        setHasOptionsMenu(true);\n\n        if (galleryFragmentBottomSheetDialog == null) {\n            galleryFragmentBottomSheetDialog = new GalleryFragmentBottomSheetDialog(this);\n        }\n\n        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {\n            columnSize = maxColumnSizeLandscape;\n        } else {\n            columnSize = maxColumnSizePortrait;\n        }\n\n        registerRefreshSearchEventReceiver();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreate from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreate\n\n        Method Code: @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        searchFragment = true;\n\n        setHasOptionsMenu(true);\n\n        if (galleryFragmentBottomSheetDialog == null) {\n            galleryFragmentBottomSheetDialog = new GalleryFragmentBottomSheetDialog(this);\n        }\n\n        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {\n            columnSize = maxColumnSizeLandscape;\n        } else {\n            columnSize = maxColumnSizePortrait;\n        }\n\n        registerRefreshSearchEventReceiver();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n    searchFragment = true\n\n    self.navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .search, target: self, action: #selector(searchTapped))\n\n    if galleryFragmentBottomSheetDialog == nil {\n        galleryFragmentBottomSheetDialog = GalleryFragmentBottomSheetDialog(self)\n    }\n\n    if UIScreen.main.bounds.width > UIScreen.main.bounds.height {\n        columnSize = maxColumnSizeLandscape\n    } else {\n        columnSize = maxColumnSizePortrait\n    }\n\n    registerRefreshSearchEventReceiver()\n}\n```"
    },
    {
        "method_name": "registerRefreshSearchEventReceiver",
        "method_code": "private void registerRefreshSearchEventReceiver() {\n        IntentFilter filter = new IntentFilter(REFRESH_SEARCH_EVENT_RECEIVER);\n        LocalBroadcastManager.getInstance(requireContext()).registerReceiver(refreshSearchEventReceiver, filter);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled registerRefreshSearchEventReceiver from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: registerRefreshSearchEventReceiver\n\n        Method Code: private void registerRefreshSearchEventReceiver() {\n        IntentFilter filter = new IntentFilter(REFRESH_SEARCH_EVENT_RECEIVER);\n        LocalBroadcastManager.getInstance(requireContext()).registerReceiver(refreshSearchEventReceiver, filter);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func registerRefreshSearchEventReceiver() {\n    let filter = NotificationCenter.default.addObserver(forName: NSNotification.Name(rawValue: REFRESH_SEARCH_EVENT_RECEIVER), object: nil, queue: .main) { [weak self] notification in\n        self?.refreshSearchEventReceiver(notification)\n    }\n}\n```"
    },
    {
        "method_name": "onReceive",
        "method_code": "@Override\n        public void onReceive(Context context, Intent intent) {\n            if (getActivity() instanceof FileDisplayActivity fileDisplayActivity) {\n                fileDisplayActivity.startPhotoSearch(R.id.nav_gallery);\n            }\n        }",
        "prompt": "\n        Please translate the following Java (Android) method titled onReceive from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onReceive\n\n        Method Code: @Override\n        public void onReceive(Context context, Intent intent) {\n            if (getActivity() instanceof FileDisplayActivity fileDisplayActivity) {\n                fileDisplayActivity.startPhotoSearch(R.id.nav_gallery);\n            }\n        }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onReceive(context: Context, intent: Intent) {\n    if let fileDisplayActivity = getActivity() as? FileDisplayActivity {\n        fileDisplayActivity.startPhotoSearch(R.id.nav_gallery)\n    }\n}\n```"
    },
    {
        "method_name": "setLastMediaItemPosition",
        "method_code": "public static void setLastMediaItemPosition(Integer position) {\n        lastMediaItemPosition = position;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setLastMediaItemPosition from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: setLastMediaItemPosition\n\n        Method Code: public static void setLastMediaItemPosition(Integer position) {\n        lastMediaItemPosition = position;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nstatic func setLastMediaItemPosition(_ position: Int?) {\n    lastMediaItemPosition = position\n}\n```"
    },
    {
        "method_name": "onDestroyView",
        "method_code": "@Override\n    public void onDestroyView() {\n        LocalBroadcastManager.getInstance(requireContext()).unregisterReceiver(refreshSearchEventReceiver);\n        setLastMediaItemPosition(null);\n        super.onDestroyView();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onDestroyView from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onDestroyView\n\n        Method Code: @Override\n    public void onDestroyView() {\n        LocalBroadcastManager.getInstance(requireContext()).unregisterReceiver(refreshSearchEventReceiver);\n        setLastMediaItemPosition(null);\n        super.onDestroyView();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n    NotificationCenter.default.removeObserver(refreshSearchEventReceiver)\n    setLastMediaItemPosition(nil)\n}\n```"
    },
    {
        "method_name": "onPause",
        "method_code": "@Override\n    public void onPause() {\n        super.onPause();\n\n        if (photoSearchTask != null) {\n            photoSearchTask.cancel(true);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onPause from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onPause\n\n        Method Code: @Override\n    public void onPause() {\n        super.onPause();\n\n        if (photoSearchTask != null) {\n            photoSearchTask.cancel(true);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n\n    photoSearchTask?.cancel()\n}\n```"
    },
    {
        "method_name": "onCreateView",
        "method_code": "@Override\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v = super.onCreateView(inflater, container, savedInstanceState);\n\n        getRecyclerView().addOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\n                loadMoreWhenEndReached(recyclerView, dy);\n            }\n        });\n\n        Log_OC.i(this, \"onCreateView() in GalleryFragment end\");\n        return v;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreateView from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreateView\n\n        Method Code: @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v = super.onCreateView(inflater, container, savedInstanceState);\n\n        getRecyclerView().addOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\n                loadMoreWhenEndReached(recyclerView, dy);\n            }\n        });\n\n        Log_OC.i(this, \"onCreateView() in GalleryFragment end\");\n        return v;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    collectionView?.addOnScrollListener { [weak self] scrollView in\n        guard let self = self else { return }\n        let dy = scrollView.contentOffset.y\n        self.loadMoreWhenEndReached(scrollView, dy: dy)\n    }\n\n    Log_OC.i(self, \"viewDidLoad() in GalleryFragment end\")\n}\n```"
    },
    {
        "method_name": "onScrolled",
        "method_code": "@Override\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\n                loadMoreWhenEndReached(recyclerView, dy);\n            }",
        "prompt": "\n        Please translate the following Java (Android) method titled onScrolled from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onScrolled\n\n        Method Code: @Override\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\n                loadMoreWhenEndReached(recyclerView, dy);\n            }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func scrollViewDidScroll(_ scrollView: UIScrollView) {\n    if let collectionView = scrollView as? UICollectionView {\n        let dy = scrollView.contentOffset.y - scrollView.contentInset.top\n        loadMoreWhenEndReached(collectionView, dy: dy)\n    }\n}\n```"
    },
    {
        "method_name": "onActivityCreated",
        "method_code": "@Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        currentSearchType = SearchType.GALLERY_SEARCH;\n\n        menuItemAddRemoveValue = MenuItemAddRemove.REMOVE_GRID_AND_SORT;\n        requireActivity().invalidateOptionsMenu();\n\n        updateSubtitle(galleryFragmentBottomSheetDialog.getCurrMediaState());\n\n        handleSearchEvent();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onActivityCreated from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onActivityCreated\n\n        Method Code: @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        currentSearchType = SearchType.GALLERY_SEARCH;\n\n        menuItemAddRemoveValue = MenuItemAddRemove.REMOVE_GRID_AND_SORT;\n        requireActivity().invalidateOptionsMenu();\n\n        updateSubtitle(galleryFragmentBottomSheetDialog.getCurrMediaState());\n\n        handleSearchEvent();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    currentSearchType = .gallerySearch\n\n    menuItemAddRemoveValue = .removeGridAndSort\n    self.navigationController?.navigationBar.setNeedsLayout()\n\n    updateSubtitle(galleryFragmentBottomSheetDialog.getCurrMediaState())\n\n    handleSearchEvent()\n}\n```"
    },
    {
        "method_name": "setAdapter",
        "method_code": "@Override\n    protected void setAdapter(Bundle args) {\n        mAdapter = new GalleryAdapter(requireContext(),\n                                      accountManager.getUser(),\n                                      this,\n                                      preferences,\n                                      mContainerActivity,\n                                      viewThemeUtils,\n                                      columnSize,\n                                      ThumbnailsCacheManager.getThumbnailDimension());\n\n        setRecyclerViewAdapter(mAdapter);\n\n        //update the footer as there is no footer shown in media view\n        if (getRecyclerView() instanceof EmptyRecyclerView) {\n            ((EmptyRecyclerView) getRecyclerView()).setHasFooter(false);\n        }\n\n        GridLayoutManager layoutManager = new GridLayoutManager(getContext(), 1);\n        mAdapter.setLayoutManager(layoutManager);\n        getRecyclerView().setLayoutManager(layoutManager);\n\n        if (lastMediaItemPosition != null) {\n            layoutManager.scrollToPosition(lastMediaItemPosition);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setAdapter from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: setAdapter\n\n        Method Code: @Override\n    protected void setAdapter(Bundle args) {\n        mAdapter = new GalleryAdapter(requireContext(),\n                                      accountManager.getUser(),\n                                      this,\n                                      preferences,\n                                      mContainerActivity,\n                                      viewThemeUtils,\n                                      columnSize,\n                                      ThumbnailsCacheManager.getThumbnailDimension());\n\n        setRecyclerViewAdapter(mAdapter);\n\n        //update the footer as there is no footer shown in media view\n        if (getRecyclerView() instanceof EmptyRecyclerView) {\n            ((EmptyRecyclerView) getRecyclerView()).setHasFooter(false);\n        }\n\n        GridLayoutManager layoutManager = new GridLayoutManager(getContext(), 1);\n        mAdapter.setLayoutManager(layoutManager);\n        getRecyclerView().setLayoutManager(layoutManager);\n\n        if (lastMediaItemPosition != null) {\n            layoutManager.scrollToPosition(lastMediaItemPosition);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func setAdapter(args: Bundle?) {\n    mAdapter = GalleryAdapter(context: requireContext(),\n                              user: accountManager.getUser(),\n                              fragment: self,\n                              preferences: preferences,\n                              containerActivity: mContainerActivity,\n                              viewThemeUtils: viewThemeUtils,\n                              columnSize: columnSize,\n                              thumbnailDimension: ThumbnailsCacheManager.getThumbnailDimension())\n\n    setRecyclerViewAdapter(mAdapter)\n\n    if let emptyRecyclerView = getRecyclerView() as? EmptyRecyclerView {\n        emptyRecyclerView.setHasFooter(false)\n    }\n\n    let layoutManager = GridLayoutManager(context: getContext(), spanCount: 1)\n    mAdapter.setLayoutManager(layoutManager)\n    getRecyclerView().setLayoutManager(layoutManager)\n\n    if let position = lastMediaItemPosition {\n        layoutManager.scrollToPosition(position)\n    }\n}\n```"
    },
    {
        "method_name": "onConfigurationChanged",
        "method_code": "@Override\n    public void onConfigurationChanged(@NonNull Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n\n        if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) {\n            columnSize = maxColumnSizeLandscape;\n        } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT) {\n            columnSize = maxColumnSizePortrait;\n        }\n        mAdapter.changeColumn(columnSize);\n        showAllGalleryItems();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onConfigurationChanged from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onConfigurationChanged\n\n        Method Code: @Override\n    public void onConfigurationChanged(@NonNull Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n\n        if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) {\n            columnSize = maxColumnSizeLandscape;\n        } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT) {\n            columnSize = maxColumnSizePortrait;\n        }\n        mAdapter.changeColumn(columnSize);\n        showAllGalleryItems();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n\n    if UIDevice.current.orientation.isLandscape {\n        columnSize = maxColumnSizeLandscape\n    } else if UIDevice.current.orientation.isPortrait {\n        columnSize = maxColumnSizePortrait\n    }\n    mAdapter.changeColumn(columnSize)\n    showAllGalleryItems()\n}\n```"
    },
    {
        "method_name": "getColumnsCount",
        "method_code": "@Override\n    public int getColumnsCount() {\n        return columnSize;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getColumnsCount from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: getColumnsCount\n\n        Method Code: @Override\n    public int getColumnsCount() {\n        return columnSize;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func getColumnsCount() -> Int {\n    return columnSize\n}\n```"
    },
    {
        "method_name": "onRefresh",
        "method_code": "@Override\n    public void onRefresh() {\n        super.onRefresh();\n        handleSearchEvent();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onRefresh from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onRefresh\n\n        Method Code: @Override\n    public void onRefresh() {\n        super.onRefresh();\n        handleSearchEvent();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onRefresh() {\n    super.onRefresh()\n    handleSearchEvent()\n}\n```"
    },
    {
        "method_name": "getCommonAdapter",
        "method_code": "@Override\n    public CommonOCFileListAdapterInterface getCommonAdapter() {\n        return mAdapter;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled getCommonAdapter from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: getCommonAdapter\n\n        Method Code: @Override\n    public CommonOCFileListAdapterInterface getCommonAdapter() {\n        return mAdapter;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func getCommonAdapter() -> CommonOCFileListAdapterInterface {\n    return mAdapter\n}\n```"
    },
    {
        "method_name": "onResume",
        "method_code": "@Override\n    public void onResume() {\n        super.onResume();\n\n        setLoading(this.isPhotoSearchQueryRunning());\n        if (getActivity() instanceof FileDisplayActivity fileDisplayActivity) {\n            fileDisplayActivity.updateActionBarTitleAndHomeButtonByString(getString(R.string.drawer_item_gallery));\n            fileDisplayActivity.setMainFabVisible(false);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onResume from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onResume\n\n        Method Code: @Override\n    public void onResume() {\n        super.onResume();\n\n        setLoading(this.isPhotoSearchQueryRunning());\n        if (getActivity() instanceof FileDisplayActivity fileDisplayActivity) {\n            fileDisplayActivity.updateActionBarTitleAndHomeButtonByString(getString(R.string.drawer_item_gallery));\n            fileDisplayActivity.setMainFabVisible(false);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n\n    setLoading(isPhotoSearchQueryRunning())\n    if let fileDisplayActivity = self.activity as? FileDisplayActivity {\n        fileDisplayActivity.updateActionBarTitleAndHomeButtonByString(getString(R.string.drawer_item_gallery))\n        fileDisplayActivity.setMainFabVisible(false)\n    }\n}\n```"
    },
    {
        "method_name": "onMessageEvent",
        "method_code": "@Override\n    public void onMessageEvent(ChangeMenuEvent changeMenuEvent) {\n        super.onMessageEvent(changeMenuEvent);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onMessageEvent from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onMessageEvent\n\n        Method Code: @Override\n    public void onMessageEvent(ChangeMenuEvent changeMenuEvent) {\n        super.onMessageEvent(changeMenuEvent);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onMessageEvent(_ changeMenuEvent: ChangeMenuEvent) {\n    super.onMessageEvent(changeMenuEvent)\n}\n```"
    },
    {
        "method_name": "handleSearchEvent",
        "method_code": "private void handleSearchEvent() {\n        prepareCurrentSearch(searchEvent);\n        setEmptyListLoadingMessage();\n\n        // always show first stored items\n        showAllGalleryItems();\n\n        setFabVisible(false);\n\n        searchAndDisplay();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled handleSearchEvent from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: handleSearchEvent\n\n        Method Code: private void handleSearchEvent() {\n        prepareCurrentSearch(searchEvent);\n        setEmptyListLoadingMessage();\n\n        // always show first stored items\n        showAllGalleryItems();\n\n        setFabVisible(false);\n\n        searchAndDisplay();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func handleSearchEvent() {\n    prepareCurrentSearch(searchEvent)\n    setEmptyListLoadingMessage()\n\n    // always show first stored items\n    showAllGalleryItems()\n\n    setFabVisible(false)\n\n    searchAndDisplay()\n}\n```"
    },
    {
        "method_name": "searchAndDisplay",
        "method_code": "private void searchAndDisplay() {\n        if (!this.isPhotoSearchQueryRunning() && this.endDate <= 0) {\n            // fix an issue when the method is called after loading the gallery and pressing play on a movie (--> endDate <= 0)\n            // to avoid reloading the gallery, check if endDate has already a value which is not -1 or 0 (which generally means some kind of reset/init)\n            endDate = System.currentTimeMillis() / 1000;\n            this.setPhotoSearchQueryRunning(true);\n            runGallerySearchTask();\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled searchAndDisplay from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: searchAndDisplay\n\n        Method Code: private void searchAndDisplay() {\n        if (!this.isPhotoSearchQueryRunning() && this.endDate <= 0) {\n            // fix an issue when the method is called after loading the gallery and pressing play on a movie (--> endDate <= 0)\n            // to avoid reloading the gallery, check if endDate has already a value which is not -1 or 0 (which generally means some kind of reset/init)\n            endDate = System.currentTimeMillis() / 1000;\n            this.setPhotoSearchQueryRunning(true);\n            runGallerySearchTask();\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func searchAndDisplay() {\n    if !isPhotoSearchQueryRunning() && endDate <= 0 {\n        // fix an issue when the method is called after loading the gallery and pressing play on a movie (--> endDate <= 0)\n        // to avoid reloading the gallery, check if endDate has already a value which is not -1 or 0 (which generally means some kind of reset/init)\n        endDate = Int(Date().timeIntervalSince1970)\n        setPhotoSearchQueryRunning(true)\n        runGallerySearchTask()\n    }\n}\n```"
    },
    {
        "method_name": "searchCompleted",
        "method_code": "public void searchCompleted(boolean emptySearch, long lastTimeStamp) {\n        this.setPhotoSearchQueryRunning(false);\n\n        if (lastTimeStamp > -1) {\n            endDate = lastTimeStamp;\n        }\n\n        if (mAdapter.isEmpty()) {\n            setEmptyListMessage(SearchType.GALLERY_SEARCH);\n        }\n\n        if (!emptySearch) {\n            this.showAllGalleryItems();\n        }\n\n        Log_OC.d(this, \"End gallery search\");\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled searchCompleted from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: searchCompleted\n\n        Method Code: public void searchCompleted(boolean emptySearch, long lastTimeStamp) {\n        this.setPhotoSearchQueryRunning(false);\n\n        if (lastTimeStamp > -1) {\n            endDate = lastTimeStamp;\n        }\n\n        if (mAdapter.isEmpty()) {\n            setEmptyListMessage(SearchType.GALLERY_SEARCH);\n        }\n\n        if (!emptySearch) {\n            this.showAllGalleryItems();\n        }\n\n        Log_OC.d(this, \"End gallery search\");\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc searchCompleted(emptySearch: Bool, lastTimeStamp: Int64) {\n    self.setPhotoSearchQueryRunning(false)\n\n    if lastTimeStamp > -1 {\n        endDate = lastTimeStamp\n    }\n\n    if mAdapter.isEmpty() {\n        setEmptyListMessage(searchType: .gallerySearch)\n    }\n\n    if !emptySearch {\n        self.showAllGalleryItems()\n    }\n\n    Log_OC.d(self, \"End gallery search\")\n}\n```"
    },
    {
        "method_name": "onCreateOptionsMenu",
        "method_code": "@Override\n    public void onCreateOptionsMenu(Menu menu, @NonNull MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n\n        inflater.inflate(R.menu.fragment_gallery_three_dots, menu);\n\n        MenuItem menuItem = menu.findItem(R.id.action_three_dot_icon);\n\n        if (menuItem != null) {\n            viewThemeUtils.platform.colorMenuItemText(requireContext(), menuItem);\n        }\n\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreateOptionsMenu from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onCreateOptionsMenu\n\n        Method Code: @Override\n    public void onCreateOptionsMenu(Menu menu, @NonNull MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n\n        inflater.inflate(R.menu.fragment_gallery_three_dots, menu);\n\n        MenuItem menuItem = menu.findItem(R.id.action_three_dot_icon);\n\n        if (menuItem != null) {\n            viewThemeUtils.platform.colorMenuItemText(requireContext(), menuItem);\n        }\n\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n    navigationItem.rightBarButtonItem = UIBarButtonItem(image: UIImage(named: \"three_dot_icon\"), style: .plain, target: self, action: #selector(threeDotIconTapped))\n}\n\n@objc func threeDotIconTapped() {\n    // Handle the three dot icon tap\n}\n\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    if let menuItem = navigationItem.rightBarButtonItem {\n        viewThemeUtils.platform.colorMenuItemText(context: self, menuItem: menuItem)\n    }\n}\n```"
    },
    {
        "method_name": "onOptionsItemSelected",
        "method_code": "@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n\n        // Handle item selection\n        if (item.getItemId() == R.id.action_three_dot_icon && !this.isPhotoSearchQueryRunning()\n            && galleryFragmentBottomSheetDialog != null) {\n            showBottomSheet();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onOptionsItemSelected from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onOptionsItemSelected\n\n        Method Code: @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n\n        // Handle item selection\n        if (item.getItemId() == R.id.action_three_dot_icon && !this.isPhotoSearchQueryRunning()\n            && galleryFragmentBottomSheetDialog != null) {\n            showBottomSheet();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func onOptionsItemSelected(_ item: MenuItem) -> Bool {\n    if item.itemId == R.id.action_three_dot_icon && !self.isPhotoSearchQueryRunning() && galleryFragmentBottomSheetDialog != nil {\n        showBottomSheet()\n        return true\n    }\n    return super.onOptionsItemSelected(item)\n}\n```"
    },
    {
        "method_name": "showBottomSheet",
        "method_code": "private void showBottomSheet() {\n        if (!galleryFragmentBottomSheetDialog.isVisible()) {\n            galleryFragmentBottomSheetDialog.show(getChildFragmentManager(), FRAGMENT_TAG_BOTTOM_SHEET);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled showBottomSheet from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: showBottomSheet\n\n        Method Code: private void showBottomSheet() {\n        if (!galleryFragmentBottomSheetDialog.isVisible()) {\n            galleryFragmentBottomSheetDialog.show(getChildFragmentManager(), FRAGMENT_TAG_BOTTOM_SHEET);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func showBottomSheet() {\n    if !galleryFragmentBottomSheetDialog.isVisible {\n        galleryFragmentBottomSheetDialog.show(getChildFragmentManager(), FRAGMENT_TAG_BOTTOM_SHEET)\n    }\n}\n```"
    },
    {
        "method_name": "onActivityResult",
        "method_code": "@Override\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        if (requestCode == SELECT_LOCATION_REQUEST_CODE && data != null && FolderPickerActivity.EXTRA_FOLDER != null) {\n            OCFile chosenFolder = IntentExtensionsKt.getParcelableArgument(data, FolderPickerActivity.EXTRA_FOLDER, OCFile.class);\n\n            if (chosenFolder != null) {\n                preferences.setLastSelectedMediaFolder(chosenFolder.getRemotePath());\n                searchAndDisplayAfterChangingFolder();\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onActivityResult from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: onActivityResult\n\n        Method Code: @Override\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        if (requestCode == SELECT_LOCATION_REQUEST_CODE && data != null && FolderPickerActivity.EXTRA_FOLDER != null) {\n            OCFile chosenFolder = IntentExtensionsKt.getParcelableArgument(data, FolderPickerActivity.EXTRA_FOLDER, OCFile.class);\n\n            if (chosenFolder != null) {\n                preferences.setLastSelectedMediaFolder(chosenFolder.getRemotePath());\n                searchAndDisplayAfterChangingFolder();\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {\n    super.viewWillTransition(to: size, with: coordinator)\n}\n\noverride func viewSafeAreaInsetsDidChange() {\n    super.viewSafeAreaInsetsDidChange()\n}\n\noverride func viewLayoutMarginsDidChange() {\n    super.viewLayoutMarginsDidChange()\n}\n\noverride func viewDidAppear(_ animated: Bool) {\n    super.viewDidAppear(animated)\n}\n\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n}\n\noverride func viewDidDisappear(_ animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n}\n\noverride func viewWillLayoutSubviews() {\n    super.viewWillLayoutSubviews()\n}\n\noverride func viewDidLayoutSubviews() {\n    super.viewDidLayoutSubviews()\n}\n\noverride func didReceiveMemoryWarning() {\n    super.didReceiveMemoryWarning()\n}\n\noverride func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n    super.prepare(for: segue, sender: sender)\n}\n\noverride func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator"
    },
    {
        "method_name": "searchAndDisplayAfterChangingFolder",
        "method_code": "private void searchAndDisplayAfterChangingFolder() {\n        //TODO: Fix folder change, it seems it doesn't work at all\n        this.endDate = System.currentTimeMillis() / 1000;\n        this.setPhotoSearchQueryRunning(true);\n        runGallerySearchTask();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled searchAndDisplayAfterChangingFolder from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: searchAndDisplayAfterChangingFolder\n\n        Method Code: private void searchAndDisplayAfterChangingFolder() {\n        //TODO: Fix folder change, it seems it doesn't work at all\n        this.endDate = System.currentTimeMillis() / 1000;\n        this.setPhotoSearchQueryRunning(true);\n        runGallerySearchTask();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func searchAndDisplayAfterChangingFolder() {\n    //TODO: Fix folder change, it seems it doesn't work at all\n    self.endDate = Date().timeIntervalSince1970\n    self.setPhotoSearchQueryRunning(true)\n    runGallerySearchTask()\n}\n```"
    },
    {
        "method_name": "runGallerySearchTask",
        "method_code": "private void runGallerySearchTask() {\n        if (mContainerActivity != null) {\n            photoSearchTask = new GallerySearchTask(this,\n                                                    accountManager.getUser(),\n                                                    mContainerActivity.getStorageManager(),\n                                                    endDate,\n                                                    limit)\n                .execute();\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled runGallerySearchTask from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: runGallerySearchTask\n\n        Method Code: private void runGallerySearchTask() {\n        if (mContainerActivity != null) {\n            photoSearchTask = new GallerySearchTask(this,\n                                                    accountManager.getUser(),\n                                                    mContainerActivity.getStorageManager(),\n                                                    endDate,\n                                                    limit)\n                .execute();\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func runGallerySearchTask() {\n    if let containerActivity = mContainerActivity {\n        photoSearchTask = GallerySearchTask(fragment: self,\n                                            user: accountManager.getUser(),\n                                            storageManager: containerActivity.getStorageManager(),\n                                            endDate: endDate,\n                                            limit: limit)\n            .execute()\n    }\n}\n```"
    },
    {
        "method_name": "loadMoreWhenEndReached",
        "method_code": "private void loadMoreWhenEndReached(@NonNull RecyclerView recyclerView, int dy) {\n        if (recyclerView.getLayoutManager() instanceof GridLayoutManager gridLayoutManager) {\n\n            // scroll down\n            if (dy > 0 && !this.isPhotoSearchQueryRunning()) {\n                int totalItemCount = gridLayoutManager.getItemCount();\n                int lastVisibleItem = gridLayoutManager.findLastCompletelyVisibleItemPosition();\n                int visibleItemCount = gridLayoutManager.getChildCount();\n\n                if (lastVisibleItem == RecyclerView.NO_POSITION) {\n                    return;\n                }\n\n                OCFile lastFile = mAdapter.getItem(lastVisibleItem - 1);\n                if (lastFile == null) {\n                    return;\n                }\n                long lastItemTimestamp = lastFile.getModificationTimestamp() / 1000;\n\n                // if we have already older media in the gallery then retrieve file in chronological order to fill the gap\n                if (lastItemTimestamp < this.endDate) {\n\n                    if (BuildConfig.DEBUG) {\n                        Log_OC.d(this, \"Gallery swipe: retrieve items to check the chronology\");\n                    }\n\n                    this.setPhotoSearchQueryRunning(true);\n                    runGallerySearchTask();\n                } else if ((totalItemCount - visibleItemCount) <= (lastVisibleItem + MAX_ITEMS_PER_ROW) //no more files in the gallery, retrieve the next ones\n                    && (totalItemCount - visibleItemCount) > 0) {\n\n                    if (BuildConfig.DEBUG) {\n                        Log_OC.d(this, \"Gallery swipe: retrieve items because end of gallery display\");\n                    }\n\n                    // Almost reached the end, continue to load new photos\n                    endDate = lastItemTimestamp;\n                    this.setPhotoSearchQueryRunning(true);\n                    runGallerySearchTask();\n                }\n            }\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled loadMoreWhenEndReached from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: loadMoreWhenEndReached\n\n        Method Code: private void loadMoreWhenEndReached(@NonNull RecyclerView recyclerView, int dy) {\n        if (recyclerView.getLayoutManager() instanceof GridLayoutManager gridLayoutManager) {\n\n            // scroll down\n            if (dy > 0 && !this.isPhotoSearchQueryRunning()) {\n                int totalItemCount = gridLayoutManager.getItemCount();\n                int lastVisibleItem = gridLayoutManager.findLastCompletelyVisibleItemPosition();\n                int visibleItemCount = gridLayoutManager.getChildCount();\n\n                if (lastVisibleItem == RecyclerView.NO_POSITION) {\n                    return;\n                }\n\n                OCFile lastFile = mAdapter.getItem(lastVisibleItem - 1);\n                if (lastFile == null) {\n                    return;\n                }\n                long lastItemTimestamp = lastFile.getModificationTimestamp() / 1000;\n\n                // if we have already older media in the gallery then retrieve file in chronological order to fill the gap\n                if (lastItemTimestamp < this.endDate) {\n\n                    if (BuildConfig.DEBUG) {\n                        Log_OC.d(this, \"Gallery swipe: retrieve items to check the chronology\");\n                    }\n\n                    this.setPhotoSearchQueryRunning(true);\n                    runGallerySearchTask();\n                } else if ((totalItemCount - visibleItemCount) <= (lastVisibleItem + MAX_ITEMS_PER_ROW) //no more files in the gallery, retrieve the next ones\n                    && (totalItemCount - visibleItemCount) > 0) {\n\n                    if (BuildConfig.DEBUG) {\n                        Log_OC.d(this, \"Gallery swipe: retrieve items because end of gallery display\");\n                    }\n\n                    // Almost reached the end, continue to load new photos\n                    endDate = lastItemTimestamp;\n                    this.setPhotoSearchQueryRunning(true);\n                    runGallerySearchTask();\n                }\n            }\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func loadMoreWhenEndReached(recyclerView: RecyclerView, dy: Int) {\n    if let gridLayoutManager = recyclerView.layoutManager as? GridLayoutManager {\n\n        // scroll down\n        if dy > 0 && !self.isPhotoSearchQueryRunning() {\n            let totalItemCount = gridLayoutManager.itemCount\n            let lastVisibleItem = gridLayoutManager.findLastCompletelyVisibleItemPosition()\n            let visibleItemCount = gridLayoutManager.childCount\n\n            if lastVisibleItem == RecyclerView.NO_POSITION {\n                return\n            }\n\n            guard let lastFile = mAdapter.getItem(lastVisibleItem - 1) else {\n                return\n            }\n            let lastItemTimestamp = lastFile.modificationTimestamp / 1000\n\n            // if we have already older media in the gallery then retrieve file in chronological order to fill the gap\n            if lastItemTimestamp < self.endDate {\n\n                if BuildConfig.DEBUG {\n                    Log_OC.d(self, \"Gallery swipe: retrieve items to check the chronology\")\n                }\n\n                self.setPhotoSearchQueryRunning(true)\n                runGallerySearchTask()\n            } else if (totalItemCount - visibleItemCount) <= (lastVisibleItem + MAX_ITEMS_PER_ROW) // no more files in the gallery, retrieve the next ones\n                && (totalItemCount - visibleItemCount) > 0 {\n\n                if BuildConfig.DEBUG {\n                    Log_OC.d(self, \"Gallery swipe: retrieve items because end of gallery display\")\n                }\n\n                // Almost reached the end, continue to load new photos\n                endDate = lastItemTimestamp\n                self.setPhotoSearchQueryRunning(true)\n                runGallerySearchTask()\n            }\n        }\n    }\n}\n```"
    },
    {
        "method_name": "updateMediaContent",
        "method_code": "@Override\n    public void updateMediaContent(GalleryFragmentBottomSheetDialog.MediaState mediaState) {\n        showAllGalleryItems();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled updateMediaContent from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: updateMediaContent\n\n        Method Code: @Override\n    public void updateMediaContent(GalleryFragmentBottomSheetDialog.MediaState mediaState) {\n        showAllGalleryItems();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func updateMediaContent(mediaState: GalleryFragmentBottomSheetDialog.MediaState) {\n    showAllGalleryItems()\n}\n```"
    },
    {
        "method_name": "selectMediaFolder",
        "method_code": "@Override\n    public void selectMediaFolder() {\n        Intent action = new Intent(requireActivity(), FolderPickerActivity.class);\n        action.putExtra(FolderPickerActivity.EXTRA_ACTION, FolderPickerActivity.CHOOSE_LOCATION);\n        startActivityForResult(action, SELECT_LOCATION_REQUEST_CODE);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled selectMediaFolder from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: selectMediaFolder\n\n        Method Code: @Override\n    public void selectMediaFolder() {\n        Intent action = new Intent(requireActivity(), FolderPickerActivity.class);\n        action.putExtra(FolderPickerActivity.EXTRA_ACTION, FolderPickerActivity.CHOOSE_LOCATION);\n        startActivityForResult(action, SELECT_LOCATION_REQUEST_CODE);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func selectMediaFolder() {\n    let action = Intent(context: requireActivity(), FolderPickerActivity.self)\n    action.putExtra(FolderPickerActivity.EXTRA_ACTION, FolderPickerActivity.CHOOSE_LOCATION)\n    startActivityForResult(action, SELECT_LOCATION_REQUEST_CODE)\n}\n```"
    },
    {
        "method_name": "showAllGalleryItems",
        "method_code": "public void showAllGalleryItems() {\n        mAdapter.showAllGalleryItems(preferences.getLastSelectedMediaFolder(),\n                                     galleryFragmentBottomSheetDialog.getCurrMediaState(),\n                                     this);\n\n        updateSubtitle(galleryFragmentBottomSheetDialog.getCurrMediaState());\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled showAllGalleryItems from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: showAllGalleryItems\n\n        Method Code: public void showAllGalleryItems() {\n        mAdapter.showAllGalleryItems(preferences.getLastSelectedMediaFolder(),\n                                     galleryFragmentBottomSheetDialog.getCurrMediaState(),\n                                     this);\n\n        updateSubtitle(galleryFragmentBottomSheetDialog.getCurrMediaState());\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc showAllGalleryItems() {\n    mAdapter.showAllGalleryItems(preferences.getLastSelectedMediaFolder(), \n                                 galleryFragmentBottomSheetDialog.getCurrMediaState(), \n                                 self)\n\n    updateSubtitle(galleryFragmentBottomSheetDialog.getCurrMediaState())\n}\n```"
    },
    {
        "method_name": "updateSubtitle",
        "method_code": "private void updateSubtitle(GalleryFragmentBottomSheetDialog.MediaState mediaState) {\n        requireActivity().runOnUiThread(() -> {\n            if (!isAdded()) {\n                return;\n            }\n\n            String subTitle = getResources().getString(R.string.subtitle_photos_videos);\n            if (mediaState == GalleryFragmentBottomSheetDialog.MediaState.MEDIA_STATE_PHOTOS_ONLY) {\n                subTitle = getResources().getString(R.string.subtitle_photos_only);\n            } else if (mediaState == GalleryFragmentBottomSheetDialog.MediaState.MEDIA_STATE_VIDEOS_ONLY) {\n                subTitle = getResources().getString(R.string.subtitle_videos_only);\n            }\n\n            if (requireActivity() instanceof ToolbarActivity toolbarActivity) {\n                toolbarActivity.updateToolbarSubtitle(subTitle);\n            }\n        });\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled updateSubtitle from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: updateSubtitle\n\n        Method Code: private void updateSubtitle(GalleryFragmentBottomSheetDialog.MediaState mediaState) {\n        requireActivity().runOnUiThread(() -> {\n            if (!isAdded()) {\n                return;\n            }\n\n            String subTitle = getResources().getString(R.string.subtitle_photos_videos);\n            if (mediaState == GalleryFragmentBottomSheetDialog.MediaState.MEDIA_STATE_PHOTOS_ONLY) {\n                subTitle = getResources().getString(R.string.subtitle_photos_only);\n            } else if (mediaState == GalleryFragmentBottomSheetDialog.MediaState.MEDIA_STATE_VIDEOS_ONLY) {\n                subTitle = getResources().getString(R.string.subtitle_videos_only);\n            }\n\n            if (requireActivity() instanceof ToolbarActivity toolbarActivity) {\n                toolbarActivity.updateToolbarSubtitle(subTitle);\n            }\n        });\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func updateSubtitle(mediaState: GalleryFragmentBottomSheetDialog.MediaState) {\n    DispatchQueue.main.async {\n        guard self.isAdded else {\n            return\n        }\n\n        var subTitle = self.getResources().getString(R.string.subtitle_photos_videos)\n        if mediaState == .MEDIA_STATE_PHOTOS_ONLY {\n            subTitle = self.getResources().getString(R.string.subtitle_photos_only)\n        } else if mediaState == .MEDIA_STATE_VIDEOS_ONLY {\n            subTitle = self.getResources().getString(R.string.subtitle_videos_only)\n        }\n\n        if let toolbarActivity = self.requireActivity() as? ToolbarActivity {\n            toolbarActivity.updateToolbarSubtitle(subTitle)\n        }\n    }\n}\n```"
    },
    {
        "method_name": "setGridViewColumns",
        "method_code": "@Override\n    protected void setGridViewColumns(float scaleFactor) {\n        // do nothing\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setGridViewColumns from GalleryFragment.java into Swift.\n\n        Input:\n\n        Method Name: setGridViewColumns\n\n        Method Code: @Override\n    protected void setGridViewColumns(float scaleFactor) {\n        // do nothing\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func setGridViewColumns(scaleFactor: Float) {\n    // do nothing\n}\n```"
    }
]