[
    {
        "method_name": "onCreate",
        "method_code": "@Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        PassCodeManager.Companion.setSecureFlag(this,true);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onCreate from RequestCredentialsActivity.java into Swift.\n\n        Input:\n\n        Method Name: onCreate\n\n        Method Code: @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        PassCodeManager.Companion.setSecureFlag(this,true);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewDidLoad() {\n    super.viewDidLoad()\n    PassCodeManager.setSecureFlag(self, true)\n}\n```"
    },
    {
        "method_name": "onActivityResult",
        "method_code": "@Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (requestCode == REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS) {\n            if (resultCode == Activity.RESULT_OK) {\n                AppPreferencesImpl.fromContext(this).setLockTimestamp(SystemClock.elapsedRealtime());\n                finishWithResult(KEY_CHECK_RESULT_TRUE);\n            } else if (resultCode == Activity.RESULT_CANCELED) {\n                finishWithResult(KEY_CHECK_RESULT_CANCEL);\n            } else {\n                Toast.makeText(this, R.string.default_credentials_wrong, Toast.LENGTH_SHORT).show();\n                requestCredentials();\n            }\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onActivityResult from RequestCredentialsActivity.java into Swift.\n\n        Input:\n\n        Method Name: onActivityResult\n\n        Method Code: @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (requestCode == REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS) {\n            if (resultCode == Activity.RESULT_OK) {\n                AppPreferencesImpl.fromContext(this).setLockTimestamp(SystemClock.elapsedRealtime());\n                finishWithResult(KEY_CHECK_RESULT_TRUE);\n            } else if (resultCode == Activity.RESULT_CANCELED) {\n                finishWithResult(KEY_CHECK_RESULT_CANCEL);\n            } else {\n                Toast.makeText(this, R.string.default_credentials_wrong, Toast.LENGTH_SHORT).show();\n                requestCredentials();\n            }\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    NotificationCenter.default.addObserver(self, selector: #selector(handleActivityResult(_:)), name: .activityResult, object: nil)\n}\n\n@objc func handleActivityResult(_ notification: Notification) {\n    guard let userInfo = notification.userInfo,\n          let requestCode = userInfo[\"requestCode\"] as? Int,\n          let resultCode = userInfo[\"resultCode\"] as? Int else { return }\n\n    if requestCode == REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS {\n        if resultCode == Activity.RESULT_OK {\n            AppPreferencesImpl.fromContext(self).setLockTimestamp(ProcessInfo.processInfo.systemUptime)\n            finishWithResult(KEY_CHECK_RESULT_TRUE)\n        } else if resultCode == Activity.RESULT_CANCELED {\n            finishWithResult(KEY_CHECK_RESULT_CANCEL)\n        } else {\n            let alert = UIAlertController(title: nil, message: NSLocalizedString(\"default_credentials_wrong\", comment: \"\"), preferredStyle: .alert)\n            alert.addAction(UIAlertAction(title: \"OK\", style: .default, handler: nil))\n            self.present(alert, animated: true, completion: nil)\n            requestCredentials()\n        }\n    }\n}\n\nfunc finishWithResult(_ result: String) {\n    // Implementation for finishing with result\n}\n\nfunc requestCredentials() {\n    // Implementation for requesting credentials\n}\n```"
    },
    {
        "method_name": "onResume",
        "method_code": "@Override\n    protected void onResume() {\n        super.onResume();\n\n        if (DeviceCredentialUtils.areCredentialsAvailable(this)) {\n            requestCredentials();\n        } else {\n            DisplayUtils.showSnackMessage(this, R.string.prefs_lock_device_credentials_not_setup);\n            finishWithResult(KEY_CHECK_RESULT_CANCEL);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onResume from RequestCredentialsActivity.java into Swift.\n\n        Input:\n\n        Method Name: onResume\n\n        Method Code: @Override\n    protected void onResume() {\n        super.onResume();\n\n        if (DeviceCredentialUtils.areCredentialsAvailable(this)) {\n            requestCredentials();\n        } else {\n            DisplayUtils.showSnackMessage(this, R.string.prefs_lock_device_credentials_not_setup);\n            finishWithResult(KEY_CHECK_RESULT_CANCEL);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n\n    if DeviceCredentialUtils.areCredentialsAvailable(self) {\n        requestCredentials()\n    } else {\n        DisplayUtils.showSnackMessage(self, message: NSLocalizedString(\"prefs_lock_device_credentials_not_setup\", comment: \"\"))\n        finishWithResult(KEY_CHECK_RESULT_CANCEL)\n    }\n}\n```"
    },
    {
        "method_name": "requestCredentials",
        "method_code": "private void requestCredentials() {\n        KeyguardManager keyguardManager = (KeyguardManager) getSystemService(Context.KEYGUARD_SERVICE);\n        if (keyguardManager != null) {\n            Intent i = keyguardManager.createConfirmDeviceCredentialIntent(null, null);\n            i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);\n            startActivityForResult(i, REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS);\n        } else {\n            Log_OC.e(TAG, \"Keyguard manager is null\");\n            finishWithResult(KEY_CHECK_RESULT_FALSE);\n        }\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled requestCredentials from RequestCredentialsActivity.java into Swift.\n\n        Input:\n\n        Method Name: requestCredentials\n\n        Method Code: private void requestCredentials() {\n        KeyguardManager keyguardManager = (KeyguardManager) getSystemService(Context.KEYGUARD_SERVICE);\n        if (keyguardManager != null) {\n            Intent i = keyguardManager.createConfirmDeviceCredentialIntent(null, null);\n            i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);\n            startActivityForResult(i, REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS);\n        } else {\n            Log_OC.e(TAG, \"Keyguard manager is null\");\n            finishWithResult(KEY_CHECK_RESULT_FALSE);\n        }\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func requestCredentials() {\n    if let keyguardManager = LAContext() as? LAContext {\n        let reason = \"Authenticate to proceed\"\n        keyguardManager.evaluatePolicy(.deviceOwnerAuthentication, localizedReason: reason) { success, error in\n            if success {\n                // Handle successful authentication\n            } else {\n                // Handle failed authentication\n                print(\"Keyguard manager is null\")\n                self.finishWithResult(KEY_CHECK_RESULT_FALSE)\n            }\n        }\n    } else {\n        print(\"Keyguard manager is null\")\n        finishWithResult(KEY_CHECK_RESULT_FALSE)\n    }\n}\n```"
    },
    {
        "method_name": "finishWithResult",
        "method_code": "private void finishWithResult(int success) {\n        Intent resultIntent = new Intent();\n        resultIntent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\n        resultIntent.putExtra(KEY_CHECK_RESULT, success);\n        setResult(Activity.RESULT_OK, resultIntent);\n        finish();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled finishWithResult from RequestCredentialsActivity.java into Swift.\n\n        Input:\n\n        Method Name: finishWithResult\n\n        Method Code: private void finishWithResult(int success) {\n        Intent resultIntent = new Intent();\n        resultIntent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\n        resultIntent.putExtra(KEY_CHECK_RESULT, success);\n        setResult(Activity.RESULT_OK, resultIntent);\n        finish();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nprivate func finishWithResult(success: Int) {\n    let resultIntent = Intent()\n    resultIntent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION)\n    resultIntent.putExtra(KEY_CHECK_RESULT, success)\n    setResult(Activity.RESULT_OK, resultIntent)\n    finish()\n}\n```"
    },
    {
        "method_name": "onDestroy",
        "method_code": "@Override\n    protected void onDestroy() {\n        PassCodeManager.Companion.setSecureFlag(this,false);\n        super.onDestroy();\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled onDestroy from RequestCredentialsActivity.java into Swift.\n\n        Input:\n\n        Method Name: onDestroy\n\n        Method Code: @Override\n    protected void onDestroy() {\n        PassCodeManager.Companion.setSecureFlag(this,false);\n        super.onDestroy();\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func viewWillDisappear(_ animated: Bool) {\n    super.viewWillDisappear(animated)\n    PassCodeManager.setSecureFlag(self, false)\n}\n```"
    }
]