[
    {
        "method_name": "run",
        "method_code": "@Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n        /// 1. check copy validity\n        if (targetParentPath.startsWith(srcPath)) {\n            return new RemoteOperationResult(ResultCode.INVALID_COPY_INTO_DESCENDANT);\n        }\n        OCFile file = getStorageManager().getFileByPath(srcPath);\n        if (file == null) {\n            return new RemoteOperationResult(ResultCode.FILE_NOT_FOUND);\n        }\n\n        /// 2. remote copy\n        String targetPath = targetParentPath + file.getFileName();\n        if (file.isFolder()) {\n            targetPath += OCFile.PATH_SEPARATOR;\n        }\n        \n        // auto rename, to allow copy\n        if (targetPath.equals(srcPath)) {\n            if (file.isFolder()) {\n                targetPath = targetParentPath + file.getFileName();\n            }\n            targetPath = UploadFileOperation.getNewAvailableRemotePath(client, targetPath, null, false);\n\n            if (file.isFolder()) {\n                targetPath += OCFile.PATH_SEPARATOR;\n            }\n        }\n        \n        RemoteOperationResult result = new CopyFileRemoteOperation(srcPath, targetPath, false).execute(client);\n\n        /// 3. local copy\n        if (result.isSuccess()) {\n            getStorageManager().copyLocalFile(file, targetPath);\n        }\n        // TODO handle ResultCode.PARTIAL_COPY_DONE in client Activity, for the moment\n\n        return result;\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled run from CopyFileOperation.java into Swift.\n\n        Input:\n\n        Method Name: run\n\n        Method Code: @Override\n    protected RemoteOperationResult run(OwnCloudClient client) {\n        /// 1. check copy validity\n        if (targetParentPath.startsWith(srcPath)) {\n            return new RemoteOperationResult(ResultCode.INVALID_COPY_INTO_DESCENDANT);\n        }\n        OCFile file = getStorageManager().getFileByPath(srcPath);\n        if (file == null) {\n            return new RemoteOperationResult(ResultCode.FILE_NOT_FOUND);\n        }\n\n        /// 2. remote copy\n        String targetPath = targetParentPath + file.getFileName();\n        if (file.isFolder()) {\n            targetPath += OCFile.PATH_SEPARATOR;\n        }\n        \n        // auto rename, to allow copy\n        if (targetPath.equals(srcPath)) {\n            if (file.isFolder()) {\n                targetPath = targetParentPath + file.getFileName();\n            }\n            targetPath = UploadFileOperation.getNewAvailableRemotePath(client, targetPath, null, false);\n\n            if (file.isFolder()) {\n                targetPath += OCFile.PATH_SEPARATOR;\n            }\n        }\n        \n        RemoteOperationResult result = new CopyFileRemoteOperation(srcPath, targetPath, false).execute(client);\n\n        /// 3. local copy\n        if (result.isSuccess()) {\n            getStorageManager().copyLocalFile(file, targetPath);\n        }\n        // TODO handle ResultCode.PARTIAL_COPY_DONE in client Activity, for the moment\n\n        return result;\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\noverride func run(client: OwnCloudClient) -> RemoteOperationResult {\n    // 1. check copy validity\n    if targetParentPath.hasPrefix(srcPath) {\n        return RemoteOperationResult(resultCode: .invalidCopyIntoDescendant)\n    }\n    guard let file = getStorageManager().getFileByPath(srcPath) else {\n        return RemoteOperationResult(resultCode: .fileNotFound)\n    }\n\n    // 2. remote copy\n    var targetPath = targetParentPath + file.getFileName()\n    if file.isFolder() {\n        targetPath += OCFile.pathSeparator\n    }\n    \n    // auto rename, to allow copy\n    if targetPath == srcPath {\n        if file.isFolder() {\n            targetPath = targetParentPath + file.getFileName()\n        }\n        targetPath = UploadFileOperation.getNewAvailableRemotePath(client: client, path: targetPath, null: nil, autoRename: false)\n\n        if file.isFolder() {\n            targetPath += OCFile.pathSeparator\n        }\n    }\n    \n    let result = CopyFileRemoteOperation(srcPath: srcPath, targetPath: targetPath, autoRename: false).execute(client: client)\n\n    // 3. local copy\n    if result.isSuccess {\n        getStorageManager().copyLocalFile(file: file, targetPath: targetPath)\n    }\n    // TODO handle ResultCode.PARTIAL_COPY_DONE in client Activity, for the moment\n\n    return result\n}\n```"
    }
]