[
    {
        "method_name": "bind",
        "method_code": "public void bind(OCShare share, ShareeListAdapterListener listener) {\n        binding.copyInternalLinkIcon\n            .getBackground()\n            .setColorFilter(ResourcesCompat.getColor(context.getResources(),\n                                                     R.color.nc_grey,\n                                                     null),\n                            PorterDuff.Mode.SRC_IN);\n        binding.copyInternalLinkIcon\n            .getDrawable()\n            .mutate()\n            .setColorFilter(ResourcesCompat.getColor(context.getResources(),\n                                                     R.color.icon_on_nc_grey,\n                                                     null),\n                            PorterDuff.Mode.SRC_IN);\n\n        if (share.isFolder()) {\n            binding.shareInternalLinkText.setText(context.getString(R.string.share_internal_link_to_folder_text));\n        } else {\n            binding.shareInternalLinkText.setText(context.getString(R.string.share_internal_link_to_file_text));\n        }\n\n        binding.copyInternalContainer.setOnClickListener(l -> listener.copyInternalLink());\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled bind from InternalShareViewHolder.java into Swift.\n\n        Input:\n\n        Method Name: bind\n\n        Method Code: public void bind(OCShare share, ShareeListAdapterListener listener) {\n        binding.copyInternalLinkIcon\n            .getBackground()\n            .setColorFilter(ResourcesCompat.getColor(context.getResources(),\n                                                     R.color.nc_grey,\n                                                     null),\n                            PorterDuff.Mode.SRC_IN);\n        binding.copyInternalLinkIcon\n            .getDrawable()\n            .mutate()\n            .setColorFilter(ResourcesCompat.getColor(context.getResources(),\n                                                     R.color.icon_on_nc_grey,\n                                                     null),\n                            PorterDuff.Mode.SRC_IN);\n\n        if (share.isFolder()) {\n            binding.shareInternalLinkText.setText(context.getString(R.string.share_internal_link_to_folder_text));\n        } else {\n            binding.shareInternalLinkText.setText(context.getString(R.string.share_internal_link_to_file_text));\n        }\n\n        binding.copyInternalContainer.setOnClickListener(l -> listener.copyInternalLink());\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc bind(share: OCShare, listener: ShareeListAdapterListener) {\n    binding.copyInternalLinkIcon.background?.setColorFilter(UIColor(named: \"nc_grey\")?.cgColor, for: .normal)\n    binding.copyInternalLinkIcon.image?.withRenderingMode(.alwaysTemplate)\n    binding.copyInternalLinkIcon.tintColor = UIColor(named: \"icon_on_nc_grey\")\n\n    if share.isFolder() {\n        binding.shareInternalLinkText.text = NSLocalizedString(\"share_internal_link_to_folder_text\", comment: \"\")\n    } else {\n        binding.shareInternalLinkText.text = NSLocalizedString(\"share_internal_link_to_file_text\", comment: \"\")\n    }\n\n    binding.copyInternalContainer.addTarget(self, action: #selector(listener.copyInternalLink), for: .touchUpInside)\n}\n```"
    }
]