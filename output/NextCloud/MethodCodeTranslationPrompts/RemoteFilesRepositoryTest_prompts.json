[
    {
        "method_name": "setUpFilesRepository",
        "method_code": "@Before\n    public void setUpFilesRepository() {\n        MockitoAnnotations.initMocks(this);\n        mFilesRepository = new RemoteFilesRepository(serviceApi);\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled setUpFilesRepository from RemoteFilesRepositoryTest.java into Swift.\n\n        Input:\n\n        Method Name: setUpFilesRepository\n\n        Method Code: @Before\n    public void setUpFilesRepository() {\n        MockitoAnnotations.initMocks(this);\n        mFilesRepository = new RemoteFilesRepository(serviceApi);\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc setUpFilesRepository() {\n    mFilesRepository = RemoteFilesRepository(serviceApi: serviceApi)\n}\n```"
    },
    {
        "method_name": "readRemoteFileReturnSuccess",
        "method_code": "@Test\n    public void readRemoteFileReturnSuccess() {\n        mFilesRepository.readRemoteFile(\"path\", baseActivity, mockedReadRemoteFileCallback);\n        verify(serviceApi).readRemoteFile(eq(\"path\"), eq(baseActivity), filesServiceCallbackCaptor.capture());\n        filesServiceCallbackCaptor.getValue().onLoaded(mOCFile);\n        verify(mockedReadRemoteFileCallback).onFileLoaded(eq(mOCFile));\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled readRemoteFileReturnSuccess from RemoteFilesRepositoryTest.java into Swift.\n\n        Input:\n\n        Method Name: readRemoteFileReturnSuccess\n\n        Method Code: @Test\n    public void readRemoteFileReturnSuccess() {\n        mFilesRepository.readRemoteFile(\"path\", baseActivity, mockedReadRemoteFileCallback);\n        verify(serviceApi).readRemoteFile(eq(\"path\"), eq(baseActivity), filesServiceCallbackCaptor.capture());\n        filesServiceCallbackCaptor.getValue().onLoaded(mOCFile);\n        verify(mockedReadRemoteFileCallback).onFileLoaded(eq(mOCFile));\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testReadRemoteFileReturnSuccess() {\n    filesRepository.readRemoteFile(path: \"path\", baseActivity: baseActivity, callback: mockedReadRemoteFileCallback)\n    verify(serviceApi).readRemoteFile(eq(\"path\"), eq(baseActivity), filesServiceCallbackCaptor.capture())\n    filesServiceCallbackCaptor.value.onLoaded(mOCFile)\n    verify(mockedReadRemoteFileCallback).onFileLoaded(eq(mOCFile))\n}\n```"
    },
    {
        "method_name": "readRemoteFileReturnError",
        "method_code": "@Test\n    public void readRemoteFileReturnError() {\n        mFilesRepository.readRemoteFile(\"path\", baseActivity, mockedReadRemoteFileCallback);\n        verify(serviceApi).readRemoteFile(eq(\"path\"), eq(baseActivity), filesServiceCallbackCaptor.capture());\n        filesServiceCallbackCaptor.getValue().onError(\"error\");\n        verify(mockedReadRemoteFileCallback).onFileLoadError(eq(\"error\"));\n    }",
        "prompt": "\n        Please translate the following Java (Android) method titled readRemoteFileReturnError from RemoteFilesRepositoryTest.java into Swift.\n\n        Input:\n\n        Method Name: readRemoteFileReturnError\n\n        Method Code: @Test\n    public void readRemoteFileReturnError() {\n        mFilesRepository.readRemoteFile(\"path\", baseActivity, mockedReadRemoteFileCallback);\n        verify(serviceApi).readRemoteFile(eq(\"path\"), eq(baseActivity), filesServiceCallbackCaptor.capture());\n        filesServiceCallbackCaptor.getValue().onError(\"error\");\n        verify(mockedReadRemoteFileCallback).onFileLoadError(eq(\"error\"));\n    }\n\n        Abstract Syntax Tree: AST not available\n\n        Output Requirement: Return only the translated Swift code. No additional details, explanation, or formatting is required.\n        ",
        "translateMethod": "```swift\nfunc testReadRemoteFileReturnError() {\n    filesRepository.readRemoteFile(path: \"path\", baseActivity: baseActivity, callback: mockedReadRemoteFileCallback)\n    verify(serviceApi).readRemoteFile(eq(\"path\"), eq(baseActivity), filesServiceCallbackCaptor.capture())\n    filesServiceCallbackCaptor.value?.onError(\"error\")\n    verify(mockedReadRemoteFileCallback).onFileLoadError(eq(\"error\"))\n}\n```"
    }
]